[
    {
        "commit_message": "init v0 code (version 17)",
        "added_files": {
            ".gitignore": "# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.\n\n# dependencies\n/node_modules\n\n# next.js\n/.next/\n/out/\n\n# production\n/build\n\n# debug\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\n.pnpm-debug.log*\n\n# env files\n.env*\n\n# vercel\n.vercel\n\n# typescript\n*.tsbuildinfo\nnext-env.d.ts",
            "app/globals.css": "@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\nbody {\n  font-family: Arial, Helvetica, sans-serif;\n}\n\n@layer utilities {\n  .text-balance {\n    text-wrap: balance;\n  }\n}\n\n@layer base {\n  :root {\n    --background: 0 0% 100%;\n    --foreground: 0 0% 3.9%;\n    --card: 0 0% 100%;\n    --card-foreground: 0 0% 3.9%;\n    --popover: 0 0% 100%;\n    --popover-foreground: 0 0% 3.9%;\n    --primary: 0 0% 9%;\n    --primary-foreground: 0 0% 98%;\n    --secondary: 0 0% 96.1%;\n    --secondary-foreground: 0 0% 9%;\n    --muted: 0 0% 96.1%;\n    --muted-foreground: 0 0% 45.1%;\n    --accent: 0 0% 96.1%;\n    --accent-foreground: 0 0% 9%;\n    --destructive: 0 84.2% 60.2%;\n    --destructive-foreground: 0 0% 98%;\n    --border: 0 0% 89.8%;\n    --input: 0 0% 89.8%;\n    --ring: 0 0% 3.9%;\n    --chart-1: 12 76% 61%;\n    --chart-2: 173 58% 39%;\n    --chart-3: 197 37% 24%;\n    --chart-4: 43 74% 66%;\n    --chart-5: 27 87% 67%;\n    --radius: 0.5rem;\n    --sidebar-background: 0 0% 98%;\n    --sidebar-foreground: 240 5.3% 26.1%;\n    --sidebar-primary: 240 5.9% 10%;\n    --sidebar-primary-foreground: 0 0% 98%;\n    --sidebar-accent: 240 4.8% 95.9%;\n    --sidebar-accent-foreground: 240 5.9% 10%;\n    --sidebar-border: 220 13% 91%;\n    --sidebar-ring: 217.2 91.2% 59.8%;\n  }\n  .dark {\n    --background: 0 0% 3.9%;\n    --foreground: 0 0% 98%;\n    --card: 0 0% 3.9%;\n    --card-foreground: 0 0% 98%;\n    --popover: 0 0% 3.9%;\n    --popover-foreground: 0 0% 98%;\n    --primary: 0 0% 98%;\n    --primary-foreground: 0 0% 9%;\n    --secondary: 0 0% 14.9%;\n    --secondary-foreground: 0 0% 98%;\n    --muted: 0 0% 14.9%;\n    --muted-foreground: 0 0% 63.9%;\n    --accent: 0 0% 14.9%;\n    --accent-foreground: 0 0% 98%;\n    --destructive: 0 62.8% 30.6%;\n    --destructive-foreground: 0 0% 98%;\n    --border: 0 0% 14.9%;\n    --input: 0 0% 14.9%;\n    --ring: 0 0% 83.1%;\n    --chart-1: 220 70% 50%;\n    --chart-2: 160 60% 45%;\n    --chart-3: 30 80% 55%;\n    --chart-4: 280 65% 60%;\n    --chart-5: 340 75% 55%;\n    --sidebar-background: 240 5.9% 10%;\n    --sidebar-foreground: 240 4.8% 95.9%;\n    --sidebar-primary: 224.3 76.3% 48%;\n    --sidebar-primary-foreground: 0 0% 100%;\n    --sidebar-accent: 240 3.7% 15.9%;\n    --sidebar-accent-foreground: 240 4.8% 95.9%;\n    --sidebar-border: 240 3.7% 15.9%;\n    --sidebar-ring: 217.2 91.2% 59.8%;\n  }\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n  body {\n    @apply bg-background text-foreground;\n  }\n}",
            "app/habits/add/page.tsx": "\"use client\"\n\nimport { useState } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Checkbox } from \"@/components/ui/checkbox\"\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\"\nimport { Label } from \"@/components/ui/label\"\nimport { ArrowLeft, ArrowRight, Check, Clock, Link, ArrowUp, ArrowDown, Sparkles, Heart, Target } from \"lucide-react\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { useToast } from \"@/hooks/use-toast\"\nimport { Toaster } from \"@/components/ui/toaster\"\n\ninterface MicroBehavior {\n  id: string\n  title: string\n  description: string\n  selected: boolean\n}\n\ninterface AnchorOption {\n  id: string\n  label: string\n  description: string\n}\n\nexport default function AddHabitPage() {\n  const [currentStep, setCurrentStep] = useState(1)\n  const [habitName, setHabitName] = useState(\"\")\n  const [habitDescription, setHabitDescription] = useState(\"\")\n  const [selectedMicroBehaviors, setSelectedMicroBehaviors] = useState<MicroBehavior[]>([])\n  const [reminderSettings, setReminderSettings] = useState<{ [key: string]: any }>({})\n  const { toast } = useToast()\n  const [expandedCards, setExpandedCards] = useState<{ [key: string]: boolean }>({})\n  const [isLoadingRecommendations, setIsLoadingRecommendations] = useState(false)\n\n  // 模拟推荐的微行为\n  const recommendedMicroBehaviors: MicroBehavior[] = [\n    {\n      id: \"1\",\n      title: \"打开书本\",\n      description: \"每天只需要打开一本书，翻到任意一页\",\n      selected: false,\n    },\n    {\n      id: \"2\",\n      title: \"阅读一段话\",\n      description: \"读完一个段落就算完成\",\n      selected: false,\n    },\n    {\n      id: \"3\",\n      title: \"阅读2分钟\",\n      description: \"设置计时器，专注阅读2分钟\",\n      selected: false,\n    },\n    {\n      id: \"4\",\n      title: \"准备阅读环境\",\n      description: \"找一个安静的地方，准备好书本和水杯\",\n      selected: false,\n    },\n    {\n      id: \"5\",\n      title: \"记录一个想法\",\n      description: \"阅读后写下一句话的感受或想法\",\n      selected: false,\n    },\n    {\n      id: \"6\",\n      title: \"朗读一句话\",\n      description: \"大声朗读书中的任意一句话\",\n      selected: false,\n    },\n    {\n      id: \"7\",\n      title: \"标记一个重点\",\n      description: \"用笔或便签标记一个有趣的内容\",\n      selected: false,\n    },\n    {\n      id: \"8\",\n      title: \"翻阅目录\",\n      description: \"浏览书本目录，选择感兴趣的章节\",\n      selected: false,\n    },\n    {\n      id: \"9\",\n      title: \"设置阅读提醒\",\n      description: \"在手机上设置明天的阅读提醒\",\n      selected: false,\n    },\n    {\n      id: \"10\",\n      title: \"分享阅读计划\",\n      description: \"告诉朋友或家人你今天的阅读计划\",\n      selected: false,\n    },\n  ]\n\n  const anchorOptions: AnchorOption[] = [\n    { id: \"morning-brush\", label: \"早上刷牙后\", description: \"利用晨间例行公事\" },\n    { id: \"coffee\", label: \"喝咖啡/茶时\", description: \"与日常饮品习惯结合\" },\n    { id: \"lunch-break\", label: \"午休时间\", description: \"利用工作间隙\" },\n    { id: \"before-sleep\", label: \"睡前\", description: \"作为放松活动\" },\n    { id: \"commute\", label: \"通勤路上\", description: \"利用交通时间\" },\n  ]\n\n  const handleMicroBehaviorToggle = (behaviorId: string) => {\n    const selectedCount = selectedMicroBehaviors.filter((b) => b.selected).length\n    const behavior = selectedMicroBehaviors.find((b) => b.id === behaviorId)\n\n    // 如果要选择第4个，显示toast提示\n    if (!behavior?.selected && selectedCount >= 3) {\n      toast({\n        title: \"选择数量已达上限\",\n        description: \"最多只能选择3个微行为，请先取消其他选择。\",\n        variant: \"destructive\",\n      })\n      return\n    }\n\n    setSelectedMicroBehaviors((prev) =>\n      prev.map((behavior) => (behavior.id === behaviorId ? { ...behavior, selected: !behavior.selected } : behavior)),\n    )\n  }\n\n  const initializeMicroBehaviors = () => {\n    if (selectedMicroBehaviors.length === 0) {\n      setSelectedMicroBehaviors(recommendedMicroBehaviors)\n      // 初始化所有选中的微行为卡片为展开状态\n      const initialExpandedState: { [key: string]: boolean } = {}\n      recommendedMicroBehaviors.forEach((behavior) => {\n        if (behavior.selected) {\n          initialExpandedState[behavior.id] = true\n        }\n      })\n      setExpandedCards(initialExpandedState)\n    }\n  }\n\n  const handleNextStep = async () => {\n    if (currentStep === 1) {\n      setIsLoadingRecommendations(true)\n      setCurrentStep(2)\n      // 模拟系统推荐微行为的等待时间\n      await new Promise((resolve) => setTimeout(resolve, 2000))\n      initializeMicroBehaviors()\n      setIsLoadingRecommendations(false)\n    } else if (currentStep === 2) {\n      const selectedCount = selectedMicroBehaviors.filter((b) => b.selected).length\n      if (selectedCount === 0) {\n        toast({\n          title: \"请选择微行为\",\n          description: \"至少需要选择1个微行为才能继续。\",\n          variant: \"destructive\",\n        })\n        return\n      }\n      // 为选中的微行为初始化展开状态和默认提醒设置\n      const initialExpandedState: { [key: string]: boolean } = {}\n      const initialReminderSettings: { [key: string]: any } = { ...reminderSettings }\n\n      selectedMicroBehaviors\n        .filter((b) => b.selected)\n        .forEach((behavior) => {\n          initialExpandedState[behavior.id] = true\n          // 如果该微行为还没有提醒设置，初始化为默认的自然提醒\n          if (!initialReminderSettings[behavior.id]) {\n            initialReminderSettings[behavior.id] = { type: \"anchor\" }\n          }\n        })\n\n      setExpandedCards(initialExpandedState)\n      setReminderSettings(initialReminderSettings)\n      setCurrentStep(3)\n    } else if (currentStep === 3) {\n      // 完成创建，进入第4步（完成页面）\n      setCurrentStep(4)\n    }\n  }\n\n  const handlePrevStep = () => {\n    setCurrentStep((prev) => Math.max(prev - 1, 1))\n  }\n\n  const handleComplete = () => {\n    // 导航到习惯列表页或今日行动页\n    window.location.href = \"/habits\"\n  }\n\n  const toggleCardExpanded = (behaviorId: string) => {\n    setExpandedCards((prev) => ({\n      ...prev,\n      [behaviorId]: !prev[behaviorId],\n    }))\n  }\n\n  const getReminderText = (behaviorId: string) => {\n    const setting = reminderSettings[behaviorId]\n    if (!setting || !setting.type) {\n      return \"未设置提醒\"\n    }\n\n    if (setting.type === \"anchor\") {\n      if (setting.anchor) {\n        const anchorOption = anchorOptions.find((option) => option.id === setting.anchor)\n        return `${anchorOption?.label || \"未知锚点\"}`\n      }\n      return \"自然提醒（未选择锚点）\"\n    } else if (setting.type === \"timer\") {\n      if (setting.time) {\n        return `每天 ${setting.time}`\n      }\n      return \"定时提醒（未选择时间）\"\n    }\n\n    return \"未设置提醒\"\n  }\n\n  const renderStep1 = () => (\n    <div className=\"space-y-6\">\n      <div className=\"text-center mb-6\">\n        <h1 className=\"text-xl font-bold text-[#292F36] mb-2\">创建新习惯</h1>\n        <p className=\"text-sm text-[#5A6872]\">第1步：定义你的习惯</p>\n      </div>\n\n      <div className=\"space-y-4\">\n        <div>\n          <Label htmlFor=\"habit-name\" className=\"text-[#292F36] font-medium\">\n            习惯名称\n          </Label>\n          <Input\n            id=\"habit-name\"\n            value={habitName}\n            onChange={(e) => setHabitName(e.target.value)}\n            placeholder=\"我想养成的好习惯是...\"\n            className=\"mt-2 border-[#D8DEE9] focus:border-[#69B578]\"\n          />\n        </div>\n\n        <div>\n          <Label htmlFor=\"habit-description\" className=\"text-[#292F36] font-medium\">\n            习惯描述 (可选)\n          </Label>\n          <Textarea\n            id=\"habit-description\"\n            value={habitDescription}\n            onChange={(e) => setHabitDescription(e.target.value)}\n            placeholder=\"我为什么想养成这个习惯？它对我有什么意义？\"\n            className=\"mt-2 border-[#D8DEE9] focus:border-[#69B578] min-h-[100px]\"\n          />\n        </div>\n      </div>\n\n      <div className=\"flex justify-between pt-4\">\n        <Button variant=\"ghost\" className=\"text-[#5A6872]\" onClick={() => window.history.back()}>\n          <ArrowLeft className=\"w-4 h-4 mr-2\" />\n          取消\n        </Button>\n        <Button\n          onClick={handleNextStep}\n          disabled={!habitName.trim()}\n          className=\"bg-[#69B578] hover:bg-[#5a9a68] text-white\"\n        >\n          下一步\n          <ArrowRight className=\"w-4 h-4 ml-2\" />\n        </Button>\n      </div>\n    </div>\n  )\n\n  const renderLoadingStep2 = () => (\n    <div className=\"space-y-6\">\n      <div className=\"text-center mb-6\">\n        <h1 className=\"text-xl font-bold text-[#292F36] mb-2\">创建新习惯</h1>\n        <p className=\"text-sm text-[#5A6872]\">第2步：设计你的微行动</p>\n      </div>\n\n      <Card className=\"border-[#D8DEE9] bg-[#EBF2FA]\">\n        <CardContent className=\"p-4\">\n          <p className=\"text-sm text-[#5A6872]\">习惯：</p>\n          <p className=\"font-medium text-[#292F36]\">{habitName}</p>\n        </CardContent>\n      </Card>\n\n      <div className=\"flex flex-col items-center justify-center py-16\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-[#69B578] mb-6\"></div>\n        <h3 className=\"text-lg font-medium text-[#292F36] mb-2\">正在为您推荐微行为...</h3>\n        <p className=\"text-sm text-[#5A6872] text-center leading-relaxed\">\n          基于您的习惯目标，我们正在分析并推荐\n          <br />\n          最适合的微行为组合\n        </p>\n      </div>\n    </div>\n  )\n\n  const renderStep2 = () => (\n    <div className=\"space-y-6\">\n      <div className=\"text-center mb-6\">\n        <h1 className=\"text-xl font-bold text-[#292F36] mb-2\">创建新习惯</h1>\n        <p className=\"text-sm text-[#5A6872]\">第2步：设计你的微行动</p>\n      </div>\n\n      <Card className=\"border-[#D8DEE9] bg-[#EBF2FA]\">\n        <CardContent className=\"p-4\">\n          <p className=\"text-sm text-[#5A6872]\">习惯：</p>\n          <p className=\"font-medium text-[#292F36]\">{habitName}</p>\n        </CardContent>\n      </Card>\n\n      <div>\n        <div className=\"flex justify-between items-center mb-4\">\n          <h3 className=\"font-medium text-[#292F36]\">推荐的微行为</h3>\n          <span className=\"text-sm text-[#5A6872]\">\n            已选择 {selectedMicroBehaviors.filter((b) => b.selected).length}/3\n          </span>\n        </div>\n        <p className=\"text-sm text-[#5A6872] mb-4\">选择1-3个简单易行的微行为，让习惯更容易坚持</p>\n\n        <div className=\"space-y-3\">\n          {selectedMicroBehaviors.map((behavior) => (\n            <Card key={behavior.id} className=\"border-[#D8DEE9]\">\n              <CardContent\n                className=\"p-4 cursor-pointer hover:bg-gray-50 transition-colors\"\n                onClick={() => handleMicroBehaviorToggle(behavior.id)}\n              >\n                <div className=\"flex items-start space-x-3\">\n                  <Checkbox\n                    id={behavior.id}\n                    checked={behavior.selected}\n                    onCheckedChange={() => handleMicroBehaviorToggle(behavior.id)}\n                    className=\"mt-1 pointer-events-none\"\n                  />\n                  <div className=\"flex-1\">\n                    <Label\n                      htmlFor={behavior.id}\n                      className=\"font-medium cursor-pointer text-[#292F36] pointer-events-none\"\n                    >\n                      {behavior.title}\n                    </Label>\n                    <p className=\"text-sm text-[#5A6872] mt-1 pointer-events-none\">{behavior.description}</p>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"flex justify-between pt-4\">\n        <Button variant=\"ghost\" onClick={handlePrevStep} className=\"text-[#5A6872]\">\n          <ArrowLeft className=\"w-4 h-4 mr-2\" />\n          上一步\n        </Button>\n        <Button onClick={handleNextStep} className=\"bg-[#69B578] hover:bg-[#5a9a68] text-white\">\n          下一步\n          <ArrowRight className=\"w-4 h-4 ml-2\" />\n        </Button>\n      </div>\n    </div>\n  )\n\n  const getReminderDisplayText = (behaviorId: string) => {\n    const setting = reminderSettings[behaviorId]\n    if (!setting || !setting.type) {\n      return \"需要设置提醒方式\"\n    }\n\n    if (setting.type === \"anchor\") {\n      if (setting.anchor) {\n        const anchorOption = anchorOptions.find((option) => option.id === setting.anchor)\n        return `自然提醒：${anchorOption?.label || \"未选择锚点\"}`\n      }\n      return \"自然提醒（未选择锚点）\"\n    } else if (setting.type === \"timer\") {\n      if (setting.time) {\n        return `定时提醒：${setting.time}`\n      }\n      return \"定时提醒（未选择时间）\"\n    }\n\n    return \"需要设置提醒方式\"\n  }\n\n  const renderStep3 = () => (\n    <div className=\"space-y-6\">\n      <div className=\"text-center mb-6\">\n        <h1 className=\"text-xl font-bold text-[#292F36] mb-2\">创建新习惯</h1>\n        <p className=\"text-sm text-[#5A6872]\">第3步：设置提醒</p>\n      </div>\n\n      <div className=\"space-y-6\">\n        {selectedMicroBehaviors\n          .filter((behavior) => behavior.selected)\n          .map((behavior) => (\n            <Card key={behavior.id} className=\"border-[#D8DEE9]\">\n              {expandedCards[behavior.id] ? (\n                // 展开状态 - 完整编辑界面\n                <>\n                  <CardHeader\n                    className=\"pb-3 cursor-pointer hover:bg-gray-50 transition-colors\"\n                    onClick={() => toggleCardExpanded(behavior.id)}\n                  >\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex-1\">\n                        <CardTitle className=\"text-base text-[#292F36]\">{behavior.title}</CardTitle>\n                        <p className=\"text-sm text-[#5A6872]\">{behavior.description}</p>\n                      </div>\n                      <div className=\"ml-2\">\n                        <ArrowUp className=\"w-4 h-4 text-[#5A6872]\" />\n                      </div>\n                    </div>\n                  </CardHeader>\n                  <CardContent className=\"space-y-4\">\n                    <div>\n                      <Label className=\"text-[#292F36] font-medium mb-3 block\">选择提醒方式</Label>\n                      <RadioGroup\n                        value={reminderSettings[behavior.id]?.type || \"anchor\"}\n                        onValueChange={(value) =>\n                          setReminderSettings((prev) => ({\n                            ...prev,\n                            [behavior.id]: { ...prev[behavior.id], type: value },\n                          }))\n                        }\n                      >\n                        <div className=\"space-y-3\">\n                          <Card className=\"border-[#81ACDA] bg-blue-50\">\n                            <CardContent className=\"p-3\">\n                              <div className=\"flex items-center space-x-2\">\n                                <RadioGroupItem value=\"anchor\" id={`anchor-${behavior.id}`} />\n                                <Label htmlFor={`anchor-${behavior.id}`} className=\"flex-1 cursor-pointer\">\n                                  <div className=\"flex items-center\">\n                                    <Link className=\"w-4 h-4 mr-2 text-[#81ACDA]\" />\n                                    <span className=\"font-medium text-[#292F36]\">自然提醒（推荐）</span>\n                                  </div>\n                                  <p className=\"text-sm text-[#5A6872] mt-1\">与现有习惯关联，更容易记住</p>\n                                </Label>\n                              </div>\n                            </CardContent>\n                          </Card>\n\n                          <Card className=\"border-[#D8DEE9]\">\n                            <CardContent className=\"p-3\">\n                              <div className=\"flex items-center space-x-2\">\n                                <RadioGroupItem value=\"timer\" id={`timer-${behavior.id}`} />\n                                <Label htmlFor={`timer-${behavior.id}`} className=\"flex-1 cursor-pointer\">\n                                  <div className=\"flex items-center\">\n                                    <Clock className=\"w-4 h-4 mr-2 text-[#5A6872]\" />\n                                    <span className=\"font-medium text-[#292F36]\">定时提醒</span>\n                                  </div>\n                                  <p className=\"text-sm text-[#5A6872] mt-1\">设置固定时间提醒</p>\n                                </Label>\n                              </div>\n                            </CardContent>\n                          </Card>\n                        </div>\n                      </RadioGroup>\n                    </div>\n\n                    <div>\n                      {reminderSettings[behavior.id]?.type === \"timer\" ? (\n                        <>\n                          <Label className=\"text-[#292F36] font-medium\">选择提醒时间</Label>\n                          <Select\n                            onValueChange={(value) =>\n                              setReminderSettings((prev) => ({\n                                ...prev,\n                                [behavior.id]: { ...prev[behavior.id], time: value },\n                              }))\n                            }\n                            value={reminderSettings[behavior.id]?.time}\n                          >\n                            <SelectTrigger className=\"mt-2 border-[#D8DEE9]\">\n                              <SelectValue placeholder=\"选择每天的提醒时间\" />\n                            </SelectTrigger>\n                            <SelectContent>\n                              <SelectItem value=\"06:00\">早上 6:00</SelectItem>\n                              <SelectItem value=\"07:00\">早上 7:00</SelectItem>\n                              <SelectItem value=\"08:00\">早上 8:00</SelectItem>\n                              <SelectItem value=\"09:00\">早上 9:00</SelectItem>\n                              <SelectItem value=\"12:00\">中午 12:00</SelectItem>\n                              <SelectItem value=\"18:00\">下午 6:00</SelectItem>\n                              <SelectItem value=\"19:00\">下午 7:00</SelectItem>\n                              <SelectItem value=\"20:00\">下午 8:00</SelectItem>\n                              <SelectItem value=\"21:00\">下午 9:00</SelectItem>\n                              <SelectItem value=\"22:00\">下午 10:00</SelectItem>\n                            </SelectContent>\n                          </Select>\n                        </>\n                      ) : (\n                        <>\n                          <Label className=\"text-[#292F36] font-medium\">选择锚点习惯</Label>\n                          <Select\n                            onValueChange={(value) =>\n                              setReminderSettings((prev) => ({\n                                ...prev,\n                                [behavior.id]: { ...prev[behavior.id], anchor: value },\n                              }))\n                            }\n                            value={reminderSettings[behavior.id]?.anchor}\n                          >\n                            <SelectTrigger className=\"mt-2 border-[#D8DEE9]\">\n                              <SelectValue placeholder=\"选择一个现有的日常习惯\" />\n                            </SelectTrigger>\n                            <SelectContent>\n                              {anchorOptions.map((option) => (\n                                <SelectItem key={option.id} value={option.id}>\n                                  <div>\n                                    <div className=\"font-medium\">{option.label}</div>\n                                    <div className=\"text-sm text-[#5A6872]\">{option.description}</div>\n                                  </div>\n                                </SelectItem>\n                              ))}\n                            </SelectContent>\n                          </Select>\n                        </>\n                      )}\n                    </div>\n                  </CardContent>\n                </>\n              ) : (\n                // 收起状态 - 简略只读信息\n                <CardContent\n                  className=\"p-4 cursor-pointer hover:bg-gray-50 transition-colors\"\n                  onClick={() => toggleCardExpanded(behavior.id)}\n                >\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex-1\">\n                      <div className=\"flex items-center justify-between mb-2\">\n                        <h4 className=\"font-medium text-[#292F36]\">{behavior.title}</h4>\n                        <ArrowDown className=\"w-4 h-4 text-[#5A6872]\" />\n                      </div>\n                      <p className=\"text-sm text-[#5A6872] mb-2\">{behavior.description}</p>\n                      <div className=\"flex items-center\">\n                        <span className=\"text-xs text-[#5A6872] mr-2\">提醒方式:</span>\n                        <span\n                          className={`text-xs ${\n                            reminderSettings[behavior.id]?.type ? \"text-[#69B578]\" : \"text-[#E5B061]\"\n                          }`}\n                        >\n                          {getReminderDisplayText(behavior.id)}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                </CardContent>\n              )}\n            </Card>\n          ))}\n      </div>\n\n      <div className=\"flex justify-between pt-4\">\n        <Button variant=\"ghost\" onClick={handlePrevStep} className=\"text-[#5A6872]\">\n          <ArrowLeft className=\"w-4 h-4 mr-2\" />\n          上一步\n        </Button>\n        <Button onClick={handleNextStep} className=\"bg-[#E5B061] hover:bg-[#d49d4f] text-white\">\n          <Check className=\"w-4 h-4 mr-2\" />\n          完成创建\n        </Button>\n      </div>\n    </div>\n  )\n\n  const renderStep4 = () => (\n    <div className=\"space-y-6\">\n      {/* 成功标识 */}\n      <div className=\"text-center mb-6\">\n        <div className=\"relative mx-auto w-16 h-16 mb-4\">\n          <div className=\"absolute inset-0 bg-[#69B578] rounded-full flex items-center justify-center\">\n            <Check className=\"w-8 h-8 text-white\" />\n          </div>\n          <div className=\"absolute -top-2 -right-2\">\n            <Sparkles className=\"w-6 h-6 text-[#E5B061]\" />\n          </div>\n        </div>\n\n        <h1 className=\"text-xl font-bold text-[#292F36] mb-1\">🎉 太棒了！</h1>\n        <p className=\"text-[#5A6872] mb-1\">你的新习惯已经创建成功</p>\n        <p className=\"text-sm text-[#81ACDA] flex items-center justify-center\">\n          <Heart className=\"w-4 h-4 mr-1\" />\n          每一个小行动都是改变的开始\n        </p>\n      </div>\n\n      {/* 习惯信息和微行为计划合并卡片 */}\n      <Card className=\"border-[#69B578] border-2 mb-6 bg-gradient-to-br from-white to-[#EBF2FA]\">\n        <CardHeader className=\"pb-3\">\n          <div className=\"flex items-center mb-2\">\n            <Target className=\"w-5 h-5 text-[#69B578] mr-2\" />\n            <CardTitle className=\"text-lg text-[#292F36]\">你的新习惯</CardTitle>\n          </div>\n          <div>\n            <h3 className=\"font-bold text-[#292F36] text-lg mb-2\">{habitName}</h3>\n            {habitDescription && <p className=\"text-[#5A6872] text-sm leading-relaxed mb-4\">{habitDescription}</p>}\n          </div>\n\n          <div className=\"flex items-center mt-4 mb-2\">\n            <Sparkles className=\"w-5 h-5 mr-2 text-[#E5B061]\" />\n            <h2 className=\"text-lg font-bold text-[#292F36]\">你的微行动计划</h2>\n          </div>\n        </CardHeader>\n\n        <CardContent className=\"pt-0 space-y-2\">\n          {selectedMicroBehaviors\n            .filter((behavior) => behavior.selected)\n            .map((behavior, index) => (\n              <div key={behavior.id} className=\"bg-gray-50/80 rounded-lg p-2.5\">\n                <div className=\"flex items-start space-x-2.5\">\n                  <div className=\"flex-shrink-0 w-4 h-4 bg-[#69B578] rounded-full flex items-center justify-center text-white text-xs font-medium\">\n                    {index + 1}\n                  </div>\n                  <div className=\"flex-1\">\n                    <h4 className=\"font-medium text-[#292F36] mb-1 text-sm\">{behavior.title}</h4>\n                    <p className=\"text-xs text-[#5A6872] mb-1.5\">{behavior.description}</p>\n\n                    <div className=\"flex items-center text-xs\">\n                      <span className=\"text-[#5A6872] mr-1.5\">📅 提醒方式:</span>\n                      <span className=\"text-[#69B578] font-medium\">{getReminderText(behavior.id)}</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n        </CardContent>\n      </Card>\n\n      {/* 鼓励文案 */}\n      <Card className=\"border-[#E5B061] bg-gradient-to-r from-[#E5B061]/10 to-[#69B578]/10 mb-6\">\n        <CardContent className=\"p-3 text-center\">\n          <p className=\"text-[#292F36] font-medium mb-2 text-sm\">✨ 记住福格行为模型的秘诀</p>\n          <p className=\"text-sm text-[#5A6872] leading-relaxed\">\n            从小事开始，利用现有习惯作为提醒，持续的小行动会带来巨大的改变！\n          </p>\n        </CardContent>\n      </Card>\n\n      {/* 完成按钮 */}\n      <Button\n        onClick={handleComplete}\n        className=\"w-full bg-[#69B578] hover:bg-[#5a9a68] text-white py-2 text-lg font-medium\"\n      >\n        开始我的习惯之旅 🚀\n      </Button>\n\n      {/* 底部提示 */}\n      <p className=\"text-center text-xs text-[#5A6872] mt-4\">你可以随时在习惯列表中查看和调整你的微行为</p>\n    </div>\n  )\n\n  return (\n    <div className=\"min-h-screen bg-[#EBF2FA] p-4\">\n      <div className=\"max-w-md mx-auto\">\n        {/* 进度指示器 - 只在前3步显示 */}\n        {currentStep <= 3 && (\n          <div className=\"flex justify-center mb-6\">\n            <div className=\"flex items-center space-x-2\">\n              {[1, 2, 3].map((step) => (\n                <div key={step} className=\"flex items-center\">\n                  <div\n                    className={`w-8 h-8 rounded-full flex items-center justify-center text-sm font-medium ${\n                      step <= currentStep ? \"bg-[#69B578] text-white\" : \"bg-[#D8DEE9] text-[#5A6872]\"\n                    }`}\n                  >\n                    {step < currentStep ? <Check className=\"w-4 h-4\" /> : step}\n                  </div>\n                  {step < 3 && <div className={`w-8 h-0.5 ${step < currentStep ? \"bg-[#69B578]\" : \"bg-[#D8DEE9]\"}`} />}\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* 步骤内容 */}\n        {currentStep <= 3 ? (\n          <Card className=\"border-[#D8DEE9] shadow-sm\">\n            <CardContent className=\"p-6\">\n              {currentStep === 1 && renderStep1()}\n              {currentStep === 2 && isLoadingRecommendations && renderLoadingStep2()}\n              {currentStep === 2 && !isLoadingRecommendations && renderStep2()}\n              {currentStep === 3 && renderStep3()}\n            </CardContent>\n          </Card>\n        ) : (\n          // 第4步不需要卡片包装，直接渲染内容\n          renderStep4()\n        )}\n        <Toaster />\n      </div>\n    </div>\n  )\n}",
            "app/layout.tsx": "import type { Metadata } from 'next'\nimport './globals.css'\n\nexport const metadata: Metadata = {\n  title: 'v0 App',\n  description: 'Created with v0',\n  generator: 'v0.dev',\n}\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode\n}>) {\n  return (\n    <html lang=\"en\">\n      <body>{children}</body>\n    </html>\n  )\n}",
            "components.json": "{\n  \"$schema\": \"https://ui.shadcn.com/schema.json\",\n  \"style\": \"default\",\n  \"rsc\": true,\n  \"tsx\": true,\n  \"tailwind\": {\n    \"config\": \"tailwind.config.ts\",\n    \"css\": \"app/globals.css\",\n    \"baseColor\": \"neutral\",\n    \"cssVariables\": true,\n    \"prefix\": \"\"\n  },\n  \"aliases\": {\n    \"components\": \"@/components\",\n    \"utils\": \"@/lib/utils\",\n    \"ui\": \"@/components/ui\",\n    \"lib\": \"@/lib\",\n    \"hooks\": \"@/hooks\"\n  },\n  \"iconLibrary\": \"lucide\"\n}",
            "components/theme-provider.tsx": "'use client'\n\nimport * as React from 'react'\nimport {\n  ThemeProvider as NextThemesProvider,\n  type ThemeProviderProps,\n} from 'next-themes'\n\nexport function ThemeProvider({ children, ...props }: ThemeProviderProps) {\n  return <NextThemesProvider {...props}>{children}</NextThemesProvider>\n}",
            "components/ui/accordion.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }",
            "components/ui/alert-dialog.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}",
            "components/ui/alert.tsx": "import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }",
            "components/ui/aspect-ratio.tsx": "\"use client\"\n\nimport * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }",
            "components/ui/avatar.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }",
            "components/ui/badge.tsx": "import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }",
            "components/ui/breadcrumb.tsx": "import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}",
            "components/ui/button.tsx": "import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }",
            "components/ui/calendar.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ ...props }) => <ChevronLeft className=\"h-4 w-4\" />,\n        IconRight: ({ ...props }) => <ChevronRight className=\"h-4 w-4\" />,\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }",
            "components/ui/card.tsx": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }",
            "components/ui/carousel.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}",
            "components/ui/chart.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([_, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item.dataKey || item.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}",
            "components/ui/checkbox.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }",
            "components/ui/collapsible.tsx": "\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }",
            "components/ui/command.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}",
            "components/ui/context-menu.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}",
            "components/ui/dialog.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}",
            "components/ui/drawer.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}",
            "components/ui/dropdown-menu.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}",
            "components/ui/form.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  ControllerProps,\n  FieldPath,\n  FieldValues,\n  FormProvider,\n  useFormContext,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message) : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}",
            "components/ui/hover-card.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }",
            "components/ui/input-otp.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }",
            "components/ui/input.tsx": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }",
            "components/ui/label.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }",
            "components/ui/menubar.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst MenubarMenu = MenubarPrimitive.Menu\n\nconst MenubarGroup = MenubarPrimitive.Group\n\nconst MenubarPortal = MenubarPrimitive.Portal\n\nconst MenubarSub = MenubarPrimitive.Sub\n\nconst MenubarRadioGroup = MenubarPrimitive.RadioGroup\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}",
            "components/ui/navigation-menu.tsx": "import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[active]:bg-accent/50 data-[state=open]:bg-accent/50\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}",
            "components/ui/pagination.tsx": "import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}",
            "components/ui/popover.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }",
            "components/ui/progress.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }",
            "components/ui/radio-group.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }",
            "components/ui/resizable.tsx": "\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }",
            "components/ui/scroll-area.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }",
            "components/ui/select.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}",
            "components/ui/separator.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }",
            "components/ui/sheet.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}",
            "components/ui/sidebar.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport { Sheet, SheetContent } from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar:state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContext = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContext | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContext>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden md:block text-sidebar-foreground\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"duration-200 relative h-svh w-[--sidebar-width] bg-transparent transition-[width] ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"duration-200 fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex min-h-svh flex-1 flex-col bg-background\",\n        \"peer-data-[variant=inset]:min-h-[calc(100svh-theme(spacing.4))] md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"duration-200 flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opa] ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"absolute right-1 flex h-5 min-w-5 items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground select-none pointer-events-none\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"rounded-md h-8 flex gap-2 px-2 items-center\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 flex-1 max-w-[--skeleton-width]\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}",
            "components/ui/skeleton.tsx": "import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }",
            "components/ui/slider.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }",
            "components/ui/sonner.tsx": "\"use client\"\n\nimport { useTheme } from \"next-themes\"\nimport { Toaster as Sonner } from \"sonner\"\n\ntype ToasterProps = React.ComponentProps<typeof Sonner>\n\nconst Toaster = ({ ...props }: ToasterProps) => {\n  const { theme = \"system\" } = useTheme()\n\n  return (\n    <Sonner\n      theme={theme as ToasterProps[\"theme\"]}\n      className=\"toaster group\"\n      toastOptions={{\n        classNames: {\n          toast:\n            \"group toast group-[.toaster]:bg-background group-[.toaster]:text-foreground group-[.toaster]:border-border group-[.toaster]:shadow-lg\",\n          description: \"group-[.toast]:text-muted-foreground\",\n          actionButton:\n            \"group-[.toast]:bg-primary group-[.toast]:text-primary-foreground\",\n          cancelButton:\n            \"group-[.toast]:bg-muted group-[.toast]:text-muted-foreground\",\n        },\n      }}\n      {...props}\n    />\n  )\n}\n\nexport { Toaster }",
            "components/ui/switch.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }",
            "components/ui/table.tsx": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}",
            "components/ui/tabs.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }",
            "components/ui/textarea.tsx": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }",
            "components/ui/toast.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}",
            "components/ui/toaster.tsx": "\"use client\"\n\nimport { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}",
            "components/ui/toggle-group.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }",
            "components/ui/toggle.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }",
            "components/ui/tooltip.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }",
            "components/ui/use-mobile.tsx": "import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}",
            "components/ui/use-toast.ts": "\"use client\"\n\n// Inspired by react-hot-toast library\nimport * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }",
            "hooks/use-mobile.tsx": "import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}",
            "hooks/use-toast.ts": "\"use client\"\n\n// Inspired by react-hot-toast library\nimport * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }",
            "lib/utils.ts": "import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}",
            "next.config.mjs": "/** @type {import('next').NextConfig} */\nconst nextConfig = {\n  eslint: {\n    ignoreDuringBuilds: true,\n  },\n  typescript: {\n    ignoreBuildErrors: true,\n  },\n  images: {\n    unoptimized: true,\n  },\n}\n\nexport default nextConfig",
            "package.json": "{\n  \"name\": \"my-v0-project\",\n  \"version\": \"0.1.0\",\n  \"private\": true,\n  \"scripts\": {\n    \"dev\": \"next dev\",\n    \"build\": \"next build\",\n    \"start\": \"next start\",\n    \"lint\": \"next lint\"\n  },\n  \"dependencies\": {\n    \"@hookform/resolvers\": \"^3.9.1\",\n    \"@radix-ui/react-accordion\": \"1.2.2\",\n    \"@radix-ui/react-alert-dialog\": \"1.1.4\",\n    \"@radix-ui/react-aspect-ratio\": \"1.1.1\",\n    \"@radix-ui/react-avatar\": \"1.1.2\",\n    \"@radix-ui/react-checkbox\": \"1.1.3\",\n    \"@radix-ui/react-collapsible\": \"1.1.2\",\n    \"@radix-ui/react-context-menu\": \"2.2.4\",\n    \"@radix-ui/react-dialog\": \"1.1.4\",\n    \"@radix-ui/react-dropdown-menu\": \"2.1.4\",\n    \"@radix-ui/react-hover-card\": \"1.1.4\",\n    \"@radix-ui/react-label\": \"2.1.1\",\n    \"@radix-ui/react-menubar\": \"1.1.4\",\n    \"@radix-ui/react-navigation-menu\": \"1.2.3\",\n    \"@radix-ui/react-popover\": \"1.1.4\",\n    \"@radix-ui/react-progress\": \"1.1.1\",\n    \"@radix-ui/react-radio-group\": \"1.2.2\",\n    \"@radix-ui/react-scroll-area\": \"1.2.2\",\n    \"@radix-ui/react-select\": \"2.1.4\",\n    \"@radix-ui/react-separator\": \"1.1.1\",\n    \"@radix-ui/react-slider\": \"1.2.2\",\n    \"@radix-ui/react-slot\": \"1.1.1\",\n    \"@radix-ui/react-switch\": \"1.1.2\",\n    \"@radix-ui/react-tabs\": \"1.1.2\",\n    \"@radix-ui/react-toast\": \"1.2.4\",\n    \"@radix-ui/react-toggle\": \"1.1.1\",\n    \"@radix-ui/react-toggle-group\": \"1.1.1\",\n    \"@radix-ui/react-tooltip\": \"1.1.6\",\n    \"autoprefixer\": \"^10.4.20\",\n    \"class-variance-authority\": \"^0.7.1\",\n    \"clsx\": \"^2.1.1\",\n    \"cmdk\": \"1.0.4\",\n    \"date-fns\": \"4.1.0\",\n    \"embla-carousel-react\": \"8.5.1\",\n    \"input-otp\": \"1.4.1\",\n    \"lucide-react\": \"^0.454.0\",\n    \"next\": \"15.2.4\",\n    \"next-themes\": \"^0.4.4\",\n    \"react\": \"^19\",\n    \"react-day-picker\": \"8.10.1\",\n    \"react-dom\": \"^19\",\n    \"react-hook-form\": \"^7.54.1\",\n    \"react-resizable-panels\": \"^2.1.7\",\n    \"recharts\": \"2.15.0\",\n    \"sonner\": \"^1.7.1\",\n    \"tailwind-merge\": \"^2.5.5\",\n    \"tailwindcss-animate\": \"^1.0.7\",\n    \"vaul\": \"^0.9.6\",\n    \"zod\": \"^3.24.1\"\n  },\n  \"devDependencies\": {\n    \"@types/node\": \"^22\",\n    \"@types/react\": \"^19\",\n    \"@types/react-dom\": \"^19\",\n    \"postcss\": \"^8\",\n    \"tailwindcss\": \"^3.4.17\",\n    \"typescript\": \"^5\"\n  }\n}",
            "pnpm-lock.yaml": "lockfileVersion: '9.0'\n\nsettings:\n  autoInstallPeers: true\n  excludeLinksFromLockfile: false",
            "postcss.config.mjs": "/** @type {import('postcss-load-config').Config} */\nconst config = {\n  plugins: {\n    tailwindcss: {},\n  },\n};\n\nexport default config;",
            "public/placeholder-logo.png": "�PNG\n\u001a\n\u0000\u0000\u0000\nIHDR\u0000\u0000\u0001\u0000\u0000\u0000\u0000�\u0004\u0003\u0000\u0000\u0000\u0015M��\u0000\u0000\u00000PLTE\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Z?\u001c\u000b\u0000\u0000\u0000\u000ftRNS\u0000� �@�\u0010�`P0p���w\f\u0000\u0000\u0001�IDATx��ؽJ3Q\u0010\u0006�7'��%�|?� \u0016�\u0016��\u0001E�\u0004l\u0005�7��\u0017�(X�D�\u0004�����w`����[�*t����D���mD�\u0001}\u001f��4;\f;�\u0017DDDDDDDDDDDD_\u0013�_İ�\u0012\u0019�!�\u0010y�`�_�:��\f;Ļ�'|�\t\f��\u0001;.\u0014I\"\u0018\u001a\u0011����3\u0018*5����J�1\u0002�� �T�\u0002\u0014�\u0006F\u0002I��\t��=��3܃\u001a�2~�b\u0005\u001d���0�\u001c�U9\\��]�4�#w0��Gt\\&1\f\u0014�\u0007?2\u0005\u00131,\u0005���o!e�\u000em��ĻR�\u0016����5�� ؽAJ�9��R\u001d)�5�0.FF\u0010ASa\b\u0019ǃ�T�#|�K���I�������1�\nM����\u0011��N\"��$����G�V�T�\u000b��T^^��A�$S��\u0015h(���\u001b\u0017����G]co\"J׸^^�'�=\u0016���%�\t\f�W�6Ы�W��w�a�߇*�^^�\u0012YG�c���`'F\u0017��\u001d��������������^\u00005_�,�S�%\u0000\u0000\u0000\u0000IEND�B`�",
            "public/placeholder-logo.svg": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"215\" height=\"48\" fill=\"none\"><path fill=\"#000\" d=\"M57.588 9.6h6L73.828 38h-5.2l-2.36-6.88h-11.36L52.548 38h-5.2l10.24-28.4Zm7.16 17.16-4.16-12.16-4.16 12.16h8.32Zm23.694-2.24c-.186-1.307-.706-2.32-1.56-3.04-.853-.72-1.866-1.08-3.04-1.08-1.68 0-2.986.613-3.92 1.84-.906 1.227-1.36 2.947-1.36 5.16s.454 3.933 1.36 5.16c.934 1.227 2.24 1.84 3.92 1.84 1.254 0 2.307-.373 3.16-1.12.854-.773 1.387-1.867 1.6-3.28l5.12.24c-.186 1.68-.733 3.147-1.64 4.4-.906 1.227-2.08 2.173-3.52 2.84-1.413.667-2.986 1-4.72 1-2.08 0-3.906-.453-5.48-1.36-1.546-.907-2.76-2.2-3.64-3.88-.853-1.68-1.28-3.627-1.28-5.84 0-2.24.427-4.187 1.28-5.84.88-1.68 2.094-2.973 3.64-3.88 1.574-.907 3.4-1.36 5.48-1.36 1.68 0 3.227.32 4.64.96 1.414.64 2.56 1.56 3.44 2.76.907 1.2 1.454 2.6 1.64 4.2l-5.12.28Zm11.486-7.72.12 3.4c.534-1.227 1.307-2.173 2.32-2.84 1.04-.693 2.267-1.04 3.68-1.04 1.494 0 2.76.387 3.8 1.16 1.067.747 1.827 1.813 2.28 3.2.507-1.44 1.294-2.52 2.36-3.24 1.094-.747 2.414-1.12 3.96-1.12 1.414 0 2.64.307 3.68.92s1.84 1.52 2.4 2.72c.56 1.2.84 2.667.84 4.4V38h-4.96V25.92c0-1.813-.293-3.187-.88-4.12-.56-.96-1.413-1.44-2.56-1.44-.906 0-1.68.213-2.32.64-.64.427-1.133 1.053-1.48 1.88-.32.827-.48 1.84-.48 3.04V38h-4.56V25.92c0-1.2-.133-2.213-.4-3.04-.24-.827-.626-1.453-1.16-1.88-.506-.427-1.133-.64-1.88-.64-.906 0-1.68.227-2.32.68-.64.427-1.133 1.053-1.48 1.88-.32.827-.48 1.827-.48 3V38h-4.96V16.8h4.48Zm26.723 10.6c0-2.24.427-4.187 1.28-5.84.854-1.68 2.067-2.973 3.64-3.88 1.574-.907 3.4-1.36 5.48-1.36 1.84 0 3.494.413 4.96 1.24 1.467.827 2.64 2.08 3.52 3.76.88 1.653 1.347 3.693 1.4 6.12v1.32h-15.08c.107 1.813.614 3.227 1.52 4.24.907.987 2.134 1.48 3.68 1.48.987 0 1.88-.253 2.68-.76a4.803 4.803 0 0 0 1.84-2.2l5.08.36c-.64 2.027-1.84 3.64-3.6 4.84-1.733 1.173-3.733 1.76-6 1.76-2.08 0-3.906-.453-5.48-1.36-1.573-.907-2.786-2.2-3.64-3.88-.853-1.68-1.28-3.627-1.28-5.84Zm15.16-2.04c-.213-1.733-.76-3.013-1.64-3.84-.853-.827-1.893-1.24-3.12-1.24-1.44 0-2.6.453-3.48 1.36-.88.88-1.44 2.12-1.68 3.72h9.92ZM163.139 9.6V38h-5.04V9.6h5.04Zm8.322 7.2.24 5.88-.64-.36c.32-2.053 1.094-3.56 2.32-4.52 1.254-.987 2.787-1.48 4.6-1.48 2.32 0 4.107.733 5.36 2.2 1.254 1.44 1.88 3.387 1.88 5.84V38h-4.96V25.92c0-1.253-.12-2.28-.36-3.08-.24-.8-.64-1.413-1.2-1.84-.533-.427-1.253-.64-2.16-.64-1.44 0-2.573.48-3.4 1.44-.8.933-1.2 2.307-1.2 4.12V38h-4.96V16.8h4.48Zm30.003 7.72c-.186-1.307-.706-2.32-1.56-3.04-.853-.72-1.866-1.08-3.04-1.08-1.68 0-2.986.613-3.92 1.84-.906 1.227-1.36 2.947-1.36 5.16s.454 3.933 1.36 5.16c.934 1.227 2.24 1.84 3.92 1.84 1.254 0 2.307-.373 3.16-1.12.854-.773 1.387-1.867 1.6-3.28l5.12.24c-.186 1.68-.733 3.147-1.64 4.4-.906 1.227-2.08 2.173-3.52 2.84-1.413.667-2.986 1-4.72 1-2.08 0-3.906-.453-5.48-1.36-1.546-.907-2.76-2.2-3.64-3.88-.853-1.68-1.28-3.627-1.28-5.84 0-2.24.427-4.187 1.28-5.84.88-1.68 2.094-2.973 3.64-3.88 1.574-.907 3.4-1.36 5.48-1.36 1.68 0 3.227.32 4.64.96 1.414.64 2.56 1.56 3.44 2.76.907 1.2 1.454 2.6 1.64 4.2l-5.12.28Zm11.443 8.16V38h-5.6v-5.32h5.6Z\"/><path fill=\"#171717\" fill-rule=\"evenodd\" d=\"m7.839 40.783 16.03-28.054L20 6 0 40.783h7.839Zm8.214 0H40L27.99 19.894l-4.02 7.032 3.976 6.914H20.02l-3.967 6.943Z\" clip-rule=\"evenodd\"/></svg>",
            "public/placeholder-user.jpg": "����\u0000\u0010JFIF\u0000\u0001\u0001\u0000\u0000\u0001\u0000\u0001\u0000\u0000��\u0000C\u0000\n\u0007\u0007\t\u0007\u0006\n\t\b\t\u000b\u000b\n\f\u000f\u0019\u0010\u000f\u000e\u000e\u000f\u001e\u0016\u0017\u0012\u0019$ &%# #\"(-90(*6+\"#2D26;=@@@&0FKE>J9?@=��\u0000C\u0001\u000b\u000b\u000b\u000f\n\u000f\u001d\u0010\u0010\u001d=)#)==================================================��\u0000\u0011\b\u0000�\u0000�\u0003\u0001\u0011\u0000\u0002\u0011\u0001\u0003\u0011\u0001��\u0000\u001b\u0000\u0001\u0000\u0003\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0006\u0007\u0004\u0001\u0002\u0003��\u0000\u0014\u0001\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000��\u0000\f\u0003\u0001\u0000\u0002\u0010\u0003\u0010\u0000\u0000\u0000ـ\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000|�r4�-\u0007�\u0000\u0000\u0000\u0000\u0000\u0000\u0000̈\"x�'�0\u0000\u0000\u0000\u0000\u0000\u0000\u0003�Í��8�H�N�\u0000\u0000\u0000\u0000\u0000\u0000q���\u001f��\u0018Q�\u001d�\u0000\u0000\u0000\u0000\u0000\u0000�����V�\u0013`=\u0000\u0000\u0000\u0000\u0000\u0000\u0000�($q\"_��\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000f\n�S8\u000f\u000f�P��0\u0000\u0000\u0000\u0000\u0000\u001f\u0006VF\u0017bP��!\nIo40\u0000\u0000\u0000\u0000\u0000�\u0015�[?p\u0000#�|�\u000b@\u0000\u0000\u0000\u0000\u0003!.E�\u0000\u00003��4p\u0000\u0000\u0000\u0000\u0006Bq\u001d \u0000\u0001�Z\n\u001c\u0000\u0000\u0000\u0000\u0001\u0002s\u0000\u0000\u0000\u0012\u0004�\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001f��\u0000C\u0010\u0000\u0001\u0003\u0002\u0001\u0005\u000b\u0007\t\t\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0003\u0004\u0000\u0005\u0006\u0011AQR�\u0007\u0012\u0016\u0017!1@Ua��02Tq���\u0010\u001456cps�� \"#$PS�����\u0000\b\u0001\u0001\u0000\u0001?\u0000��R���,��\f���\n�n�k��n8rZ���\u001e��9\u001dVv�\u0000�V��ms\u0016\u0011$9\u0011zWʏh�-+@Z\u0014\u0014�2�\u000ePGE�����\u001c�EY\u0011\u00199\u0017��\u0015i�Ͻ�S\t��O��Ȕ�\u0016�_I��W髵�}�����B�ՎT��>%r\f�[e/,W�D}��D�>b�e>�v�Z�p&�*VS��V�sV�c\u0011\u0019\u0000\u0006�\u0001:��~K�������\u0000C��:��k�'A\u0015n|ʶ�}\\��\u000fC� �f����a�;�h\u001c�\u001d\u0015\u001d�J���\u001c�q!i=���\"�q�NF�IZ�`�wĝ5hAj�\t\n�RXl\u001e䎉�lk���@I\u0011�%l��\u001dՆ���FDY-����Eq�i����O�I�_�2b�lǋ�Yu��k���AO��\u0010��٣��ܭ�n��\u001acam�jN�j���VL\u0007�}�\u000b;��\u0001oކ6��շs��,\u001b���ք\u001d���l�i����\bl{I�O��(!%J $\f���n�\u0006\u0011-@G����n��ܮi!�괁G\u0011�:�^��\bn�g3l�F%���\u00179]�\u0013Pq��)�:���\u000b@\u0007�*ɍmׅ�VLY'�\u000es+�z\u000b���V�\bm\u0000�J9��S�_���#\u0012�\u0011�;����\u0019�Ǌ!5�#�q\\�M@��\u001b@\u0019�]yz\u001b�����\u000fA;e�k��\u000f@�\u0000s�\u001a^\u0005���\u0019G����\\�5F��(�\u001b�\u0000\u0011S��Ly���\u0006c�i\u00078�\u001f����o�8T��i�N��7D�\u001c���t-�\u0000p�3`r�\u0000q\nr�;|�.��b\u0004TG��[i\u0003 H��͚-�\n��Oj\u0017�\u0007H����M�ؒFE�{�3\u0011X\u0016�n��\u0019�e�\u0017 �R3\u001f/�~�����\n��\u0000a�\u0015���!�j\u0012&@^r�����Y�������l�Z? �7땵��)ki�w��\\.�u��\u0015���X��\\.�u��\u0015���X��\\.�u��\u0015���X��\\.�u��\u0015p�M��\u0019�\u0014�o(N��3�Vg�����\u0007Z�s��%\u000e�\\�]q}d�k\\_Y5\u001f��\u0017�MG�����Q��q}d�k\\_Y5\u001f��\u0017�MG�����Q��q}d�kV|5\u0002���\u000e\u00058���//����\u0000\u0014\u0011\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000���\u0000\b\u0001\u0002\u0001\u0001?\u0000\u001c��\u0000\u0014\u0011\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000���\u0000\b\u0001\u0003\u0001\u0001?\u0000\u001c��",
            "public/placeholder.jpg": "����\u0000\u0010JFIF\u0000\u0001\u0001\u0000\u0000H\u0000H\u0000\u0000��\u0000�Exif\u0000\u0000MM\u0000*\u0000\u0000\u0000\b\u0000\u0005\u0001\u0012\u0000\u0003\u0000\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0001\u001a\u0000\u0005\u0000\u0000\u0000\u0001\u0000\u0000\u0000J\u0001\u001b\u0000\u0005\u0000\u0000\u0000\u0001\u0000\u0000\u0000R\u0001(\u0000\u0003\u0000\u0000\u0000\u0001\u0000\u0002\u0000\u0000�i\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000Z\u0000\u0000\u0000\u0000\u0000\u0000\u0000H\u0000\u0000\u0000\u0001\u0000\u0000\u0000H\u0000\u0000\u0000\u0001\u0000\u0003�\u0001\u0000\u0003\u0000\u0000\u0000\u0001\u0000\u0001\u0000\u0000�\u0002\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001�\u0003\u0000\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000��\u00008Photoshop 3.0\u00008BIM\u0004\u0004\u0000\u0000\u0000\u0000\u0000\u00008BIM\u0004%\u0000\u0000\u0000\u0000\u0000\u0010�\u001d�ُ\u0000�\u0004�\t���B~��\u0000\u0011\b\u0000\u0001\u0000\u0001\u0003\u0001\u0011\u0000\u0002\u0011\u0001\u0003\u0011\u0001��\u0000\u001f\u0000\u0000\u0001\u0005\u0001\u0001\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0002\u0004\u0001\u0005\u0000\u0006\u0007\b\t\n\u000b��\u0000�\u0010\u0000\u0001\u0003\u0003\u0002\u0004\u0003\u0004\u0006\u0004\u0007\u0006\u0004\b\u0006s\u0001\u0002\u0000\u0003\u0011\u0004\u0012!\u00051\u0013\"\u0010\u0006AQ2\u0014aq#\u0007� �B\u0015�R3�$b0\u0016�r�C�4�\b�S@%c\u00175�s�PD���&T6d�t�`҄�\u0018p�'E7e�Uu��Å��Fv��GVf�\t\n\u0019\u001a()*89:HIJWXYZghijwxyz�����������������������������������������������������������\u0000\u001f\u0001\u0000\u0003\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003\u0004\u0005\u0006\u0007\b\t\n\u000b��\u0000�\u0011\u0000\u0002\u0002\u0001\u0003\u0003\u0003\u0002\u0003\u0005\u0002\u0005\u0002\u0004\u0004�\u0001\u0000\u0002\u0011\u0003\u0010\u0012!\u0004 1A\u0013\u00050\"2Q\u0014@\u00063#aB\u0015qR4�P$��C�\u0016\u0007b5S��%`�D�r�\u0017�c6p&ET�'��\b\t\n\u0018\u0019\u001a()*789:FGHIJUVWXYZdefghijstuvwxyz�����������������������������������������������������������������������������\u0000C\u0000\u000b\b\b\n\b\u0007\u000b\n\t\n\n\f\u000b\n\u0011\u001c\u0012\u0011\u000f\u000f\u0011\"\u0019\u001a\u0014\u001c)$+*($''-2@7-0=0''8L9=CEHIH+6OUNFT@GHE��\u0000C\u0001\f\n\n\u0011\u000f\u0011!\u0012\u0012!E.'.EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE��\u0000\f\u0003\u0001\u0000\u0002\u0011\u0003\u0011\u0000\u0000\u0001�k��\u0000\b\u0001\u0001\u0000\u0001\u0005\u0002��\u0000\b\u0001\u0003\u0011\u0001?\u0001��\u0000\b\u0001\u0002\u0011\u0001?\u0001��\u0000\b\u0001\u0001\u0000\u0006?\u0002��\u00003\u0010\u0001\u0000\u0003\u0000\u0002\u0002\u0002\u0002\u0002\u0003\u0001\u0001\u0000\u0000\u0002\u000b\u0001\u0011\u0000!1AQaq�������\u0010�� 0@P`p���������\u0000\b\u0001\u0001\u0000\u0001?!���\u0000\f\u0003\u0001\u0000\u0002\u0011\u0003\u0011\u0000\u0000\u0010\u001f��\u00003\u0011\u0001\u0001\u0001\u0000\u0003\u0000\u0001\u0002\u0005\u0005\u0001\u0001\u0000\u0001\u0001\t\u0001\u0000\u0011!1\u0010AQa q𑁡�����0@P`p���������\u0000\b\u0001\u0003\u0011\u0001?\u0010���\u0000\b\u0001\u0002\u0011\u0001?\u0010���\u0000\b\u0001\u0001\u0000\u0001?\u0010���",
            "public/placeholder.svg": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1200\" height=\"1200\" fill=\"none\"><rect width=\"1200\" height=\"1200\" fill=\"#EAEAEA\" rx=\"3\"/><g opacity=\".5\"><g opacity=\".5\"><path fill=\"#FAFAFA\" d=\"M600.709 736.5c-75.454 0-136.621-61.167-136.621-136.62 0-75.454 61.167-136.621 136.621-136.621 75.453 0 136.62 61.167 136.62 136.621 0 75.453-61.167 136.62-136.62 136.62Z\"/><path stroke=\"#C9C9C9\" stroke-width=\"2.418\" d=\"M600.709 736.5c-75.454 0-136.621-61.167-136.621-136.62 0-75.454 61.167-136.621 136.621-136.621 75.453 0 136.62 61.167 136.62 136.621 0 75.453-61.167 136.62-136.62 136.62Z\"/></g><path stroke=\"url(#a)\" stroke-width=\"2.418\" d=\"M0-1.209h553.581\" transform=\"scale(1 -1) rotate(45 1163.11 91.165)\"/><path stroke=\"url(#b)\" stroke-width=\"2.418\" d=\"M404.846 598.671h391.726\"/><path stroke=\"url(#c)\" stroke-width=\"2.418\" d=\"M599.5 795.742V404.017\"/><path stroke=\"url(#d)\" stroke-width=\"2.418\" d=\"m795.717 796.597-391.441-391.44\"/><path fill=\"#fff\" d=\"M600.709 656.704c-31.384 0-56.825-25.441-56.825-56.824 0-31.384 25.441-56.825 56.825-56.825 31.383 0 56.824 25.441 56.824 56.825 0 31.383-25.441 56.824-56.824 56.824Z\"/><g clip-path=\"url(#e)\"><path fill=\"#666\" fill-rule=\"evenodd\" d=\"M616.426 586.58h-31.434v16.176l3.553-3.554.531-.531h9.068l.074-.074 8.463-8.463h2.565l7.18 7.181V586.58Zm-15.715 14.654 3.698 3.699 1.283 1.282-2.565 2.565-1.282-1.283-5.2-5.199h-6.066l-5.514 5.514-.073.073v2.876a2.418 2.418 0 0 0 2.418 2.418h26.598a2.418 2.418 0 0 0 2.418-2.418v-8.317l-8.463-8.463-7.181 7.181-.071.072Zm-19.347 5.442v4.085a6.045 6.045 0 0 0 6.046 6.045h26.598a6.044 6.044 0 0 0 6.045-6.045v-7.108l1.356-1.355-1.282-1.283-.074-.073v-17.989h-38.689v23.43l-.146.146.146.147Z\" clip-rule=\"evenodd\"/></g><path stroke=\"#C9C9C9\" stroke-width=\"2.418\" d=\"M600.709 656.704c-31.384 0-56.825-25.441-56.825-56.824 0-31.384 25.441-56.825 56.825-56.825 31.383 0 56.824 25.441 56.824 56.825 0 31.383-25.441 56.824-56.824 56.824Z\"/></g><defs><linearGradient id=\"a\" x1=\"554.061\" x2=\"-.48\" y1=\".083\" y2=\".087\" gradientUnits=\"userSpaceOnUse\"><stop stop-color=\"#C9C9C9\" stop-opacity=\"0\"/><stop offset=\".208\" stop-color=\"#C9C9C9\"/><stop offset=\".792\" stop-color=\"#C9C9C9\"/><stop offset=\"1\" stop-color=\"#C9C9C9\" stop-opacity=\"0\"/></linearGradient><linearGradient id=\"b\" x1=\"796.912\" x2=\"404.507\" y1=\"599.963\" y2=\"599.965\" gradientUnits=\"userSpaceOnUse\"><stop stop-color=\"#C9C9C9\" stop-opacity=\"0\"/><stop offset=\".208\" stop-color=\"#C9C9C9\"/><stop offset=\".792\" stop-color=\"#C9C9C9\"/><stop offset=\"1\" stop-color=\"#C9C9C9\" stop-opacity=\"0\"/></linearGradient><linearGradient id=\"c\" x1=\"600.792\" x2=\"600.794\" y1=\"403.677\" y2=\"796.082\" gradientUnits=\"userSpaceOnUse\"><stop stop-color=\"#C9C9C9\" stop-opacity=\"0\"/><stop offset=\".208\" stop-color=\"#C9C9C9\"/><stop offset=\".792\" stop-color=\"#C9C9C9\"/><stop offset=\"1\" stop-color=\"#C9C9C9\" stop-opacity=\"0\"/></linearGradient><linearGradient id=\"d\" x1=\"404.85\" x2=\"796.972\" y1=\"403.903\" y2=\"796.02\" gradientUnits=\"userSpaceOnUse\"><stop stop-color=\"#C9C9C9\" stop-opacity=\"0\"/><stop offset=\".208\" stop-color=\"#C9C9C9\"/><stop offset=\".792\" stop-color=\"#C9C9C9\"/><stop offset=\"1\" stop-color=\"#C9C9C9\" stop-opacity=\"0\"/></linearGradient><clipPath id=\"e\"><path fill=\"#fff\" d=\"M581.364 580.535h38.689v38.689h-38.689z\"/></clipPath></defs></svg>",
            "styles/globals.css": "@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\nbody {\n  font-family: Arial, Helvetica, sans-serif;\n}\n\n@layer utilities {\n  .text-balance {\n    text-wrap: balance;\n  }\n}\n\n@layer base {\n  :root {\n    --background: 0 0% 100%;\n    --foreground: 0 0% 3.9%;\n    --card: 0 0% 100%;\n    --card-foreground: 0 0% 3.9%;\n    --popover: 0 0% 100%;\n    --popover-foreground: 0 0% 3.9%;\n    --primary: 0 0% 9%;\n    --primary-foreground: 0 0% 98%;\n    --secondary: 0 0% 96.1%;\n    --secondary-foreground: 0 0% 9%;\n    --muted: 0 0% 96.1%;\n    --muted-foreground: 0 0% 45.1%;\n    --accent: 0 0% 96.1%;\n    --accent-foreground: 0 0% 9%;\n    --destructive: 0 84.2% 60.2%;\n    --destructive-foreground: 0 0% 98%;\n    --border: 0 0% 89.8%;\n    --input: 0 0% 89.8%;\n    --ring: 0 0% 3.9%;\n    --chart-1: 12 76% 61%;\n    --chart-2: 173 58% 39%;\n    --chart-3: 197 37% 24%;\n    --chart-4: 43 74% 66%;\n    --chart-5: 27 87% 67%;\n    --radius: 0.5rem;\n    --sidebar-background: 0 0% 98%;\n    --sidebar-foreground: 240 5.3% 26.1%;\n    --sidebar-primary: 240 5.9% 10%;\n    --sidebar-primary-foreground: 0 0% 98%;\n    --sidebar-accent: 240 4.8% 95.9%;\n    --sidebar-accent-foreground: 240 5.9% 10%;\n    --sidebar-border: 220 13% 91%;\n    --sidebar-ring: 217.2 91.2% 59.8%;\n  }\n  .dark {\n    --background: 0 0% 3.9%;\n    --foreground: 0 0% 98%;\n    --card: 0 0% 3.9%;\n    --card-foreground: 0 0% 98%;\n    --popover: 0 0% 3.9%;\n    --popover-foreground: 0 0% 98%;\n    --primary: 0 0% 98%;\n    --primary-foreground: 0 0% 9%;\n    --secondary: 0 0% 14.9%;\n    --secondary-foreground: 0 0% 98%;\n    --muted: 0 0% 14.9%;\n    --muted-foreground: 0 0% 63.9%;\n    --accent: 0 0% 14.9%;\n    --accent-foreground: 0 0% 98%;\n    --destructive: 0 62.8% 30.6%;\n    --destructive-foreground: 0 0% 98%;\n    --border: 0 0% 14.9%;\n    --input: 0 0% 14.9%;\n    --ring: 0 0% 83.1%;\n    --chart-1: 220 70% 50%;\n    --chart-2: 160 60% 45%;\n    --chart-3: 30 80% 55%;\n    --chart-4: 280 65% 60%;\n    --chart-5: 340 75% 55%;\n    --sidebar-background: 240 5.9% 10%;\n    --sidebar-foreground: 240 4.8% 95.9%;\n    --sidebar-primary: 224.3 76.3% 48%;\n    --sidebar-primary-foreground: 0 0% 100%;\n    --sidebar-accent: 240 3.7% 15.9%;\n    --sidebar-accent-foreground: 240 4.8% 95.9%;\n    --sidebar-border: 240 3.7% 15.9%;\n    --sidebar-ring: 217.2 91.2% 59.8%;\n  }\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n  body {\n    @apply bg-background text-foreground;\n  }\n}",
            "tailwind.config.ts": "import type { Config } from \"tailwindcss\"\n\nconst config: Config = {\n  darkMode: [\"class\"],\n  content: [\n    \"./pages/**/*.{ts,tsx}\",\n    \"./components/**/*.{ts,tsx}\",\n    \"./app/**/*.{ts,tsx}\",\n    \"./src/**/*.{ts,tsx}\",\n    \"*.{js,ts,jsx,tsx,mdx}\",\n  ],\n  prefix: \"\",\n  theme: {\n    container: {\n      center: true,\n      padding: \"2rem\",\n      screens: {\n        \"2xl\": \"1400px\",\n      },\n    },\n    extend: {\n      colors: {\n        border: \"hsl(var(--border))\",\n        input: \"hsl(var(--input))\",\n        ring: \"hsl(var(--ring))\",\n        background: \"hsl(var(--background))\",\n        foreground: \"hsl(var(--foreground))\",\n        primary: {\n          DEFAULT: \"#69B578\",\n          foreground: \"hsl(var(--primary-foreground))\",\n        },\n        secondary: {\n          DEFAULT: \"#81ACDA\",\n          foreground: \"hsl(var(--secondary-foreground))\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive))\",\n          foreground: \"hsl(var(--destructive-foreground))\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted))\",\n          foreground: \"hsl(var(--muted-foreground))\",\n        },\n        accent: {\n          DEFAULT: \"#E5B061\",\n          foreground: \"hsl(var(--accent-foreground))\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover))\",\n          foreground: \"hsl(var(--popover-foreground))\",\n        },\n        card: {\n          DEFAULT: \"hsl(var(--card))\",\n          foreground: \"hsl(var(--card-foreground))\",\n        },\n      },\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: \"0\" },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: \"0\" },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\")],\n} satisfies Config\n\nexport default config",
            "tsconfig.json": "{\n  \"compilerOptions\": {\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"allowJs\": true,\n    \"target\": \"ES6\",\n    \"skipLibCheck\": true,\n    \"strict\": true,\n    \"noEmit\": true,\n    \"esModuleInterop\": true,\n    \"module\": \"esnext\",\n    \"moduleResolution\": \"bundler\",\n    \"resolveJsonModule\": true,\n    \"isolatedModules\": true,\n    \"jsx\": \"preserve\",\n    \"incremental\": true,\n    \"plugins\": [\n      {\n        \"name\": \"next\"\n      }\n    ],\n    \"paths\": {\n      \"@/*\": [\"./*\"]\n    }\n  },\n  \"include\": [\"next-env.d.ts\", \"**/*.ts\", \"**/*.tsx\", \".next/types/**/*.ts\"],\n  \"exclude\": [\"node_modules\"]\n}"
        },
        "modified_files": {},
        "deleted_files": []
    },
    {
        "commit_message": "pnpm lock",
        "added_files": {},
        "modified_files": {
            "pnpm-lock.yaml": "lockfileVersion: '9.0'\n\nsettings:\n  autoInstallPeers: true\n  excludeLinksFromLockfile: false\n\nimporters:\n\n  .:\n    dependencies:\n      '@hookform/resolvers':\n        specifier: ^3.9.1\n        version: 3.10.0(react-hook-form@7.56.4(react@19.1.0))\n      '@radix-ui/react-accordion':\n        specifier: 1.2.2\n        version: 1.2.2(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-alert-dialog':\n        specifier: 1.1.4\n        version: 1.1.4(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-aspect-ratio':\n        specifier: 1.1.1\n        version: 1.1.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-avatar':\n        specifier: 1.1.2\n        version: 1.1.2(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-checkbox':\n        specifier: 1.1.3\n        version: 1.1.3(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-collapsible':\n        specifier: 1.1.2\n        version: 1.1.2(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-context-menu':\n        specifier: 2.2.4\n        version: 2.2.4(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-dialog':\n        specifier: 1.1.4\n        version: 1.1.4(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-dropdown-menu':\n        specifier: 2.1.4\n        version: 2.1.4(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-hover-card':\n        specifier: 1.1.4\n        version: 1.1.4(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-label':\n        specifier: 2.1.1\n        version: 2.1.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-menubar':\n        specifier: 1.1.4\n        version: 1.1.4(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-navigation-menu':\n        specifier: 1.2.3\n        version: 1.2.3(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-popover':\n        specifier: 1.1.4\n        version: 1.1.4(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-progress':\n        specifier: 1.1.1\n        version: 1.1.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-radio-group':\n        specifier: 1.2.2\n        version: 1.2.2(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-scroll-area':\n        specifier: 1.2.2\n        version: 1.2.2(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-select':\n        specifier: 2.1.4\n        version: 2.1.4(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-separator':\n        specifier: 1.1.1\n        version: 1.1.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-slider':\n        specifier: 1.2.2\n        version: 1.2.2(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-slot':\n        specifier: 1.1.1\n        version: 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-switch':\n        specifier: 1.1.2\n        version: 1.1.2(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-tabs':\n        specifier: 1.1.2\n        version: 1.1.2(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-toast':\n        specifier: 1.2.4\n        version: 1.2.4(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-toggle':\n        specifier: 1.1.1\n        version: 1.1.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-toggle-group':\n        specifier: 1.1.1\n        version: 1.1.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-tooltip':\n        specifier: 1.1.6\n        version: 1.1.6(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      autoprefixer:\n        specifier: ^10.4.20\n        version: 10.4.21(postcss@8.5.4)\n      class-variance-authority:\n        specifier: ^0.7.1\n        version: 0.7.1\n      clsx:\n        specifier: ^2.1.1\n        version: 2.1.1\n      cmdk:\n        specifier: 1.0.4\n        version: 1.0.4(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      date-fns:\n        specifier: 4.1.0\n        version: 4.1.0\n      embla-carousel-react:\n        specifier: 8.5.1\n        version: 8.5.1(react@19.1.0)\n      input-otp:\n        specifier: 1.4.1\n        version: 1.4.1(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      lucide-react:\n        specifier: ^0.454.0\n        version: 0.454.0(react@19.1.0)\n      next:\n        specifier: 15.2.4\n        version: 15.2.4(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      next-themes:\n        specifier: ^0.4.4\n        version: 0.4.6(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      react:\n        specifier: ^19\n        version: 19.1.0\n      react-day-picker:\n        specifier: 8.10.1\n        version: 8.10.1(date-fns@4.1.0)(react@19.1.0)\n      react-dom:\n        specifier: ^19\n        version: 19.1.0(react@19.1.0)\n      react-hook-form:\n        specifier: ^7.54.1\n        version: 7.56.4(react@19.1.0)\n      react-resizable-panels:\n        specifier: ^2.1.7\n        version: 2.1.9(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      recharts:\n        specifier: 2.15.0\n        version: 2.15.0(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      sonner:\n        specifier: ^1.7.1\n        version: 1.7.4(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      tailwind-merge:\n        specifier: ^2.5.5\n        version: 2.6.0\n      tailwindcss-animate:\n        specifier: ^1.0.7\n        version: 1.0.7(tailwindcss@3.4.17)\n      vaul:\n        specifier: ^0.9.6\n        version: 0.9.9(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      zod:\n        specifier: ^3.24.1\n        version: 3.25.42\n    devDependencies:\n      '@types/node':\n        specifier: ^22\n        version: 22.15.29\n      '@types/react':\n        specifier: ^19\n        version: 19.1.6\n      '@types/react-dom':\n        specifier: ^19\n        version: 19.1.5(@types/react@19.1.6)\n      postcss:\n        specifier: ^8\n        version: 8.5.4\n      tailwindcss:\n        specifier: ^3.4.17\n        version: 3.4.17\n      typescript:\n        specifier: ^5\n        version: 5.8.3\n\npackages:\n\n  '@alloc/quick-lru@5.2.0':\n    resolution: {integrity: sha512-UrcABB+4bUrFABwbluTIBErXwvbsU/V7TZWfmbgJfbkwiBuziS9gxdODUyuiecfdGQ85jglMW6juS3+z5TsKLw==}\n    engines: {node: '>=10'}\n\n  '@babel/runtime@7.27.4':\n    resolution: {integrity: sha512-t3yaEOuGu9NlIZ+hIeGbBjFtZT7j2cb2tg0fuaJKeGotchRjjLfrBA9Kwf8quhpP1EUuxModQg04q/mBwyg8uA==}\n    engines: {node: '>=6.9.0'}\n\n  '@emnapi/runtime@1.4.3':\n    resolution: {integrity: sha512-pBPWdu6MLKROBX05wSNKcNb++m5Er+KQ9QkB+WVM+pW2Kx9hoSrVTnu3BdkI5eBLZoKu/J6mW/B6i6bJB2ytXQ==}\n\n  '@floating-ui/core@1.7.0':\n    resolution: {integrity: sha512-FRdBLykrPPA6P76GGGqlex/e7fbe0F1ykgxHYNXQsH/iTEtjMj/f9bpY5oQqbjt5VgZvgz/uKXbGuROijh3VLA==}\n\n  '@floating-ui/dom@1.7.0':\n    resolution: {integrity: sha512-lGTor4VlXcesUMh1cupTUTDoCxMb0V6bm3CnxHzQcw8Eaf1jQbgQX4i02fYgT0vJ82tb5MZ4CZk1LRGkktJCzg==}\n\n  '@floating-ui/react-dom@2.1.2':\n    resolution: {integrity: sha512-06okr5cgPzMNBy+Ycse2A6udMi4bqwW/zgBF/rwjcNqWkyr82Mcg8b0vjX8OJpZFy/FKjJmw6wV7t44kK6kW7A==}\n    peerDependencies:\n      react: '>=16.8.0'\n      react-dom: '>=16.8.0'\n\n  '@floating-ui/utils@0.2.9':\n    resolution: {integrity: sha512-MDWhGtE+eHw5JW7lq4qhc5yRLS11ERl1c7Z6Xd0a58DozHES6EnNNwUWbMiG4J9Cgj053Bhk8zvlhFYKVhULwg==}\n\n  '@hookform/resolvers@3.10.0':\n    resolution: {integrity: sha512-79Dv+3mDF7i+2ajj7SkypSKHhl1cbln1OGavqrsF7p6mbUv11xpqpacPsGDCTRvCSjEEIez2ef1NveSVL3b0Ag==}\n    peerDependencies:\n      react-hook-form: ^7.0.0\n\n  '@img/sharp-darwin-arm64@0.33.5':\n    resolution: {integrity: sha512-UT4p+iz/2H4twwAoLCqfA9UH5pI6DggwKEGuaPy7nCVQ8ZsiY5PIcrRvD1DzuY3qYL07NtIQcWnBSY/heikIFQ==}\n    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}\n    cpu: [arm64]\n    os: [darwin]\n\n  '@img/sharp-darwin-x64@0.33.5':\n    resolution: {integrity: sha512-fyHac4jIc1ANYGRDxtiqelIbdWkIuQaI84Mv45KvGRRxSAa7o7d1ZKAOBaYbnepLC1WqxfpimdeWfvqqSGwR2Q==}\n    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}\n    cpu: [x64]\n    os: [darwin]\n\n  '@img/sharp-libvips-darwin-arm64@1.0.4':\n    resolution: {integrity: sha512-XblONe153h0O2zuFfTAbQYAX2JhYmDHeWikp1LM9Hul9gVPjFY427k6dFEcOL72O01QxQsWi761svJ/ev9xEDg==}\n    cpu: [arm64]\n    os: [darwin]\n\n  '@img/sharp-libvips-darwin-x64@1.0.4':\n    resolution: {integrity: sha512-xnGR8YuZYfJGmWPvmlunFaWJsb9T/AO2ykoP3Fz/0X5XV2aoYBPkX6xqCQvUTKKiLddarLaxpzNe+b1hjeWHAQ==}\n    cpu: [x64]\n    os: [darwin]\n\n  '@img/sharp-libvips-linux-arm64@1.0.4':\n    resolution: {integrity: sha512-9B+taZ8DlyyqzZQnoeIvDVR/2F4EbMepXMc/NdVbkzsJbzkUjhXv/70GQJ7tdLA4YJgNP25zukcxpX2/SueNrA==}\n    cpu: [arm64]\n    os: [linux]\n\n  '@img/sharp-libvips-linux-arm@1.0.5':\n    resolution: {integrity: sha512-gvcC4ACAOPRNATg/ov8/MnbxFDJqf/pDePbBnuBDcjsI8PssmjoKMAz4LtLaVi+OnSb5FK/yIOamqDwGmXW32g==}\n    cpu: [arm]\n    os: [linux]\n\n  '@img/sharp-libvips-linux-s390x@1.0.4':\n    resolution: {integrity: sha512-u7Wz6ntiSSgGSGcjZ55im6uvTrOxSIS8/dgoVMoiGE9I6JAfU50yH5BoDlYA1tcuGS7g/QNtetJnxA6QEsCVTA==}\n    cpu: [s390x]\n    os: [linux]\n\n  '@img/sharp-libvips-linux-x64@1.0.4':\n    resolution: {integrity: sha512-MmWmQ3iPFZr0Iev+BAgVMb3ZyC4KeFc3jFxnNbEPas60e1cIfevbtuyf9nDGIzOaW9PdnDciJm+wFFaTlj5xYw==}\n    cpu: [x64]\n    os: [linux]\n\n  '@img/sharp-libvips-linuxmusl-arm64@1.0.4':\n    resolution: {integrity: sha512-9Ti+BbTYDcsbp4wfYib8Ctm1ilkugkA/uscUn6UXK1ldpC1JjiXbLfFZtRlBhjPZ5o1NCLiDbg8fhUPKStHoTA==}\n    cpu: [arm64]\n    os: [linux]\n\n  '@img/sharp-libvips-linuxmusl-x64@1.0.4':\n    resolution: {integrity: sha512-viYN1KX9m+/hGkJtvYYp+CCLgnJXwiQB39damAO7WMdKWlIhmYTfHjwSbQeUK/20vY154mwezd9HflVFM1wVSw==}\n    cpu: [x64]\n    os: [linux]\n\n  '@img/sharp-linux-arm64@0.33.5':\n    resolution: {integrity: sha512-JMVv+AMRyGOHtO1RFBiJy/MBsgz0x4AWrT6QoEVVTyh1E39TrCUpTRI7mx9VksGX4awWASxqCYLCV4wBZHAYxA==}\n    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}\n    cpu: [arm64]\n    os: [linux]\n\n  '@img/sharp-linux-arm@0.33.5':\n    resolution: {integrity: sha512-JTS1eldqZbJxjvKaAkxhZmBqPRGmxgu+qFKSInv8moZ2AmT5Yib3EQ1c6gp493HvrvV8QgdOXdyaIBrhvFhBMQ==}\n    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}\n    cpu: [arm]\n    os: [linux]\n\n  '@img/sharp-linux-s390x@0.33.5':\n    resolution: {integrity: sha512-y/5PCd+mP4CA/sPDKl2961b+C9d+vPAveS33s6Z3zfASk2j5upL6fXVPZi7ztePZ5CuH+1kW8JtvxgbuXHRa4Q==}\n    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}\n    cpu: [s390x]\n    os: [linux]\n\n  '@img/sharp-linux-x64@0.33.5':\n    resolution: {integrity: sha512-opC+Ok5pRNAzuvq1AG0ar+1owsu842/Ab+4qvU879ippJBHvyY5n2mxF1izXqkPYlGuP/M556uh53jRLJmzTWA==}\n    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}\n    cpu: [x64]\n    os: [linux]\n\n  '@img/sharp-linuxmusl-arm64@0.33.5':\n    resolution: {integrity: sha512-XrHMZwGQGvJg2V/oRSUfSAfjfPxO+4DkiRh6p2AFjLQztWUuY/o8Mq0eMQVIY7HJ1CDQUJlxGGZRw1a5bqmd1g==}\n    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}\n    cpu: [arm64]\n    os: [linux]\n\n  '@img/sharp-linuxmusl-x64@0.33.5':\n    resolution: {integrity: sha512-WT+d/cgqKkkKySYmqoZ8y3pxx7lx9vVejxW/W4DOFMYVSkErR+w7mf2u8m/y4+xHe7yY9DAXQMWQhpnMuFfScw==}\n    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}\n    cpu: [x64]\n    os: [linux]\n\n  '@img/sharp-wasm32@0.33.5':\n    resolution: {integrity: sha512-ykUW4LVGaMcU9lu9thv85CbRMAwfeadCJHRsg2GmeRa/cJxsVY9Rbd57JcMxBkKHag5U/x7TSBpScF4U8ElVzg==}\n    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}\n    cpu: [wasm32]\n\n  '@img/sharp-win32-ia32@0.33.5':\n    resolution: {integrity: sha512-T36PblLaTwuVJ/zw/LaH0PdZkRz5rd3SmMHX8GSmR7vtNSP5Z6bQkExdSK7xGWyxLw4sUknBuugTelgw2faBbQ==}\n    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}\n    cpu: [ia32]\n    os: [win32]\n\n  '@img/sharp-win32-x64@0.33.5':\n    resolution: {integrity: sha512-MpY/o8/8kj+EcnxwvrP4aTJSWw/aZ7JIGR4aBeZkZw5B7/Jn+tY9/VNwtcoGmdT7GfggGIU4kygOMSbYnOrAbg==}\n    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}\n    cpu: [x64]\n    os: [win32]\n\n  '@isaacs/cliui@8.0.2':\n    resolution: {integrity: sha512-O8jcjabXaleOG9DQ0+ARXWZBTfnP4WNAqzuiJK7ll44AmxGKv/J2M4TPjxjY3znBCfvBXFzucm1twdyFybFqEA==}\n    engines: {node: '>=12'}\n\n  '@jridgewell/gen-mapping@0.3.8':\n    resolution: {integrity: sha512-imAbBGkb+ebQyxKgzv5Hu2nmROxoDOXHh80evxdoXNOrvAnVx7zimzc1Oo5h9RlfV4vPXaE2iM5pOFbvOCClWA==}\n    engines: {node: '>=6.0.0'}\n\n  '@jridgewell/resolve-uri@3.1.2':\n    resolution: {integrity: sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==}\n    engines: {node: '>=6.0.0'}\n\n  '@jridgewell/set-array@1.2.1':\n    resolution: {integrity: sha512-R8gLRTZeyp03ymzP/6Lil/28tGeGEzhx1q2k703KGWRAI1VdvPIXdG70VJc2pAMw3NA6JKL5hhFu1sJX0Mnn/A==}\n    engines: {node: '>=6.0.0'}\n\n  '@jridgewell/sourcemap-codec@1.5.0':\n    resolution: {integrity: sha512-gv3ZRaISU3fjPAgNsriBRqGWQL6quFx04YMPW/zD8XMLsU32mhCCbfbO6KZFLjvYpCZ8zyDEgqsgf+PwPaM7GQ==}\n\n  '@jridgewell/trace-mapping@0.3.25':\n    resolution: {integrity: sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ==}\n\n  '@next/env@15.2.4':\n    resolution: {integrity: sha512-+SFtMgoiYP3WoSswuNmxJOCwi06TdWE733D+WPjpXIe4LXGULwEaofiiAy6kbS0+XjM5xF5n3lKuBwN2SnqD9g==}\n\n  '@next/swc-darwin-arm64@15.2.4':\n    resolution: {integrity: sha512-1AnMfs655ipJEDC/FHkSr0r3lXBgpqKo4K1kiwfUf3iE68rDFXZ1TtHdMvf7D0hMItgDZ7Vuq3JgNMbt/+3bYw==}\n    engines: {node: '>= 10'}\n    cpu: [arm64]\n    os: [darwin]\n\n  '@next/swc-darwin-x64@15.2.4':\n    resolution: {integrity: sha512-3qK2zb5EwCwxnO2HeO+TRqCubeI/NgCe+kL5dTJlPldV/uwCnUgC7VbEzgmxbfrkbjehL4H9BPztWOEtsoMwew==}\n    engines: {node: '>= 10'}\n    cpu: [x64]\n    os: [darwin]\n\n  '@next/swc-linux-arm64-gnu@15.2.4':\n    resolution: {integrity: sha512-HFN6GKUcrTWvem8AZN7tT95zPb0GUGv9v0d0iyuTb303vbXkkbHDp/DxufB04jNVD+IN9yHy7y/6Mqq0h0YVaQ==}\n    engines: {node: '>= 10'}\n    cpu: [arm64]\n    os: [linux]\n\n  '@next/swc-linux-arm64-musl@15.2.4':\n    resolution: {integrity: sha512-Oioa0SORWLwi35/kVB8aCk5Uq+5/ZIumMK1kJV+jSdazFm2NzPDztsefzdmzzpx5oGCJ6FkUC7vkaUseNTStNA==}\n    engines: {node: '>= 10'}\n    cpu: [arm64]\n    os: [linux]\n\n  '@next/swc-linux-x64-gnu@15.2.4':\n    resolution: {integrity: sha512-yb5WTRaHdkgOqFOZiu6rHV1fAEK0flVpaIN2HB6kxHVSy/dIajWbThS7qON3W9/SNOH2JWkVCyulgGYekMePuw==}\n    engines: {node: '>= 10'}\n    cpu: [x64]\n    os: [linux]\n\n  '@next/swc-linux-x64-musl@15.2.4':\n    resolution: {integrity: sha512-Dcdv/ix6srhkM25fgXiyOieFUkz+fOYkHlydWCtB0xMST6X9XYI3yPDKBZt1xuhOytONsIFJFB08xXYsxUwJLw==}\n    engines: {node: '>= 10'}\n    cpu: [x64]\n    os: [linux]\n\n  '@next/swc-win32-arm64-msvc@15.2.4':\n    resolution: {integrity: sha512-dW0i7eukvDxtIhCYkMrZNQfNicPDExt2jPb9AZPpL7cfyUo7QSNl1DjsHjmmKp6qNAqUESyT8YFl/Aw91cNJJg==}\n    engines: {node: '>= 10'}\n    cpu: [arm64]\n    os: [win32]\n\n  '@next/swc-win32-x64-msvc@15.2.4':\n    resolution: {integrity: sha512-SbnWkJmkS7Xl3kre8SdMF6F/XDh1DTFEhp0jRTj/uB8iPKoU2bb2NDfcu+iifv1+mxQEd1g2vvSxcZbXSKyWiQ==}\n    engines: {node: '>= 10'}\n    cpu: [x64]\n    os: [win32]\n\n  '@nodelib/fs.scandir@2.1.5':\n    resolution: {integrity: sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==}\n    engines: {node: '>= 8'}\n\n  '@nodelib/fs.stat@2.0.5':\n    resolution: {integrity: sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==}\n    engines: {node: '>= 8'}\n\n  '@nodelib/fs.walk@1.2.8':\n    resolution: {integrity: sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==}\n    engines: {node: '>= 8'}\n\n  '@pkgjs/parseargs@0.11.0':\n    resolution: {integrity: sha512-+1VkjdD0QBLPodGrJUeqarH8VAIvQODIbwh9XpP5Syisf7YoQgsJKPNFoqqLQlu+VQ/tVSshMR6loPMn8U+dPg==}\n    engines: {node: '>=14'}\n\n  '@radix-ui/number@1.1.0':\n    resolution: {integrity: sha512-V3gRzhVNU1ldS5XhAPTom1fOIo4ccrjjJgmE+LI2h/WaFpHmx0MQApT+KZHnx8abG6Avtfcz4WoEciMnpFT3HQ==}\n\n  '@radix-ui/primitive@1.1.1':\n    resolution: {integrity: sha512-SJ31y+Q/zAyShtXJc8x83i9TYdbAfHZ++tUZnvjJJqFjzsdUnKsxPL6IEtBlxKkU7yzer//GQtZSV4GbldL3YA==}\n\n  '@radix-ui/react-accordion@1.2.2':\n    resolution: {integrity: sha512-b1oh54x4DMCdGsB4/7ahiSrViXxaBwRPotiZNnYXjLha9vfuURSAZErki6qjDoSIV0eXx5v57XnTGVtGwnfp2g==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-alert-dialog@1.1.4':\n    resolution: {integrity: sha512-A6Kh23qZDLy3PSU4bh2UJZznOrUdHImIXqF8YtUa6CN73f8EOO9XlXSCd9IHyPvIquTaa/kwaSWzZTtUvgXVGw==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-arrow@1.1.1':\n    resolution: {integrity: sha512-NaVpZfmv8SKeZbn4ijN2V3jlHA9ngBG16VnIIm22nUR0Yk8KUALyBxT3KYEUnNuch9sTE8UTsS3whzBgKOL30w==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-aspect-ratio@1.1.1':\n    resolution: {integrity: sha512-kNU4FIpcFMBLkOUcgeIteH06/8JLBcYY6Le1iKenDGCYNYFX3TQqCZjzkOsz37h7r94/99GTb7YhEr98ZBJibw==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-avatar@1.1.2':\n    resolution: {integrity: sha512-GaC7bXQZ5VgZvVvsJ5mu/AEbjYLnhhkoidOboC50Z6FFlLA03wG2ianUoH+zgDQ31/9gCF59bE4+2bBgTyMiig==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-checkbox@1.1.3':\n    resolution: {integrity: sha512-HD7/ocp8f1B3e6OHygH0n7ZKjONkhciy1Nh0yuBgObqThc3oyx+vuMfFHKAknXRHHWVE9XvXStxJFyjUmB8PIw==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-collapsible@1.1.2':\n    resolution: {integrity: sha512-PliMB63vxz7vggcyq0IxNYk8vGDrLXVWw4+W4B8YnwI1s18x7YZYqlG9PLX7XxAJUi0g2DxP4XKJMFHh/iVh9A==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-collection@1.1.1':\n    resolution: {integrity: sha512-LwT3pSho9Dljg+wY2KN2mrrh6y3qELfftINERIzBUO9e0N+t0oMTyn3k9iv+ZqgrwGkRnLpNJrsMv9BZlt2yuA==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-compose-refs@1.1.1':\n    resolution: {integrity: sha512-Y9VzoRDSJtgFMUCoiZBDVo084VQ5hfpXxVE+NgkdNsjiDBByiImMZKKhxMwCbdHvhlENG6a833CbFkOQvTricw==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-compose-refs@1.1.2':\n    resolution: {integrity: sha512-z4eqJvfiNnFMHIIvXP3CY57y2WJs5g2v3X0zm9mEJkrkNv4rDxu+sg9Jh8EkXyeqBkB7SOcboo9dMVqhyrACIg==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-context-menu@2.2.4':\n    resolution: {integrity: sha512-ap4wdGwK52rJxGkwukU1NrnEodsUFQIooANKu+ey7d6raQ2biTcEf8za1zr0mgFHieevRTB2nK4dJeN8pTAZGQ==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-context@1.1.1':\n    resolution: {integrity: sha512-UASk9zi+crv9WteK/NU4PLvOoL3OuE6BWVKNF6hPRBtYBDXQ2u5iu3O59zUlJiTVvkyuycnqrztsHVJwcK9K+Q==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-dialog@1.1.4':\n    resolution: {integrity: sha512-Ur7EV1IwQGCyaAuyDRiOLA5JIUZxELJljF+MbM/2NC0BYwfuRrbpS30BiQBJrVruscgUkieKkqXYDOoByaxIoA==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-direction@1.1.0':\n    resolution: {integrity: sha512-BUuBvgThEiAXh2DWu93XsT+a3aWrGqolGlqqw5VU1kG7p/ZH2cuDlM1sRLNnY3QcBS69UIz2mcKhMxDsdewhjg==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-dismissable-layer@1.1.3':\n    resolution: {integrity: sha512-onrWn/72lQoEucDmJnr8uczSNTujT0vJnA/X5+3AkChVPowr8n1yvIKIabhWyMQeMvvmdpsvcyDqx3X1LEXCPg==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-dropdown-menu@2.1.4':\n    resolution: {integrity: sha512-iXU1Ab5ecM+yEepGAWK8ZhMyKX4ubFdCNtol4sT9D0OVErG9PNElfx3TQhjw7n7BC5nFVz68/5//clWy+8TXzA==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-focus-guards@1.1.1':\n    resolution: {integrity: sha512-pSIwfrT1a6sIoDASCSpFwOasEwKTZWDw/iBdtnqKO7v6FeOzYJ7U53cPzYFVR3geGGXgVHaH+CdngrrAzqUGxg==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-focus-scope@1.1.1':\n    resolution: {integrity: sha512-01omzJAYRxXdG2/he/+xy+c8a8gCydoQ1yOxnWNcRhrrBW5W+RQJ22EK1SaO8tb3WoUsuEw7mJjBozPzihDFjA==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-hover-card@1.1.4':\n    resolution: {integrity: sha512-QSUUnRA3PQ2UhvoCv3eYvMnCAgGQW+sTu86QPuNb+ZMi+ZENd6UWpiXbcWDQ4AEaKF9KKpCHBeaJz9Rw6lRlaQ==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-id@1.1.0':\n    resolution: {integrity: sha512-EJUrI8yYh7WOjNOqpoJaf1jlFIH2LvtgAl+YcFqNCa+4hj64ZXmPkAKOFs/ukjz3byN6bdb/AVUqHkI8/uWWMA==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-id@1.1.1':\n    resolution: {integrity: sha512-kGkGegYIdQsOb4XjsfM97rXsiHaBwco+hFI66oO4s9LU+PLAC5oJ7khdOVFxkhsmlbpUqDAvXw11CluXP+jkHg==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-label@2.1.1':\n    resolution: {integrity: sha512-UUw5E4e/2+4kFMH7+YxORXGWggtY6sM8WIwh5RZchhLuUg2H1hc98Py+pr8HMz6rdaYrK2t296ZEjYLOCO5uUw==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-menu@2.1.4':\n    resolution: {integrity: sha512-BnOgVoL6YYdHAG6DtXONaR29Eq4nvbi8rutrV/xlr3RQCMMb3yqP85Qiw/3NReozrSW+4dfLkK+rc1hb4wPU/A==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-menubar@1.1.4':\n    resolution: {integrity: sha512-+KMpi7VAZuB46+1LD7a30zb5IxyzLgC8m8j42gk3N4TUCcViNQdX8FhoH1HDvYiA8quuqcek4R4bYpPn/SY1GA==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-navigation-menu@1.2.3':\n    resolution: {integrity: sha512-IQWAsQ7dsLIYDrn0WqPU+cdM7MONTv9nqrLVYoie3BPiabSfUVDe6Fr+oEt0Cofsr9ONDcDe9xhmJbL1Uq1yKg==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-popover@1.1.4':\n    resolution: {integrity: sha512-aUACAkXx8LaFymDma+HQVji7WhvEhpFJ7+qPz17Nf4lLZqtreGOFRiNQWQmhzp7kEWg9cOyyQJpdIMUMPc/CPw==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-popper@1.2.1':\n    resolution: {integrity: sha512-3kn5Me69L+jv82EKRuQCXdYyf1DqHwD2U/sxoNgBGCB7K9TRc3bQamQ+5EPM9EvyPdli0W41sROd+ZU1dTCztw==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-portal@1.1.3':\n    resolution: {integrity: sha512-NciRqhXnGojhT93RPyDaMPfLH3ZSl4jjIFbZQ1b/vxvZEdHsBZ49wP9w8L3HzUQwep01LcWtkUvm0OVB5JAHTw==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-presence@1.1.2':\n    resolution: {integrity: sha512-18TFr80t5EVgL9x1SwF/YGtfG+l0BS0PRAlCWBDoBEiDQjeKgnNZRVJp/oVBl24sr3Gbfwc/Qpj4OcWTQMsAEg==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-primitive@2.0.1':\n    resolution: {integrity: sha512-sHCWTtxwNn3L3fH8qAfnF3WbUZycW93SM1j3NFDzXBiz8D6F5UTTy8G1+WFEaiCdvCVRJWj6N2R4Xq6HdiHmDg==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-primitive@2.1.3':\n    resolution: {integrity: sha512-m9gTwRkhy2lvCPe6QJp4d3G1TYEUHn/FzJUtq9MjH46an1wJU+GdoGC5VLof8RX8Ft/DlpshApkhswDLZzHIcQ==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-progress@1.1.1':\n    resolution: {integrity: sha512-6diOawA84f/eMxFHcWut0aE1C2kyE9dOyCTQOMRR2C/qPiXz/X0SaiA/RLbapQaXUCmy0/hLMf9meSccD1N0pA==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-radio-group@1.2.2':\n    resolution: {integrity: sha512-E0MLLGfOP0l8P/NxgVzfXJ8w3Ch8cdO6UDzJfDChu4EJDy+/WdO5LqpdY8PYnCErkmZH3gZhDL1K7kQ41fAHuQ==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-roving-focus@1.1.1':\n    resolution: {integrity: sha512-QE1RoxPGJ/Nm8Qmk0PxP8ojmoaS67i0s7hVssS7KuI2FQoc/uzVlZsqKfQvxPE6D8hICCPHJ4D88zNhT3OOmkw==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-scroll-area@1.2.2':\n    resolution: {integrity: sha512-EFI1N/S3YxZEW/lJ/H1jY3njlvTd8tBmgKEn4GHi51+aMm94i6NmAJstsm5cu3yJwYqYc93gpCPm21FeAbFk6g==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-select@2.1.4':\n    resolution: {integrity: sha512-pOkb2u8KgO47j/h7AylCj7dJsm69BXcjkrvTqMptFqsE2i0p8lHkfgneXKjAgPzBMivnoMyt8o4KiV4wYzDdyQ==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-separator@1.1.1':\n    resolution: {integrity: sha512-RRiNRSrD8iUiXriq/Y5n4/3iE8HzqgLHsusUSg5jVpU2+3tqcUFPJXHDymwEypunc2sWxDUS3UC+rkZRlHedsw==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-slider@1.2.2':\n    resolution: {integrity: sha512-sNlU06ii1/ZcbHf8I9En54ZPW0Vil/yPVg4vQMcFNjrIx51jsHbFl1HYHQvCIWJSr1q0ZmA+iIs/ZTv8h7HHSA==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-slot@1.1.1':\n    resolution: {integrity: sha512-RApLLOcINYJA+dMVbOju7MYv1Mb2EBp2nH4HdDzXTSyaR5optlm6Otrz1euW3HbdOR8UmmFK06TD+A9frYWv+g==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-slot@1.2.3':\n    resolution: {integrity: sha512-aeNmHnBxbi2St0au6VBVC7JXFlhLlOnvIIlePNniyUNAClzmtAUEY8/pBiK3iHjufOlwA+c20/8jngo7xcrg8A==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-switch@1.1.2':\n    resolution: {integrity: sha512-zGukiWHjEdBCRyXvKR6iXAQG6qXm2esuAD6kDOi9Cn+1X6ev3ASo4+CsYaD6Fov9r/AQFekqnD/7+V0Cs6/98g==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-tabs@1.1.2':\n    resolution: {integrity: sha512-9u/tQJMcC2aGq7KXpGivMm1mgq7oRJKXphDwdypPd/j21j/2znamPU8WkXgnhUaTrSFNIt8XhOyCAupg8/GbwQ==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-toast@1.2.4':\n    resolution: {integrity: sha512-Sch9idFJHJTMH9YNpxxESqABcAFweJG4tKv+0zo0m5XBvUSL8FM5xKcJLFLXononpePs8IclyX1KieL5SDUNgA==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-toggle-group@1.1.1':\n    resolution: {integrity: sha512-OgDLZEA30Ylyz8YSXvnGqIHtERqnUt1KUYTKdw/y8u7Ci6zGiJfXc02jahmcSNK3YcErqioj/9flWC9S1ihfwg==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-toggle@1.1.1':\n    resolution: {integrity: sha512-i77tcgObYr743IonC1hrsnnPmszDRn8p+EGUsUt+5a/JFn28fxaM88Py6V2mc8J5kELMWishI0rLnuGLFD/nnQ==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-tooltip@1.1.6':\n    resolution: {integrity: sha512-TLB5D8QLExS1uDn7+wH/bjEmRurNMTzNrtq7IjaS4kjion9NtzsTGkvR5+i7yc9q01Pi2KMM2cN3f8UG4IvvXA==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-use-callback-ref@1.1.0':\n    resolution: {integrity: sha512-CasTfvsy+frcFkbXtSJ2Zu9JHpN8TYKxkgJGWbjiZhFivxaeW7rMeZt7QELGVLaYVfFMsKHjb7Ak0nMEe+2Vfw==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-use-controllable-state@1.1.0':\n    resolution: {integrity: sha512-MtfMVJiSr2NjzS0Aa90NPTnvTSg6C/JLCV7ma0W6+OMV78vd8OyRpID+Ng9LxzsPbLeuBnWBA1Nq30AtBIDChw==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-use-escape-keydown@1.1.0':\n    resolution: {integrity: sha512-L7vwWlR1kTTQ3oh7g1O0CBF3YCyyTj8NmhLR+phShpyA50HCfBFKVJTpshm9PzLiKmehsrQzTYTpX9HvmC9rhw==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-use-layout-effect@1.1.0':\n    resolution: {integrity: sha512-+FPE0rOdziWSrH9athwI1R0HDVbWlEhd+FR+aSDk4uWGmSJ9Z54sdZVDQPZAinJhJXwfT+qnj969mCsT2gfm5w==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-use-layout-effect@1.1.1':\n    resolution: {integrity: sha512-RbJRS4UWQFkzHTTwVymMTUv8EqYhOp8dOOviLj2ugtTiXRaRQS7GLGxZTLL1jWhMeoSCf5zmcZkqTl9IiYfXcQ==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-use-previous@1.1.0':\n    resolution: {integrity: sha512-Z/e78qg2YFnnXcW88A4JmTtm4ADckLno6F7OXotmkQfeuCVaKuYzqAATPhVzl3delXE7CxIV8shofPn3jPc5Og==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-use-rect@1.1.0':\n    resolution: {integrity: sha512-0Fmkebhr6PiseyZlYAOtLS+nb7jLmpqTrJyv61Pe68MKYW6OWdRE2kI70TaYY27u7H0lajqM3hSMMLFq18Z7nQ==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-use-size@1.1.0':\n    resolution: {integrity: sha512-XW3/vWuIXHa+2Uwcc2ABSfcCledmXhhQPlGbfcRXbiUQI5Icjcg19BGCZVKKInYbvUCut/ufbbLLPFC5cbb1hw==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-visually-hidden@1.1.1':\n    resolution: {integrity: sha512-vVfA2IZ9q/J+gEamvj761Oq1FpWgCDaNOOIfbPVp2MVPLEomUr5+Vf7kJGwQ24YxZSlQVar7Bes8kyTo5Dshpg==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/rect@1.1.0':\n    resolution: {integrity: sha512-A9+lCBZoaMJlVKcRBz2YByCG+Cp2t6nAnMnNba+XiWxnj6r4JUFqfsgwocMBZU9LPtdxC6wB56ySYpc7LQIoJg==}\n\n  '@swc/counter@0.1.3':\n    resolution: {integrity: sha512-e2BR4lsJkkRlKZ/qCHPw9ZaSxc0MVUd7gtbtaB7aMvHeJVYe8sOB8DBZkP2DtISHGSku9sCK6T6cnY0CtXrOCQ==}\n\n  '@swc/helpers@0.5.15':\n    resolution: {integrity: sha512-JQ5TuMi45Owi4/BIMAJBoSQoOJu12oOk/gADqlcUL9JEdHB8vyjUSsxqeNXnmXHjYKMi2WcYtezGEEhqUI/E2g==}\n\n  '@types/d3-array@3.2.1':\n    resolution: {integrity: sha512-Y2Jn2idRrLzUfAKV2LyRImR+y4oa2AntrgID95SHJxuMUrkNXmanDSed71sRNZysveJVt1hLLemQZIady0FpEg==}\n\n  '@types/d3-color@3.1.3':\n    resolution: {integrity: sha512-iO90scth9WAbmgv7ogoq57O9YpKmFBbmoEoCHDB2xMBY0+/KVrqAaCDyCE16dUspeOvIxFFRI+0sEtqDqy2b4A==}\n\n  '@types/d3-ease@3.0.2':\n    resolution: {integrity: sha512-NcV1JjO5oDzoK26oMzbILE6HW7uVXOHLQvHshBUW4UMdZGfiY6v5BeQwh9a9tCzv+CeefZQHJt5SRgK154RtiA==}\n\n  '@types/d3-interpolate@3.0.4':\n    resolution: {integrity: sha512-mgLPETlrpVV1YRJIglr4Ez47g7Yxjl1lj7YKsiMCb27VJH9W8NVM6Bb9d8kkpG/uAQS5AmbA48q2IAolKKo1MA==}\n\n  '@types/d3-path@3.1.1':\n    resolution: {integrity: sha512-VMZBYyQvbGmWyWVea0EHs/BwLgxc+MKi1zLDCONksozI4YJMcTt8ZEuIR4Sb1MMTE8MMW49v0IwI5+b7RmfWlg==}\n\n  '@types/d3-scale@4.0.9':\n    resolution: {integrity: sha512-dLmtwB8zkAeO/juAMfnV+sItKjlsw2lKdZVVy6LRr0cBmegxSABiLEpGVmSJJ8O08i4+sGR6qQtb6WtuwJdvVw==}\n\n  '@types/d3-shape@3.1.7':\n    resolution: {integrity: sha512-VLvUQ33C+3J+8p+Daf+nYSOsjB4GXp19/S/aGo60m9h1v6XaxjiT82lKVWJCfzhtuZ3yD7i/TPeC/fuKLLOSmg==}\n\n  '@types/d3-time@3.0.4':\n    resolution: {integrity: sha512-yuzZug1nkAAaBlBBikKZTgzCeA+k1uy4ZFwWANOfKw5z5LRhV0gNA7gNkKm7HoK+HRN0wX3EkxGk0fpbWhmB7g==}\n\n  '@types/d3-timer@3.0.2':\n    resolution: {integrity: sha512-Ps3T8E8dZDam6fUyNiMkekK3XUsaUEik+idO9/YjPtfj2qruF8tFBXS7XhtE4iIXBLxhmLjP3SXpLhVf21I9Lw==}\n\n  '@types/node@22.15.29':\n    resolution: {integrity: sha512-LNdjOkUDlU1RZb8e1kOIUpN1qQUlzGkEtbVNo53vbrwDg5om6oduhm4SiUaPW5ASTXhAiP0jInWG8Qx9fVlOeQ==}\n\n  '@types/react-dom@19.1.5':\n    resolution: {integrity: sha512-CMCjrWucUBZvohgZxkjd6S9h0nZxXjzus6yDfUb+xLxYM7VvjKNH1tQrE9GWLql1XoOP4/Ds3bwFqShHUYraGg==}\n    peerDependencies:\n      '@types/react': ^19.0.0\n\n  '@types/react@19.1.6':\n    resolution: {integrity: sha512-JeG0rEWak0N6Itr6QUx+X60uQmN+5t3j9r/OVDtWzFXKaj6kD1BwJzOksD0FF6iWxZlbE1kB0q9vtnU2ekqa1Q==}\n\n  ansi-regex@5.0.1:\n    resolution: {integrity: sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==}\n    engines: {node: '>=8'}\n\n  ansi-regex@6.1.0:\n    resolution: {integrity: sha512-7HSX4QQb4CspciLpVFwyRe79O3xsIZDDLER21kERQ71oaPodF8jL725AgJMFAYbooIqolJoRLuM81SpeUkpkvA==}\n    engines: {node: '>=12'}\n\n  ansi-styles@4.3.0:\n    resolution: {integrity: sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==}\n    engines: {node: '>=8'}\n\n  ansi-styles@6.2.1:\n    resolution: {integrity: sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==}\n    engines: {node: '>=12'}\n\n  any-promise@1.3.0:\n    resolution: {integrity: sha512-7UvmKalWRt1wgjL1RrGxoSJW/0QZFIegpeGvZG9kjp8vrRu55XTHbwnqq2GpXm9uLbcuhxm3IqX9OB4MZR1b2A==}\n\n  anymatch@3.1.3:\n    resolution: {integrity: sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==}\n    engines: {node: '>= 8'}\n\n  arg@5.0.2:\n    resolution: {integrity: sha512-PYjyFOLKQ9y57JvQ6QLo8dAgNqswh8M1RMJYdQduT6xbWSgK36P/Z/v+p888pM69jMMfS8Xd8F6I1kQ/I9HUGg==}\n\n  aria-hidden@1.2.6:\n    resolution: {integrity: sha512-ik3ZgC9dY/lYVVM++OISsaYDeg1tb0VtP5uL3ouh1koGOaUMDPpbFIei4JkFimWUFPn90sbMNMXQAIVOlnYKJA==}\n    engines: {node: '>=10'}\n\n  autoprefixer@10.4.21:\n    resolution: {integrity: sha512-O+A6LWV5LDHSJD3LjHYoNi4VLsj/Whi7k6zG12xTYaU4cQ8oxQGckXNX8cRHK5yOZ/ppVHe0ZBXGzSV9jXdVbQ==}\n    engines: {node: ^10 || ^12 || >=14}\n    hasBin: true\n    peerDependencies:\n      postcss: ^8.1.0\n\n  balanced-match@1.0.2:\n    resolution: {integrity: sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==}\n\n  binary-extensions@2.3.0:\n    resolution: {integrity: sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==}\n    engines: {node: '>=8'}\n\n  brace-expansion@2.0.1:\n    resolution: {integrity: sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==}\n\n  braces@3.0.3:\n    resolution: {integrity: sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==}\n    engines: {node: '>=8'}\n\n  browserslist@4.25.0:\n    resolution: {integrity: sha512-PJ8gYKeS5e/whHBh8xrwYK+dAvEj7JXtz6uTucnMRB8OiGTsKccFekoRrjajPBHV8oOY+2tI4uxeceSimKwMFA==}\n    engines: {node: ^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7}\n    hasBin: true\n\n  busboy@1.6.0:\n    resolution: {integrity: sha512-8SFQbg/0hQ9xy3UNTB0YEnsNBbWfhf7RtnzpL7TkBiTBRfrQ9Fxcnz7VJsleJpyp6rVLvXiuORqjlHi5q+PYuA==}\n    engines: {node: '>=10.16.0'}\n\n  camelcase-css@2.0.1:\n    resolution: {integrity: sha512-QOSvevhslijgYwRx6Rv7zKdMF8lbRmx+uQGx2+vDc+KI/eBnsy9kit5aj23AgGu3pa4t9AgwbnXWqS+iOY+2aA==}\n    engines: {node: '>= 6'}\n\n  caniuse-lite@1.0.30001720:\n    resolution: {integrity: sha512-Ec/2yV2nNPwb4DnTANEV99ZWwm3ZWfdlfkQbWSDDt+PsXEVYwlhPH8tdMaPunYTKKmz7AnHi2oNEi1GcmKCD8g==}\n\n  chokidar@3.6.0:\n    resolution: {integrity: sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==}\n    engines: {node: '>= 8.10.0'}\n\n  class-variance-authority@0.7.1:\n    resolution: {integrity: sha512-Ka+9Trutv7G8M6WT6SeiRWz792K5qEqIGEGzXKhAE6xOWAY6pPH8U+9IY3oCMv6kqTmLsv7Xh/2w2RigkePMsg==}\n\n  client-only@0.0.1:\n    resolution: {integrity: sha512-IV3Ou0jSMzZrd3pZ48nLkT9DA7Ag1pnPzaiQhpW7c3RbcqqzvzzVu+L8gfqMp/8IM2MQtSiqaCxrrcfu8I8rMA==}\n\n  clsx@2.1.1:\n    resolution: {integrity: sha512-eYm0QWBtUrBWZWG0d386OGAw16Z995PiOVo2B7bjWSbHedGl5e0ZWaq65kOGgUSNesEIDkB9ISbTg/JK9dhCZA==}\n    engines: {node: '>=6'}\n\n  cmdk@1.0.4:\n    resolution: {integrity: sha512-AnsjfHyHpQ/EFeAnG216WY7A5LiYCoZzCSygiLvfXC3H3LFGCprErteUcszaVluGOhuOTbJS3jWHrSDYPBBygg==}\n    peerDependencies:\n      react: ^18 || ^19 || ^19.0.0-rc\n      react-dom: ^18 || ^19 || ^19.0.0-rc\n\n  color-convert@2.0.1:\n    resolution: {integrity: sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==}\n    engines: {node: '>=7.0.0'}\n\n  color-name@1.1.4:\n    resolution: {integrity: sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==}\n\n  color-string@1.9.1:\n    resolution: {integrity: sha512-shrVawQFojnZv6xM40anx4CkoDP+fZsw/ZerEMsW/pyzsRbElpsL/DBVW7q3ExxwusdNXI3lXpuhEZkzs8p5Eg==}\n\n  color@4.2.3:\n    resolution: {integrity: sha512-1rXeuUUiGGrykh+CeBdu5Ie7OJwinCgQY0bc7GCRxy5xVHy+moaqkpL/jqQq0MtQOeYcrqEz4abc5f0KtU7W4A==}\n    engines: {node: '>=12.5.0'}\n\n  commander@4.1.1:\n    resolution: {integrity: sha512-NOKm8xhkzAjzFx8B2v5OAHT+u5pRQc2UCa2Vq9jYL/31o2wi9mxBA7LIFs3sV5VSC49z6pEhfbMULvShKj26WA==}\n    engines: {node: '>= 6'}\n\n  cross-spawn@7.0.6:\n    resolution: {integrity: sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==}\n    engines: {node: '>= 8'}\n\n  cssesc@3.0.0:\n    resolution: {integrity: sha512-/Tb/JcjK111nNScGob5MNtsntNM1aCNUDipB/TkwZFhyDrrE47SOx/18wF2bbjgc3ZzCSKW1T5nt5EbFoAz/Vg==}\n    engines: {node: '>=4'}\n    hasBin: true\n\n  csstype@3.1.3:\n    resolution: {integrity: sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw==}\n\n  d3-array@3.2.4:\n    resolution: {integrity: sha512-tdQAmyA18i4J7wprpYq8ClcxZy3SC31QMeByyCFyRt7BVHdREQZ5lpzoe5mFEYZUWe+oq8HBvk9JjpibyEV4Jg==}\n    engines: {node: '>=12'}\n\n  d3-color@3.1.0:\n    resolution: {integrity: sha512-zg/chbXyeBtMQ1LbD/WSoW2DpC3I0mpmPdW+ynRTj/x2DAWYrIY7qeZIHidozwV24m4iavr15lNwIwLxRmOxhA==}\n    engines: {node: '>=12'}\n\n  d3-ease@3.0.1:\n    resolution: {integrity: sha512-wR/XK3D3XcLIZwpbvQwQ5fK+8Ykds1ip7A2Txe0yxncXSdq1L9skcG7blcedkOX+ZcgxGAmLX1FrRGbADwzi0w==}\n    engines: {node: '>=12'}\n\n  d3-format@3.1.0:\n    resolution: {integrity: sha512-YyUI6AEuY/Wpt8KWLgZHsIU86atmikuoOmCfommt0LYHiQSPjvX2AcFc38PX0CBpr2RCyZhjex+NS/LPOv6YqA==}\n    engines: {node: '>=12'}\n\n  d3-interpolate@3.0.1:\n    resolution: {integrity: sha512-3bYs1rOD33uo8aqJfKP3JWPAibgw8Zm2+L9vBKEHJ2Rg+viTR7o5Mmv5mZcieN+FRYaAOWX5SJATX6k1PWz72g==}\n    engines: {node: '>=12'}\n\n  d3-path@3.1.0:\n    resolution: {integrity: sha512-p3KP5HCf/bvjBSSKuXid6Zqijx7wIfNW+J/maPs+iwR35at5JCbLUT0LzF1cnjbCHWhqzQTIN2Jpe8pRebIEFQ==}\n    engines: {node: '>=12'}\n\n  d3-scale@4.0.2:\n    resolution: {integrity: sha512-GZW464g1SH7ag3Y7hXjf8RoUuAFIqklOAq3MRl4OaWabTFJY9PN/E1YklhXLh+OQ3fM9yS2nOkCoS+WLZ6kvxQ==}\n    engines: {node: '>=12'}\n\n  d3-shape@3.2.0:\n    resolution: {integrity: sha512-SaLBuwGm3MOViRq2ABk3eLoxwZELpH6zhl3FbAoJ7Vm1gofKx6El1Ib5z23NUEhF9AsGl7y+dzLe5Cw2AArGTA==}\n    engines: {node: '>=12'}\n\n  d3-time-format@4.1.0:\n    resolution: {integrity: sha512-dJxPBlzC7NugB2PDLwo9Q8JiTR3M3e4/XANkreKSUxF8vvXKqm1Yfq4Q5dl8budlunRVlUUaDUgFt7eA8D6NLg==}\n    engines: {node: '>=12'}\n\n  d3-time@3.1.0:\n    resolution: {integrity: sha512-VqKjzBLejbSMT4IgbmVgDjpkYrNWUYJnbCGo874u7MMKIWsILRX+OpX/gTk8MqjpT1A/c6HY2dCA77ZN0lkQ2Q==}\n    engines: {node: '>=12'}\n\n  d3-timer@3.0.1:\n    resolution: {integrity: sha512-ndfJ/JxxMd3nw31uyKoY2naivF+r29V+Lc0svZxe1JvvIRmi8hUsrMvdOwgS1o6uBHmiz91geQ0ylPP0aj1VUA==}\n    engines: {node: '>=12'}\n\n  date-fns@4.1.0:\n    resolution: {integrity: sha512-Ukq0owbQXxa/U3EGtsdVBkR1w7KOQ5gIBqdH2hkvknzZPYvBxb/aa6E8L7tmjFtkwZBu3UXBbjIgPo/Ez4xaNg==}\n\n  decimal.js-light@2.5.1:\n    resolution: {integrity: sha512-qIMFpTMZmny+MMIitAB6D7iVPEorVw6YQRWkvarTkT4tBeSLLiHzcwj6q0MmYSFCiVpiqPJTJEYIrpcPzVEIvg==}\n\n  detect-libc@2.0.4:\n    resolution: {integrity: sha512-3UDv+G9CsCKO1WKMGw9fwq/SWJYbI0c5Y7LU1AXYoDdbhE2AHQ6N6Nb34sG8Fj7T5APy8qXDCKuuIHd1BR0tVA==}\n    engines: {node: '>=8'}\n\n  detect-node-es@1.1.0:\n    resolution: {integrity: sha512-ypdmJU/TbBby2Dxibuv7ZLW3Bs1QEmM7nHjEANfohJLvE0XVujisn1qPJcZxg+qDucsr+bP6fLD1rPS3AhJ7EQ==}\n\n  didyoumean@1.2.2:\n    resolution: {integrity: sha512-gxtyfqMg7GKyhQmb056K7M3xszy/myH8w+B4RT+QXBQsvAOdc3XymqDDPHx1BgPgsdAA5SIifona89YtRATDzw==}\n\n  dlv@1.1.3:\n    resolution: {integrity: sha512-+HlytyjlPKnIG8XuRG8WvmBP8xs8P71y+SKKS6ZXWoEgLuePxtDoUEiH7WkdePWrQ5JBpE6aoVqfZfJUQkjXwA==}\n\n  dom-helpers@5.2.1:\n    resolution: {integrity: sha512-nRCa7CK3VTrM2NmGkIy4cbK7IZlgBE/PYMn55rrXefr5xXDP0LdtfPnblFDoVdcAfslJ7or6iqAUnx0CCGIWQA==}\n\n  eastasianwidth@0.2.0:\n    resolution: {integrity: sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==}\n\n  electron-to-chromium@1.5.161:\n    resolution: {integrity: sha512-hwtetwfKNZo/UlwHIVBlKZVdy7o8bIZxxKs0Mv/ROPiQQQmDgdm5a+KvKtBsxM8ZjFzTaCeLoodZ8jiBE3o9rA==}\n\n  embla-carousel-react@8.5.1:\n    resolution: {integrity: sha512-z9Y0K84BJvhChXgqn2CFYbfEi6AwEr+FFVVKm/MqbTQ2zIzO1VQri6w67LcfpVF0AjbhwVMywDZqY4alYkjW5w==}\n    peerDependencies:\n      react: ^16.8.0 || ^17.0.1 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc\n\n  embla-carousel-reactive-utils@8.5.1:\n    resolution: {integrity: sha512-n7VSoGIiiDIc4MfXF3ZRTO59KDp820QDuyBDGlt5/65+lumPHxX2JLz0EZ23hZ4eg4vZGUXwMkYv02fw2JVo/A==}\n    peerDependencies:\n      embla-carousel: 8.5.1\n\n  embla-carousel@8.5.1:\n    resolution: {integrity: sha512-JUb5+FOHobSiWQ2EJNaueCNT/cQU9L6XWBbWmorWPQT9bkbk+fhsuLr8wWrzXKagO3oWszBO7MSx+GfaRk4E6A==}\n\n  emoji-regex@8.0.0:\n    resolution: {integrity: sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==}\n\n  emoji-regex@9.2.2:\n    resolution: {integrity: sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==}\n\n  escalade@3.2.0:\n    resolution: {integrity: sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==}\n    engines: {node: '>=6'}\n\n  eventemitter3@4.0.7:\n    resolution: {integrity: sha512-8guHBZCwKnFhYdHr2ysuRWErTwhoN2X8XELRlrRwpmfeY2jjuUN4taQMsULKUVo1K4DvZl+0pgfyoysHxvmvEw==}\n\n  fast-equals@5.2.2:\n    resolution: {integrity: sha512-V7/RktU11J3I36Nwq2JnZEM7tNm17eBJz+u25qdxBZeCKiX6BkVSZQjwWIr+IobgnZy+ag73tTZgZi7tr0LrBw==}\n    engines: {node: '>=6.0.0'}\n\n  fast-glob@3.3.3:\n    resolution: {integrity: sha512-7MptL8U0cqcFdzIzwOTHoilX9x5BrNqye7Z/LuC7kCMRio1EMSyqRK3BEAUD7sXRq4iT4AzTVuZdhgQ2TCvYLg==}\n    engines: {node: '>=8.6.0'}\n\n  fastq@1.19.1:\n    resolution: {integrity: sha512-GwLTyxkCXjXbxqIhTsMI2Nui8huMPtnxg7krajPJAjnEG/iiOS7i+zCtWGZR9G0NBKbXKh6X9m9UIsYX/N6vvQ==}\n\n  fill-range@7.1.1:\n    resolution: {integrity: sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==}\n    engines: {node: '>=8'}\n\n  foreground-child@3.3.1:\n    resolution: {integrity: sha512-gIXjKqtFuWEgzFRJA9WCQeSJLZDjgJUOMCMzxtvFq/37KojM1BFGufqsCy0r4qSQmYLsZYMeyRqzIWOMup03sw==}\n    engines: {node: '>=14'}\n\n  fraction.js@4.3.7:\n    resolution: {integrity: sha512-ZsDfxO51wGAXREY55a7la9LScWpwv9RxIrYABrlvOFBlH/ShPnrtsXeuUIfXKKOVicNxQ+o8JTbJvjS4M89yew==}\n\n  fsevents@2.3.3:\n    resolution: {integrity: sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==}\n    engines: {node: ^8.16.0 || ^10.6.0 || >=11.0.0}\n    os: [darwin]\n\n  function-bind@1.1.2:\n    resolution: {integrity: sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==}\n\n  get-nonce@1.0.1:\n    resolution: {integrity: sha512-FJhYRoDaiatfEkUK8HKlicmu/3SGFD51q3itKDGoSTysQJBnfOcxU5GxnhE1E6soB76MbT0MBtnKJuXyAx+96Q==}\n    engines: {node: '>=6'}\n\n  glob-parent@5.1.2:\n    resolution: {integrity: sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==}\n    engines: {node: '>= 6'}\n\n  glob-parent@6.0.2:\n    resolution: {integrity: sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==}\n    engines: {node: '>=10.13.0'}\n\n  glob@10.4.5:\n    resolution: {integrity: sha512-7Bv8RF0k6xjo7d4A/PxYLbUCfb6c+Vpd2/mB2yRDlew7Jb5hEXiCD9ibfO7wpk8i4sevK6DFny9h7EYbM3/sHg==}\n    hasBin: true\n\n  hasown@2.0.2:\n    resolution: {integrity: sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==}\n    engines: {node: '>= 0.4'}\n\n  input-otp@1.4.1:\n    resolution: {integrity: sha512-+yvpmKYKHi9jIGngxagY9oWiiblPB7+nEO75F2l2o4vs+6vpPZZmUl4tBNYuTCvQjhvEIbdNeJu70bhfYP2nbw==}\n    peerDependencies:\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0.0 || ^19.0.0-rc\n\n  internmap@2.0.3:\n    resolution: {integrity: sha512-5Hh7Y1wQbvY5ooGgPbDaL5iYLAPzMTUrjMulskHLH6wnv/A+1q5rgEaiuqEjB+oxGXIVZs1FF+R/KPN3ZSQYYg==}\n    engines: {node: '>=12'}\n\n  is-arrayish@0.3.2:\n    resolution: {integrity: sha512-eVRqCvVlZbuw3GrM63ovNSNAeA1K16kaR/LRY/92w0zxQ5/1YzwblUX652i4Xs9RwAGjW9d9y6X88t8OaAJfWQ==}\n\n  is-binary-path@2.1.0:\n    resolution: {integrity: sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==}\n    engines: {node: '>=8'}\n\n  is-core-module@2.16.1:\n    resolution: {integrity: sha512-UfoeMA6fIJ8wTYFEUjelnaGI67v6+N7qXJEvQuIGa99l4xsCruSYOVSQ0uPANn4dAzm8lkYPaKLrrijLq7x23w==}\n    engines: {node: '>= 0.4'}\n\n  is-extglob@2.1.1:\n    resolution: {integrity: sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==}\n    engines: {node: '>=0.10.0'}\n\n  is-fullwidth-code-point@3.0.0:\n    resolution: {integrity: sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==}\n    engines: {node: '>=8'}\n\n  is-glob@4.0.3:\n    resolution: {integrity: sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==}\n    engines: {node: '>=0.10.0'}\n\n  is-number@7.0.0:\n    resolution: {integrity: sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==}\n    engines: {node: '>=0.12.0'}\n\n  isexe@2.0.0:\n    resolution: {integrity: sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==}\n\n  jackspeak@3.4.3:\n    resolution: {integrity: sha512-OGlZQpz2yfahA/Rd1Y8Cd9SIEsqvXkLVoSw/cgwhnhFMDbsQFeZYoJJ7bIZBS9BcamUW96asq/npPWugM+RQBw==}\n\n  jiti@1.21.7:\n    resolution: {integrity: sha512-/imKNG4EbWNrVjoNC/1H5/9GFy+tqjGBHCaSsN+P2RnPqjsLmv6UD3Ej+Kj8nBWaRAwyk7kK5ZUc+OEatnTR3A==}\n    hasBin: true\n\n  js-tokens@4.0.0:\n    resolution: {integrity: sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==}\n\n  lilconfig@3.1.3:\n    resolution: {integrity: sha512-/vlFKAoH5Cgt3Ie+JLhRbwOsCQePABiU3tJ1egGvyQ+33R/vcwM2Zl2QR/LzjsBeItPt3oSVXapn+m4nQDvpzw==}\n    engines: {node: '>=14'}\n\n  lines-and-columns@1.2.4:\n    resolution: {integrity: sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg==}\n\n  lodash@4.17.21:\n    resolution: {integrity: sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==}\n\n  loose-envify@1.4.0:\n    resolution: {integrity: sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==}\n    hasBin: true\n\n  lru-cache@10.4.3:\n    resolution: {integrity: sha512-JNAzZcXrCt42VGLuYz0zfAzDfAvJWW6AfYlDBQyDV5DClI2m5sAmK+OIO7s59XfsRsWHp02jAJrRadPRGTt6SQ==}\n\n  lucide-react@0.454.0:\n    resolution: {integrity: sha512-hw7zMDwykCLnEzgncEEjHeA6+45aeEzRYuKHuyRSOPkhko+J3ySGjGIzu+mmMfDFG1vazHepMaYFYHbTFAZAAQ==}\n    peerDependencies:\n      react: ^16.5.1 || ^17.0.0 || ^18.0.0 || ^19.0.0-rc\n\n  merge2@1.4.1:\n    resolution: {integrity: sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==}\n    engines: {node: '>= 8'}\n\n  micromatch@4.0.8:\n    resolution: {integrity: sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==}\n    engines: {node: '>=8.6'}\n\n  minimatch@9.0.5:\n    resolution: {integrity: sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==}\n    engines: {node: '>=16 || 14 >=14.17'}\n\n  minipass@7.1.2:\n    resolution: {integrity: sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==}\n    engines: {node: '>=16 || 14 >=14.17'}\n\n  mz@2.7.0:\n    resolution: {integrity: sha512-z81GNO7nnYMEhrGh9LeymoE4+Yr0Wn5McHIZMK5cfQCl+NDX08sCZgUc9/6MHni9IWuFLm1Z3HTCXu2z9fN62Q==}\n\n  nanoid@3.3.11:\n    resolution: {integrity: sha512-N8SpfPUnUp1bK+PMYW8qSWdl9U+wwNWI4QKxOYDy9JAro3WMX7p2OeVRF9v+347pnakNevPmiHhNmZ2HbFA76w==}\n    engines: {node: ^10 || ^12 || ^13.7 || ^14 || >=15.0.1}\n    hasBin: true\n\n  next-themes@0.4.6:\n    resolution: {integrity: sha512-pZvgD5L0IEvX5/9GWyHMf3m8BKiVQwsCMHfoFosXtXBMnaS0ZnIJ9ST4b4NqLVKDEm8QBxoNNGNaBv2JNF6XNA==}\n    peerDependencies:\n      react: ^16.8 || ^17 || ^18 || ^19 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17 || ^18 || ^19 || ^19.0.0-rc\n\n  next@15.2.4:\n    resolution: {integrity: sha512-VwL+LAaPSxEkd3lU2xWbgEOtrM8oedmyhBqaVNmgKB+GvZlCy9rgaEc+y2on0wv+l0oSFqLtYD6dcC1eAedUaQ==}\n    engines: {node: ^18.18.0 || ^19.8.0 || >= 20.0.0}\n    hasBin: true\n    peerDependencies:\n      '@opentelemetry/api': ^1.1.0\n      '@playwright/test': ^1.41.2\n      babel-plugin-react-compiler: '*'\n      react: ^18.2.0 || 19.0.0-rc-de68d2f4-20241204 || ^19.0.0\n      react-dom: ^18.2.0 || 19.0.0-rc-de68d2f4-20241204 || ^19.0.0\n      sass: ^1.3.0\n    peerDependenciesMeta:\n      '@opentelemetry/api':\n        optional: true\n      '@playwright/test':\n        optional: true\n      babel-plugin-react-compiler:\n        optional: true\n      sass:\n        optional: true\n\n  node-releases@2.0.19:\n    resolution: {integrity: sha512-xxOWJsBKtzAq7DY0J+DTzuz58K8e7sJbdgwkbMWQe8UYB6ekmsQ45q0M/tJDsGaZmbC+l7n57UV8Hl5tHxO9uw==}\n\n  normalize-path@3.0.0:\n    resolution: {integrity: sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==}\n    engines: {node: '>=0.10.0'}\n\n  normalize-range@0.1.2:\n    resolution: {integrity: sha512-bdok/XvKII3nUpklnV6P2hxtMNrCboOjAcyBuQnWEhO665FwrSNRxU+AqpsyvO6LgGYPspN+lu5CLtw4jPRKNA==}\n    engines: {node: '>=0.10.0'}\n\n  object-assign@4.1.1:\n    resolution: {integrity: sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==}\n    engines: {node: '>=0.10.0'}\n\n  object-hash@3.0.0:\n    resolution: {integrity: sha512-RSn9F68PjH9HqtltsSnqYC1XXoWe9Bju5+213R98cNGttag9q9yAOTzdbsqvIa7aNm5WffBZFpWYr2aWrklWAw==}\n    engines: {node: '>= 6'}\n\n  package-json-from-dist@1.0.1:\n    resolution: {integrity: sha512-UEZIS3/by4OC8vL3P2dTXRETpebLI2NiI5vIrjaD/5UtrkFX/tNbwjTSRAGC/+7CAo2pIcBaRgWmcBBHcsaCIw==}\n\n  path-key@3.1.1:\n    resolution: {integrity: sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==}\n    engines: {node: '>=8'}\n\n  path-parse@1.0.7:\n    resolution: {integrity: sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==}\n\n  path-scurry@1.11.1:\n    resolution: {integrity: sha512-Xa4Nw17FS9ApQFJ9umLiJS4orGjm7ZzwUrwamcGQuHSzDyth9boKDaycYdDcZDuqYATXw4HFXgaqWTctW/v1HA==}\n    engines: {node: '>=16 || 14 >=14.18'}\n\n  picocolors@1.1.1:\n    resolution: {integrity: sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==}\n\n  picomatch@2.3.1:\n    resolution: {integrity: sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==}\n    engines: {node: '>=8.6'}\n\n  pify@2.3.0:\n    resolution: {integrity: sha512-udgsAY+fTnvv7kI7aaxbqwWNb0AHiB0qBO89PZKPkoTmGOgdbrHDKD+0B2X4uTfJ/FT1R09r9gTsjUjNJotuog==}\n    engines: {node: '>=0.10.0'}\n\n  pirates@4.0.7:\n    resolution: {integrity: sha512-TfySrs/5nm8fQJDcBDuUng3VOUKsd7S+zqvbOTiGXHfxX4wK31ard+hoNuvkicM/2YFzlpDgABOevKSsB4G/FA==}\n    engines: {node: '>= 6'}\n\n  postcss-import@15.1.0:\n    resolution: {integrity: sha512-hpr+J05B2FVYUAXHeK1YyI267J/dDDhMU6B6civm8hSY1jYJnBXxzKDKDswzJmtLHryrjhnDjqqp/49t8FALew==}\n    engines: {node: '>=14.0.0'}\n    peerDependencies:\n      postcss: ^8.0.0\n\n  postcss-js@4.0.1:\n    resolution: {integrity: sha512-dDLF8pEO191hJMtlHFPRa8xsizHaM82MLfNkUHdUtVEV3tgTp5oj+8qbEqYM57SLfc74KSbw//4SeJma2LRVIw==}\n    engines: {node: ^12 || ^14 || >= 16}\n    peerDependencies:\n      postcss: ^8.4.21\n\n  postcss-load-config@4.0.2:\n    resolution: {integrity: sha512-bSVhyJGL00wMVoPUzAVAnbEoWyqRxkjv64tUl427SKnPrENtq6hJwUojroMz2VB+Q1edmi4IfrAPpami5VVgMQ==}\n    engines: {node: '>= 14'}\n    peerDependencies:\n      postcss: '>=8.0.9'\n      ts-node: '>=9.0.0'\n    peerDependenciesMeta:\n      postcss:\n        optional: true\n      ts-node:\n        optional: true\n\n  postcss-nested@6.2.0:\n    resolution: {integrity: sha512-HQbt28KulC5AJzG+cZtj9kvKB93CFCdLvog1WFLf1D+xmMvPGlBstkpTEZfK5+AN9hfJocyBFCNiqyS48bpgzQ==}\n    engines: {node: '>=12.0'}\n    peerDependencies:\n      postcss: ^8.2.14\n\n  postcss-selector-parser@6.1.2:\n    resolution: {integrity: sha512-Q8qQfPiZ+THO/3ZrOrO0cJJKfpYCagtMUkXbnEfmgUjwXg6z/WBeOyS9APBBPCTSiDV+s4SwQGu8yFsiMRIudg==}\n    engines: {node: '>=4'}\n\n  postcss-value-parser@4.2.0:\n    resolution: {integrity: sha512-1NNCs6uurfkVbeXG4S8JFT9t19m45ICnif8zWLd5oPSZ50QnwMfK+H3jv408d4jw/7Bttv5axS5IiHoLaVNHeQ==}\n\n  postcss@8.4.31:\n    resolution: {integrity: sha512-PS08Iboia9mts/2ygV3eLpY5ghnUcfLV/EXTOW1E2qYxJKGGBUtNjN76FYHnMs36RmARn41bC0AZmn+rR0OVpQ==}\n    engines: {node: ^10 || ^12 || >=14}\n\n  postcss@8.5.4:\n    resolution: {integrity: sha512-QSa9EBe+uwlGTFmHsPKokv3B/oEMQZxfqW0QqNCyhpa6mB1afzulwn8hihglqAb2pOw+BJgNlmXQ8la2VeHB7w==}\n    engines: {node: ^10 || ^12 || >=14}\n\n  prop-types@15.8.1:\n    resolution: {integrity: sha512-oj87CgZICdulUohogVAR7AjlC0327U4el4L6eAvOqCeudMDVU0NThNaV+b9Df4dXgSP1gXMTnPdhfe/2qDH5cg==}\n\n  queue-microtask@1.2.3:\n    resolution: {integrity: sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==}\n\n  react-day-picker@8.10.1:\n    resolution: {integrity: sha512-TMx7fNbhLk15eqcMt+7Z7S2KF7mfTId/XJDjKE8f+IUcFn0l08/kI4FiYTL/0yuOLmEcbR4Fwe3GJf/NiiMnPA==}\n    peerDependencies:\n      date-fns: ^2.28.0 || ^3.0.0\n      react: ^16.8.0 || ^17.0.0 || ^18.0.0\n\n  react-dom@19.1.0:\n    resolution: {integrity: sha512-Xs1hdnE+DyKgeHJeJznQmYMIBG3TKIHJJT95Q58nHLSrElKlGQqDTR2HQ9fx5CN/Gk6Vh/kupBTDLU11/nDk/g==}\n    peerDependencies:\n      react: ^19.1.0\n\n  react-hook-form@7.56.4:\n    resolution: {integrity: sha512-Rob7Ftz2vyZ/ZGsQZPaRdIefkgOSrQSPXfqBdvOPwJfoGnjwRJUs7EM7Kc1mcoDv3NOtqBzPGbcMB8CGn9CKgw==}\n    engines: {node: '>=18.0.0'}\n    peerDependencies:\n      react: ^16.8.0 || ^17 || ^18 || ^19\n\n  react-is@16.13.1:\n    resolution: {integrity: sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ==}\n\n  react-is@18.3.1:\n    resolution: {integrity: sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==}\n\n  react-remove-scroll-bar@2.3.8:\n    resolution: {integrity: sha512-9r+yi9+mgU33AKcj6IbT9oRCO78WriSj6t/cF8DWBZJ9aOGPOTEDvdUDz1FwKim7QXWwmHqtdHnRJfhAxEG46Q==}\n    engines: {node: '>=10'}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  react-remove-scroll@2.7.0:\n    resolution: {integrity: sha512-sGsQtcjMqdQyijAHytfGEELB8FufGbfXIsvUTe+NLx1GDRJCXtCFLBLUI1eyZCKXXvbEU2C6gai0PZKoIE9Vbg==}\n    engines: {node: '>=10'}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  react-resizable-panels@2.1.9:\n    resolution: {integrity: sha512-z77+X08YDIrgAes4jl8xhnUu1LNIRp4+E7cv4xHmLOxxUPO/ML7PSrE813b90vj7xvQ1lcf7g2uA9GeMZonjhQ==}\n    peerDependencies:\n      react: ^16.14.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc\n      react-dom: ^16.14.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc\n\n  react-smooth@4.0.4:\n    resolution: {integrity: sha512-gnGKTpYwqL0Iii09gHobNolvX4Kiq4PKx6eWBCYYix+8cdw+cGo3do906l1NBPKkSWx1DghC1dlWG9L2uGd61Q==}\n    peerDependencies:\n      react: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0\n      react-dom: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0\n\n  react-style-singleton@2.2.3:\n    resolution: {integrity: sha512-b6jSvxvVnyptAiLjbkWLE/lOnR4lfTtDAl+eUC7RZy+QQWc6wRzIV2CE6xBuMmDxc2qIihtDCZD5NPOFl7fRBQ==}\n    engines: {node: '>=10'}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  react-transition-group@4.4.5:\n    resolution: {integrity: sha512-pZcd1MCJoiKiBR2NRxeCRg13uCXbydPnmB4EOeRrY7480qNWO8IIgQG6zlDkm6uRMsURXPuKq0GWtiM59a5Q6g==}\n    peerDependencies:\n      react: '>=16.6.0'\n      react-dom: '>=16.6.0'\n\n  react@19.1.0:\n    resolution: {integrity: sha512-FS+XFBNvn3GTAWq26joslQgWNoFu08F4kl0J4CgdNKADkdSGXQyTCnKteIAJy96Br6YbpEU1LSzV5dYtjMkMDg==}\n    engines: {node: '>=0.10.0'}\n\n  read-cache@1.0.0:\n    resolution: {integrity: sha512-Owdv/Ft7IjOgm/i0xvNDZ1LrRANRfew4b2prF3OWMQLxLfu3bS8FVhCsrSCMK4lR56Y9ya+AThoTpDCTxCmpRA==}\n\n  readdirp@3.6.0:\n    resolution: {integrity: sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==}\n    engines: {node: '>=8.10.0'}\n\n  recharts-scale@0.4.5:\n    resolution: {integrity: sha512-kivNFO+0OcUNu7jQquLXAxz1FIwZj8nrj+YkOKc5694NbjCvcT6aSZiIzNzd2Kul4o4rTto8QVR9lMNtxD4G1w==}\n\n  recharts@2.15.0:\n    resolution: {integrity: sha512-cIvMxDfpAmqAmVgc4yb7pgm/O1tmmkl/CjrvXuW+62/+7jj/iF9Ykm+hb/UJt42TREHMyd3gb+pkgoa2MxgDIw==}\n    engines: {node: '>=14'}\n    peerDependencies:\n      react: ^16.0.0 || ^17.0.0 || ^18.0.0 || ^19.0.0\n      react-dom: ^16.0.0 || ^17.0.0 || ^18.0.0 || ^19.0.0\n\n  resolve@1.22.10:\n    resolution: {integrity: sha512-NPRy+/ncIMeDlTAsuqwKIiferiawhefFJtkNSW0qZJEqMEb+qBt/77B/jGeeek+F0uOeN05CDa6HXbbIgtVX4w==}\n    engines: {node: '>= 0.4'}\n    hasBin: true\n\n  reusify@1.1.0:\n    resolution: {integrity: sha512-g6QUff04oZpHs0eG5p83rFLhHeV00ug/Yf9nZM6fLeUrPguBTkTQOdpAWWspMh55TZfVQDPaN3NQJfbVRAxdIw==}\n    engines: {iojs: '>=1.0.0', node: '>=0.10.0'}\n\n  run-parallel@1.2.0:\n    resolution: {integrity: sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==}\n\n  scheduler@0.26.0:\n    resolution: {integrity: sha512-NlHwttCI/l5gCPR3D1nNXtWABUmBwvZpEQiD4IXSbIDq8BzLIK/7Ir5gTFSGZDUu37K5cMNp0hFtzO38sC7gWA==}\n\n  semver@7.7.2:\n    resolution: {integrity: sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==}\n    engines: {node: '>=10'}\n    hasBin: true\n\n  sharp@0.33.5:\n    resolution: {integrity: sha512-haPVm1EkS9pgvHrQ/F3Xy+hgcuMV0Wm9vfIBSiwZ05k+xgb0PkBQpGsAA/oWdDobNaZTH5ppvHtzCFbnSEwHVw==}\n    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}\n\n  shebang-command@2.0.0:\n    resolution: {integrity: sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==}\n    engines: {node: '>=8'}\n\n  shebang-regex@3.0.0:\n    resolution: {integrity: sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==}\n    engines: {node: '>=8'}\n\n  signal-exit@4.1.0:\n    resolution: {integrity: sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==}\n    engines: {node: '>=14'}\n\n  simple-swizzle@0.2.2:\n    resolution: {integrity: sha512-JA//kQgZtbuY83m+xT+tXJkmJncGMTFT+C+g2h2R9uxkYIrE2yy9sgmcLhCnw57/WSD+Eh3J97FPEDFnbXnDUg==}\n\n  sonner@1.7.4:\n    resolution: {integrity: sha512-DIS8z4PfJRbIyfVFDVnK9rO3eYDtse4Omcm6bt0oEr5/jtLgysmjuBl1frJ9E/EQZrFmKx2A8m/s5s9CRXIzhw==}\n    peerDependencies:\n      react: ^18.0.0 || ^19.0.0 || ^19.0.0-rc\n      react-dom: ^18.0.0 || ^19.0.0 || ^19.0.0-rc\n\n  source-map-js@1.2.1:\n    resolution: {integrity: sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==}\n    engines: {node: '>=0.10.0'}\n\n  streamsearch@1.1.0:\n    resolution: {integrity: sha512-Mcc5wHehp9aXz1ax6bZUyY5afg9u2rv5cqQI3mRrYkGC8rW2hM02jWuwjtL++LS5qinSyhj2QfLyNsuc+VsExg==}\n    engines: {node: '>=10.0.0'}\n\n  string-width@4.2.3:\n    resolution: {integrity: sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==}\n    engines: {node: '>=8'}\n\n  string-width@5.1.2:\n    resolution: {integrity: sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==}\n    engines: {node: '>=12'}\n\n  strip-ansi@6.0.1:\n    resolution: {integrity: sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==}\n    engines: {node: '>=8'}\n\n  strip-ansi@7.1.0:\n    resolution: {integrity: sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==}\n    engines: {node: '>=12'}\n\n  styled-jsx@5.1.6:\n    resolution: {integrity: sha512-qSVyDTeMotdvQYoHWLNGwRFJHC+i+ZvdBRYosOFgC+Wg1vx4frN2/RG/NA7SYqqvKNLf39P2LSRA2pu6n0XYZA==}\n    engines: {node: '>= 12.0.0'}\n    peerDependencies:\n      '@babel/core': '*'\n      babel-plugin-macros: '*'\n      react: '>= 16.8.0 || 17.x.x || ^18.0.0-0 || ^19.0.0-0'\n    peerDependenciesMeta:\n      '@babel/core':\n        optional: true\n      babel-plugin-macros:\n        optional: true\n\n  sucrase@3.35.0:\n    resolution: {integrity: sha512-8EbVDiu9iN/nESwxeSxDKe0dunta1GOlHufmSSXxMD2z2/tMZpDMpvXQGsc+ajGo8y2uYUmixaSRUc/QPoQ0GA==}\n    engines: {node: '>=16 || 14 >=14.17'}\n    hasBin: true\n\n  supports-preserve-symlinks-flag@1.0.0:\n    resolution: {integrity: sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==}\n    engines: {node: '>= 0.4'}\n\n  tailwind-merge@2.6.0:\n    resolution: {integrity: sha512-P+Vu1qXfzediirmHOC3xKGAYeZtPcV9g76X+xg2FD4tYgR71ewMA35Y3sCz3zhiN/dwefRpJX0yBcgwi1fXNQA==}\n\n  tailwindcss-animate@1.0.7:\n    resolution: {integrity: sha512-bl6mpH3T7I3UFxuvDEXLxy/VuFxBk5bbzplh7tXI68mwMokNYd1t9qPBHlnyTwfa4JGC4zP516I1hYYtQ/vspA==}\n    peerDependencies:\n      tailwindcss: '>=3.0.0 || insiders'\n\n  tailwindcss@3.4.17:\n    resolution: {integrity: sha512-w33E2aCvSDP0tW9RZuNXadXlkHXqFzSkQew/aIa2i/Sj8fThxwovwlXHSPXTbAHwEIhBFXAedUhP2tueAKP8Og==}\n    engines: {node: '>=14.0.0'}\n    hasBin: true\n\n  thenify-all@1.6.0:\n    resolution: {integrity: sha512-RNxQH/qI8/t3thXJDwcstUO4zeqo64+Uy/+sNVRBx4Xn2OX+OZ9oP+iJnNFqplFra2ZUVeKCSa2oVWi3T4uVmA==}\n    engines: {node: '>=0.8'}\n\n  thenify@3.3.1:\n    resolution: {integrity: sha512-RVZSIV5IG10Hk3enotrhvz0T9em6cyHBLkH/YAZuKqd8hRkKhSfCGIcP2KUY0EPxndzANBmNllzWPwak+bheSw==}\n\n  tiny-invariant@1.3.3:\n    resolution: {integrity: sha512-+FbBPE1o9QAYvviau/qC5SE3caw21q3xkvWKBtja5vgqOWIHHJ3ioaq1VPfn/Szqctz2bU/oYeKd9/z5BL+PVg==}\n\n  to-regex-range@5.0.1:\n    resolution: {integrity: sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==}\n    engines: {node: '>=8.0'}\n\n  ts-interface-checker@0.1.13:\n    resolution: {integrity: sha512-Y/arvbn+rrz3JCKl9C4kVNfTfSm2/mEp5FSz5EsZSANGPSlQrpRI5M4PKF+mJnE52jOO90PnPSc3Ur3bTQw0gA==}\n\n  tslib@2.8.1:\n    resolution: {integrity: sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==}\n\n  typescript@5.8.3:\n    resolution: {integrity: sha512-p1diW6TqL9L07nNxvRMM7hMMw4c5XOo/1ibL4aAIGmSAt9slTE1Xgw5KWuof2uTOvCg9BY7ZRi+GaF+7sfgPeQ==}\n    engines: {node: '>=14.17'}\n    hasBin: true\n\n  undici-types@6.21.0:\n    resolution: {integrity: sha512-iwDZqg0QAGrg9Rav5H4n0M64c3mkR59cJ6wQp+7C4nI0gsmExaedaYLNO44eT4AtBBwjbTiGPMlt2Md0T9H9JQ==}\n\n  update-browserslist-db@1.1.3:\n    resolution: {integrity: sha512-UxhIZQ+QInVdunkDAaiazvvT/+fXL5Osr0JZlJulepYu6Jd7qJtDZjlur0emRlT71EN3ScPoE7gvsuIKKNavKw==}\n    hasBin: true\n    peerDependencies:\n      browserslist: '>= 4.21.0'\n\n  use-callback-ref@1.3.3:\n    resolution: {integrity: sha512-jQL3lRnocaFtu3V00JToYz/4QkNWswxijDaCVNZRiRTO3HQDLsdu1ZtmIUvV4yPp+rvWm5j0y0TG/S61cuijTg==}\n    engines: {node: '>=10'}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  use-sidecar@1.1.3:\n    resolution: {integrity: sha512-Fedw0aZvkhynoPYlA5WXrMCAMm+nSWdZt6lzJQ7Ok8S6Q+VsHmHpRWndVRJ8Be0ZbkfPc5LRYH+5XrzXcEeLRQ==}\n    engines: {node: '>=10'}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  use-sync-external-store@1.5.0:\n    resolution: {integrity: sha512-Rb46I4cGGVBmjamjphe8L/UnvJD+uPPtTkNvX5mZgqdbavhI4EbgIWJiIHXJ8bc/i9EQGPRh4DwEURJ552Do0A==}\n    peerDependencies:\n      react: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0\n\n  util-deprecate@1.0.2:\n    resolution: {integrity: sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==}\n\n  vaul@0.9.9:\n    resolution: {integrity: sha512-7afKg48srluhZwIkaU+lgGtFCUsYBSGOl8vcc8N/M3YQlZFlynHD15AE+pwrYdc826o7nrIND4lL9Y6b9WWZZQ==}\n    peerDependencies:\n      react: ^16.8 || ^17.0 || ^18.0\n      react-dom: ^16.8 || ^17.0 || ^18.0\n\n  victory-vendor@36.9.2:\n    resolution: {integrity: sha512-PnpQQMuxlwYdocC8fIJqVXvkeViHYzotI+NJrCuav0ZYFoq912ZHBk3mCeuj+5/VpodOjPe1z0Fk2ihgzlXqjQ==}\n\n  which@2.0.2:\n    resolution: {integrity: sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==}\n    engines: {node: '>= 8'}\n    hasBin: true\n\n  wrap-ansi@7.0.0:\n    resolution: {integrity: sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==}\n    engines: {node: '>=10'}\n\n  wrap-ansi@8.1.0:\n    resolution: {integrity: sha512-si7QWI6zUMq56bESFvagtmzMdGOtoxfR+Sez11Mobfc7tm+VkUckk9bW2UeffTGVUbOksxmSw0AA2gs8g71NCQ==}\n    engines: {node: '>=12'}\n\n  yaml@2.8.0:\n    resolution: {integrity: sha512-4lLa/EcQCB0cJkyts+FpIRx5G/llPxfP6VQU5KByHEhLxY3IJCH0f0Hy1MHI8sClTvsIb8qwRJ6R/ZdlDJ/leQ==}\n    engines: {node: '>= 14.6'}\n    hasBin: true\n\n  zod@3.25.42:\n    resolution: {integrity: sha512-PcALTLskaucbeHc41tU/xfjfhcz8z0GdhhDcSgrCTmSazUuqnYqiXO63M0QUBVwpBlsLsNVn5qHSC5Dw3KZvaQ==}\n\nsnapshots:\n\n  '@alloc/quick-lru@5.2.0': {}\n\n  '@babel/runtime@7.27.4': {}\n\n  '@emnapi/runtime@1.4.3':\n    dependencies:\n      tslib: 2.8.1\n    optional: true\n\n  '@floating-ui/core@1.7.0':\n    dependencies:\n      '@floating-ui/utils': 0.2.9\n\n  '@floating-ui/dom@1.7.0':\n    dependencies:\n      '@floating-ui/core': 1.7.0\n      '@floating-ui/utils': 0.2.9\n\n  '@floating-ui/react-dom@2.1.2(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@floating-ui/dom': 1.7.0\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n\n  '@floating-ui/utils@0.2.9': {}\n\n  '@hookform/resolvers@3.10.0(react-hook-form@7.56.4(react@19.1.0))':\n    dependencies:\n      react-hook-form: 7.56.4(react@19.1.0)\n\n  '@img/sharp-darwin-arm64@0.33.5':\n    optionalDependencies:\n      '@img/sharp-libvips-darwin-arm64': 1.0.4\n    optional: true\n\n  '@img/sharp-darwin-x64@0.33.5':\n    optionalDependencies:\n      '@img/sharp-libvips-darwin-x64': 1.0.4\n    optional: true\n\n  '@img/sharp-libvips-darwin-arm64@1.0.4':\n    optional: true\n\n  '@img/sharp-libvips-darwin-x64@1.0.4':\n    optional: true\n\n  '@img/sharp-libvips-linux-arm64@1.0.4':\n    optional: true\n\n  '@img/sharp-libvips-linux-arm@1.0.5':\n    optional: true\n\n  '@img/sharp-libvips-linux-s390x@1.0.4':\n    optional: true\n\n  '@img/sharp-libvips-linux-x64@1.0.4':\n    optional: true\n\n  '@img/sharp-libvips-linuxmusl-arm64@1.0.4':\n    optional: true\n\n  '@img/sharp-libvips-linuxmusl-x64@1.0.4':\n    optional: true\n\n  '@img/sharp-linux-arm64@0.33.5':\n    optionalDependencies:\n      '@img/sharp-libvips-linux-arm64': 1.0.4\n    optional: true\n\n  '@img/sharp-linux-arm@0.33.5':\n    optionalDependencies:\n      '@img/sharp-libvips-linux-arm': 1.0.5\n    optional: true\n\n  '@img/sharp-linux-s390x@0.33.5':\n    optionalDependencies:\n      '@img/sharp-libvips-linux-s390x': 1.0.4\n    optional: true\n\n  '@img/sharp-linux-x64@0.33.5':\n    optionalDependencies:\n      '@img/sharp-libvips-linux-x64': 1.0.4\n    optional: true\n\n  '@img/sharp-linuxmusl-arm64@0.33.5':\n    optionalDependencies:\n      '@img/sharp-libvips-linuxmusl-arm64': 1.0.4\n    optional: true\n\n  '@img/sharp-linuxmusl-x64@0.33.5':\n    optionalDependencies:\n      '@img/sharp-libvips-linuxmusl-x64': 1.0.4\n    optional: true\n\n  '@img/sharp-wasm32@0.33.5':\n    dependencies:\n      '@emnapi/runtime': 1.4.3\n    optional: true\n\n  '@img/sharp-win32-ia32@0.33.5':\n    optional: true\n\n  '@img/sharp-win32-x64@0.33.5':\n    optional: true\n\n  '@isaacs/cliui@8.0.2':\n    dependencies:\n      string-width: 5.1.2\n      string-width-cjs: string-width@4.2.3\n      strip-ansi: 7.1.0\n      strip-ansi-cjs: strip-ansi@6.0.1\n      wrap-ansi: 8.1.0\n      wrap-ansi-cjs: wrap-ansi@7.0.0\n\n  '@jridgewell/gen-mapping@0.3.8':\n    dependencies:\n      '@jridgewell/set-array': 1.2.1\n      '@jridgewell/sourcemap-codec': 1.5.0\n      '@jridgewell/trace-mapping': 0.3.25\n\n  '@jridgewell/resolve-uri@3.1.2': {}\n\n  '@jridgewell/set-array@1.2.1': {}\n\n  '@jridgewell/sourcemap-codec@1.5.0': {}\n\n  '@jridgewell/trace-mapping@0.3.25':\n    dependencies:\n      '@jridgewell/resolve-uri': 3.1.2\n      '@jridgewell/sourcemap-codec': 1.5.0\n\n  '@next/env@15.2.4': {}\n\n  '@next/swc-darwin-arm64@15.2.4':\n    optional: true\n\n  '@next/swc-darwin-x64@15.2.4':\n    optional: true\n\n  '@next/swc-linux-arm64-gnu@15.2.4':\n    optional: true\n\n  '@next/swc-linux-arm64-musl@15.2.4':\n    optional: true\n\n  '@next/swc-linux-x64-gnu@15.2.4':\n    optional: true\n\n  '@next/swc-linux-x64-musl@15.2.4':\n    optional: true\n\n  '@next/swc-win32-arm64-msvc@15.2.4':\n    optional: true\n\n  '@next/swc-win32-x64-msvc@15.2.4':\n    optional: true\n\n  '@nodelib/fs.scandir@2.1.5':\n    dependencies:\n      '@nodelib/fs.stat': 2.0.5\n      run-parallel: 1.2.0\n\n  '@nodelib/fs.stat@2.0.5': {}\n\n  '@nodelib/fs.walk@1.2.8':\n    dependencies:\n      '@nodelib/fs.scandir': 2.1.5\n      fastq: 1.19.1\n\n  '@pkgjs/parseargs@0.11.0':\n    optional: true\n\n  '@radix-ui/number@1.1.0': {}\n\n  '@radix-ui/primitive@1.1.1': {}\n\n  '@radix-ui/react-accordion@1.2.2(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-collapsible': 1.1.2(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-collection': 1.1.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-direction': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-id': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.6\n      '@types/react-dom': 19.1.5(@types/react@19.1.6)\n\n  '@radix-ui/react-alert-dialog@1.1.4(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-dialog': 1.1.4(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-slot': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.6\n      '@types/react-dom': 19.1.5(@types/react@19.1.6)\n\n  '@radix-ui/react-arrow@1.1.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.6\n      '@types/react-dom': 19.1.5(@types/react@19.1.6)\n\n  '@radix-ui/react-aspect-ratio@1.1.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.6\n      '@types/react-dom': 19.1.5(@types/react@19.1.6)\n\n  '@radix-ui/react-avatar@1.1.2(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/react-context': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-use-callback-ref': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-use-layout-effect': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.6\n      '@types/react-dom': 19.1.5(@types/react@19.1.6)\n\n  '@radix-ui/react-checkbox@1.1.3(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-presence': 1.1.2(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-use-previous': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-use-size': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.6\n      '@types/react-dom': 19.1.5(@types/react@19.1.6)\n\n  '@radix-ui/react-collapsible@1.1.2(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-id': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-presence': 1.1.2(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-use-layout-effect': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.6\n      '@types/react-dom': 19.1.5(@types/react@19.1.6)\n\n  '@radix-ui/react-collection@1.1.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-slot': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.6\n      '@types/react-dom': 19.1.5(@types/react@19.1.6)\n\n  '@radix-ui/react-compose-refs@1.1.1(@types/react@19.1.6)(react@19.1.0)':\n    dependencies:\n      react: 19.1.0\n    optionalDependencies:\n      '@types/react': 19.1.6\n\n  '@radix-ui/react-compose-refs@1.1.2(@types/react@19.1.6)(react@19.1.0)':\n    dependencies:\n      react: 19.1.0\n    optionalDependencies:\n      '@types/react': 19.1.6\n\n  '@radix-ui/react-context-menu@2.2.4(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-context': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-menu': 2.1.4(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-use-callback-ref': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.6\n      '@types/react-dom': 19.1.5(@types/react@19.1.6)\n\n  '@radix-ui/react-context@1.1.1(@types/react@19.1.6)(react@19.1.0)':\n    dependencies:\n      react: 19.1.0\n    optionalDependencies:\n      '@types/react': 19.1.6\n\n  '@radix-ui/react-dialog@1.1.4(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-dismissable-layer': 1.1.3(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-focus-guards': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-focus-scope': 1.1.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-id': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-portal': 1.1.3(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-presence': 1.1.2(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-slot': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      aria-hidden: 1.2.6\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n      react-remove-scroll: 2.7.0(@types/react@19.1.6)(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.6\n      '@types/react-dom': 19.1.5(@types/react@19.1.6)\n\n  '@radix-ui/react-direction@1.1.0(@types/react@19.1.6)(react@19.1.0)':\n    dependencies:\n      react: 19.1.0\n    optionalDependencies:\n      '@types/react': 19.1.6\n\n  '@radix-ui/react-dismissable-layer@1.1.3(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-use-callback-ref': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-use-escape-keydown': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.6\n      '@types/react-dom': 19.1.5(@types/react@19.1.6)\n\n  '@radix-ui/react-dropdown-menu@2.1.4(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-id': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-menu': 2.1.4(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.6\n      '@types/react-dom': 19.1.5(@types/react@19.1.6)\n\n  '@radix-ui/react-focus-guards@1.1.1(@types/react@19.1.6)(react@19.1.0)':\n    dependencies:\n      react: 19.1.0\n    optionalDependencies:\n      '@types/react': 19.1.6\n\n  '@radix-ui/react-focus-scope@1.1.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-use-callback-ref': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.6\n      '@types/react-dom': 19.1.5(@types/react@19.1.6)\n\n  '@radix-ui/react-hover-card@1.1.4(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-dismissable-layer': 1.1.3(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-popper': 1.2.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-portal': 1.1.3(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-presence': 1.1.2(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.6\n      '@types/react-dom': 19.1.5(@types/react@19.1.6)\n\n  '@radix-ui/react-id@1.1.0(@types/react@19.1.6)(react@19.1.0)':\n    dependencies:\n      '@radix-ui/react-use-layout-effect': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      react: 19.1.0\n    optionalDependencies:\n      '@types/react': 19.1.6\n\n  '@radix-ui/react-id@1.1.1(@types/react@19.1.6)(react@19.1.0)':\n    dependencies:\n      '@radix-ui/react-use-layout-effect': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      react: 19.1.0\n    optionalDependencies:\n      '@types/react': 19.1.6\n\n  '@radix-ui/react-label@2.1.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.6\n      '@types/react-dom': 19.1.5(@types/react@19.1.6)\n\n  '@radix-ui/react-menu@2.1.4(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-collection': 1.1.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-direction': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-dismissable-layer': 1.1.3(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-focus-guards': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-focus-scope': 1.1.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-id': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-popper': 1.2.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-portal': 1.1.3(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-presence': 1.1.2(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-roving-focus': 1.1.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-slot': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-use-callback-ref': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      aria-hidden: 1.2.6\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n      react-remove-scroll: 2.7.0(@types/react@19.1.6)(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.6\n      '@types/react-dom': 19.1.5(@types/react@19.1.6)\n\n  '@radix-ui/react-menubar@1.1.4(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-collection': 1.1.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-direction': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-id': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-menu': 2.1.4(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-roving-focus': 1.1.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.6\n      '@types/react-dom': 19.1.5(@types/react@19.1.6)\n\n  '@radix-ui/react-navigation-menu@1.2.3(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-collection': 1.1.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-direction': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-dismissable-layer': 1.1.3(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-id': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-presence': 1.1.2(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-use-callback-ref': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-use-layout-effect': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-use-previous': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-visually-hidden': 1.1.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.6\n      '@types/react-dom': 19.1.5(@types/react@19.1.6)\n\n  '@radix-ui/react-popover@1.1.4(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-dismissable-layer': 1.1.3(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-focus-guards': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-focus-scope': 1.1.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-id': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-popper': 1.2.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-portal': 1.1.3(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-presence': 1.1.2(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-slot': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      aria-hidden: 1.2.6\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n      react-remove-scroll: 2.7.0(@types/react@19.1.6)(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.6\n      '@types/react-dom': 19.1.5(@types/react@19.1.6)\n\n  '@radix-ui/react-popper@1.2.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@floating-ui/react-dom': 2.1.2(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-arrow': 1.1.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-use-callback-ref': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-use-layout-effect': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-use-rect': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-use-size': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/rect': 1.1.0\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.6\n      '@types/react-dom': 19.1.5(@types/react@19.1.6)\n\n  '@radix-ui/react-portal@1.1.3(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-use-layout-effect': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.6\n      '@types/react-dom': 19.1.5(@types/react@19.1.6)\n\n  '@radix-ui/react-presence@1.1.2(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-use-layout-effect': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.6\n      '@types/react-dom': 19.1.5(@types/react@19.1.6)\n\n  '@radix-ui/react-primitive@2.0.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/react-slot': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.6\n      '@types/react-dom': 19.1.5(@types/react@19.1.6)\n\n  '@radix-ui/react-primitive@2.1.3(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/react-slot': 1.2.3(@types/react@19.1.6)(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.6\n      '@types/react-dom': 19.1.5(@types/react@19.1.6)\n\n  '@radix-ui/react-progress@1.1.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/react-context': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.6\n      '@types/react-dom': 19.1.5(@types/react@19.1.6)\n\n  '@radix-ui/react-radio-group@1.2.2(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-direction': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-presence': 1.1.2(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-roving-focus': 1.1.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-use-previous': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-use-size': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.6\n      '@types/react-dom': 19.1.5(@types/react@19.1.6)\n\n  '@radix-ui/react-roving-focus@1.1.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-collection': 1.1.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-direction': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-id': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-use-callback-ref': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.6\n      '@types/react-dom': 19.1.5(@types/react@19.1.6)\n\n  '@radix-ui/react-scroll-area@1.2.2(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/number': 1.1.0\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-direction': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-presence': 1.1.2(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-use-callback-ref': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-use-layout-effect': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.6\n      '@types/react-dom': 19.1.5(@types/react@19.1.6)\n\n  '@radix-ui/react-select@2.1.4(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/number': 1.1.0\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-collection': 1.1.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-direction': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-dismissable-layer': 1.1.3(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-focus-guards': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-focus-scope': 1.1.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-id': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-popper': 1.2.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-portal': 1.1.3(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-slot': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-use-callback-ref': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-use-layout-effect': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-use-previous': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-visually-hidden': 1.1.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      aria-hidden: 1.2.6\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n      react-remove-scroll: 2.7.0(@types/react@19.1.6)(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.6\n      '@types/react-dom': 19.1.5(@types/react@19.1.6)\n\n  '@radix-ui/react-separator@1.1.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.6\n      '@types/react-dom': 19.1.5(@types/react@19.1.6)\n\n  '@radix-ui/react-slider@1.2.2(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/number': 1.1.0\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-collection': 1.1.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-direction': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-use-layout-effect': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-use-previous': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-use-size': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.6\n      '@types/react-dom': 19.1.5(@types/react@19.1.6)\n\n  '@radix-ui/react-slot@1.1.1(@types/react@19.1.6)(react@19.1.0)':\n    dependencies:\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      react: 19.1.0\n    optionalDependencies:\n      '@types/react': 19.1.6\n\n  '@radix-ui/react-slot@1.2.3(@types/react@19.1.6)(react@19.1.0)':\n    dependencies:\n      '@radix-ui/react-compose-refs': 1.1.2(@types/react@19.1.6)(react@19.1.0)\n      react: 19.1.0\n    optionalDependencies:\n      '@types/react': 19.1.6\n\n  '@radix-ui/react-switch@1.1.2(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-use-previous': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-use-size': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.6\n      '@types/react-dom': 19.1.5(@types/react@19.1.6)\n\n  '@radix-ui/react-tabs@1.1.2(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-context': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-direction': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-id': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-presence': 1.1.2(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-roving-focus': 1.1.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.6\n      '@types/react-dom': 19.1.5(@types/react@19.1.6)\n\n  '@radix-ui/react-toast@1.2.4(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-collection': 1.1.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-dismissable-layer': 1.1.3(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-portal': 1.1.3(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-presence': 1.1.2(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-use-callback-ref': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-use-layout-effect': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-visually-hidden': 1.1.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.6\n      '@types/react-dom': 19.1.5(@types/react@19.1.6)\n\n  '@radix-ui/react-toggle-group@1.1.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-context': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-direction': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-roving-focus': 1.1.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-toggle': 1.1.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.6\n      '@types/react-dom': 19.1.5(@types/react@19.1.6)\n\n  '@radix-ui/react-toggle@1.1.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.6\n      '@types/react-dom': 19.1.5(@types/react@19.1.6)\n\n  '@radix-ui/react-tooltip@1.1.6(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-dismissable-layer': 1.1.3(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-id': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-popper': 1.2.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-portal': 1.1.3(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-presence': 1.1.2(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-slot': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-visually-hidden': 1.1.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.6\n      '@types/react-dom': 19.1.5(@types/react@19.1.6)\n\n  '@radix-ui/react-use-callback-ref@1.1.0(@types/react@19.1.6)(react@19.1.0)':\n    dependencies:\n      react: 19.1.0\n    optionalDependencies:\n      '@types/react': 19.1.6\n\n  '@radix-ui/react-use-controllable-state@1.1.0(@types/react@19.1.6)(react@19.1.0)':\n    dependencies:\n      '@radix-ui/react-use-callback-ref': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      react: 19.1.0\n    optionalDependencies:\n      '@types/react': 19.1.6\n\n  '@radix-ui/react-use-escape-keydown@1.1.0(@types/react@19.1.6)(react@19.1.0)':\n    dependencies:\n      '@radix-ui/react-use-callback-ref': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      react: 19.1.0\n    optionalDependencies:\n      '@types/react': 19.1.6\n\n  '@radix-ui/react-use-layout-effect@1.1.0(@types/react@19.1.6)(react@19.1.0)':\n    dependencies:\n      react: 19.1.0\n    optionalDependencies:\n      '@types/react': 19.1.6\n\n  '@radix-ui/react-use-layout-effect@1.1.1(@types/react@19.1.6)(react@19.1.0)':\n    dependencies:\n      react: 19.1.0\n    optionalDependencies:\n      '@types/react': 19.1.6\n\n  '@radix-ui/react-use-previous@1.1.0(@types/react@19.1.6)(react@19.1.0)':\n    dependencies:\n      react: 19.1.0\n    optionalDependencies:\n      '@types/react': 19.1.6\n\n  '@radix-ui/react-use-rect@1.1.0(@types/react@19.1.6)(react@19.1.0)':\n    dependencies:\n      '@radix-ui/rect': 1.1.0\n      react: 19.1.0\n    optionalDependencies:\n      '@types/react': 19.1.6\n\n  '@radix-ui/react-use-size@1.1.0(@types/react@19.1.6)(react@19.1.0)':\n    dependencies:\n      '@radix-ui/react-use-layout-effect': 1.1.0(@types/react@19.1.6)(react@19.1.0)\n      react: 19.1.0\n    optionalDependencies:\n      '@types/react': 19.1.6\n\n  '@radix-ui/react-visually-hidden@1.1.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)':\n    dependencies:\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.6\n      '@types/react-dom': 19.1.5(@types/react@19.1.6)\n\n  '@radix-ui/rect@1.1.0': {}\n\n  '@swc/counter@0.1.3': {}\n\n  '@swc/helpers@0.5.15':\n    dependencies:\n      tslib: 2.8.1\n\n  '@types/d3-array@3.2.1': {}\n\n  '@types/d3-color@3.1.3': {}\n\n  '@types/d3-ease@3.0.2': {}\n\n  '@types/d3-interpolate@3.0.4':\n    dependencies:\n      '@types/d3-color': 3.1.3\n\n  '@types/d3-path@3.1.1': {}\n\n  '@types/d3-scale@4.0.9':\n    dependencies:\n      '@types/d3-time': 3.0.4\n\n  '@types/d3-shape@3.1.7':\n    dependencies:\n      '@types/d3-path': 3.1.1\n\n  '@types/d3-time@3.0.4': {}\n\n  '@types/d3-timer@3.0.2': {}\n\n  '@types/node@22.15.29':\n    dependencies:\n      undici-types: 6.21.0\n\n  '@types/react-dom@19.1.5(@types/react@19.1.6)':\n    dependencies:\n      '@types/react': 19.1.6\n\n  '@types/react@19.1.6':\n    dependencies:\n      csstype: 3.1.3\n\n  ansi-regex@5.0.1: {}\n\n  ansi-regex@6.1.0: {}\n\n  ansi-styles@4.3.0:\n    dependencies:\n      color-convert: 2.0.1\n\n  ansi-styles@6.2.1: {}\n\n  any-promise@1.3.0: {}\n\n  anymatch@3.1.3:\n    dependencies:\n      normalize-path: 3.0.0\n      picomatch: 2.3.1\n\n  arg@5.0.2: {}\n\n  aria-hidden@1.2.6:\n    dependencies:\n      tslib: 2.8.1\n\n  autoprefixer@10.4.21(postcss@8.5.4):\n    dependencies:\n      browserslist: 4.25.0\n      caniuse-lite: 1.0.30001720\n      fraction.js: 4.3.7\n      normalize-range: 0.1.2\n      picocolors: 1.1.1\n      postcss: 8.5.4\n      postcss-value-parser: 4.2.0\n\n  balanced-match@1.0.2: {}\n\n  binary-extensions@2.3.0: {}\n\n  brace-expansion@2.0.1:\n    dependencies:\n      balanced-match: 1.0.2\n\n  braces@3.0.3:\n    dependencies:\n      fill-range: 7.1.1\n\n  browserslist@4.25.0:\n    dependencies:\n      caniuse-lite: 1.0.30001720\n      electron-to-chromium: 1.5.161\n      node-releases: 2.0.19\n      update-browserslist-db: 1.1.3(browserslist@4.25.0)\n\n  busboy@1.6.0:\n    dependencies:\n      streamsearch: 1.1.0\n\n  camelcase-css@2.0.1: {}\n\n  caniuse-lite@1.0.30001720: {}\n\n  chokidar@3.6.0:\n    dependencies:\n      anymatch: 3.1.3\n      braces: 3.0.3\n      glob-parent: 5.1.2\n      is-binary-path: 2.1.0\n      is-glob: 4.0.3\n      normalize-path: 3.0.0\n      readdirp: 3.6.0\n    optionalDependencies:\n      fsevents: 2.3.3\n\n  class-variance-authority@0.7.1:\n    dependencies:\n      clsx: 2.1.1\n\n  client-only@0.0.1: {}\n\n  clsx@2.1.1: {}\n\n  cmdk@1.0.4(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0):\n    dependencies:\n      '@radix-ui/react-dialog': 1.1.4(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      '@radix-ui/react-id': 1.1.1(@types/react@19.1.6)(react@19.1.0)\n      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n      use-sync-external-store: 1.5.0(react@19.1.0)\n    transitivePeerDependencies:\n      - '@types/react'\n      - '@types/react-dom'\n\n  color-convert@2.0.1:\n    dependencies:\n      color-name: 1.1.4\n\n  color-name@1.1.4: {}\n\n  color-string@1.9.1:\n    dependencies:\n      color-name: 1.1.4\n      simple-swizzle: 0.2.2\n    optional: true\n\n  color@4.2.3:\n    dependencies:\n      color-convert: 2.0.1\n      color-string: 1.9.1\n    optional: true\n\n  commander@4.1.1: {}\n\n  cross-spawn@7.0.6:\n    dependencies:\n      path-key: 3.1.1\n      shebang-command: 2.0.0\n      which: 2.0.2\n\n  cssesc@3.0.0: {}\n\n  csstype@3.1.3: {}\n\n  d3-array@3.2.4:\n    dependencies:\n      internmap: 2.0.3\n\n  d3-color@3.1.0: {}\n\n  d3-ease@3.0.1: {}\n\n  d3-format@3.1.0: {}\n\n  d3-interpolate@3.0.1:\n    dependencies:\n      d3-color: 3.1.0\n\n  d3-path@3.1.0: {}\n\n  d3-scale@4.0.2:\n    dependencies:\n      d3-array: 3.2.4\n      d3-format: 3.1.0\n      d3-interpolate: 3.0.1\n      d3-time: 3.1.0\n      d3-time-format: 4.1.0\n\n  d3-shape@3.2.0:\n    dependencies:\n      d3-path: 3.1.0\n\n  d3-time-format@4.1.0:\n    dependencies:\n      d3-time: 3.1.0\n\n  d3-time@3.1.0:\n    dependencies:\n      d3-array: 3.2.4\n\n  d3-timer@3.0.1: {}\n\n  date-fns@4.1.0: {}\n\n  decimal.js-light@2.5.1: {}\n\n  detect-libc@2.0.4:\n    optional: true\n\n  detect-node-es@1.1.0: {}\n\n  didyoumean@1.2.2: {}\n\n  dlv@1.1.3: {}\n\n  dom-helpers@5.2.1:\n    dependencies:\n      '@babel/runtime': 7.27.4\n      csstype: 3.1.3\n\n  eastasianwidth@0.2.0: {}\n\n  electron-to-chromium@1.5.161: {}\n\n  embla-carousel-react@8.5.1(react@19.1.0):\n    dependencies:\n      embla-carousel: 8.5.1\n      embla-carousel-reactive-utils: 8.5.1(embla-carousel@8.5.1)\n      react: 19.1.0\n\n  embla-carousel-reactive-utils@8.5.1(embla-carousel@8.5.1):\n    dependencies:\n      embla-carousel: 8.5.1\n\n  embla-carousel@8.5.1: {}\n\n  emoji-regex@8.0.0: {}\n\n  emoji-regex@9.2.2: {}\n\n  escalade@3.2.0: {}\n\n  eventemitter3@4.0.7: {}\n\n  fast-equals@5.2.2: {}\n\n  fast-glob@3.3.3:\n    dependencies:\n      '@nodelib/fs.stat': 2.0.5\n      '@nodelib/fs.walk': 1.2.8\n      glob-parent: 5.1.2\n      merge2: 1.4.1\n      micromatch: 4.0.8\n\n  fastq@1.19.1:\n    dependencies:\n      reusify: 1.1.0\n\n  fill-range@7.1.1:\n    dependencies:\n      to-regex-range: 5.0.1\n\n  foreground-child@3.3.1:\n    dependencies:\n      cross-spawn: 7.0.6\n      signal-exit: 4.1.0\n\n  fraction.js@4.3.7: {}\n\n  fsevents@2.3.3:\n    optional: true\n\n  function-bind@1.1.2: {}\n\n  get-nonce@1.0.1: {}\n\n  glob-parent@5.1.2:\n    dependencies:\n      is-glob: 4.0.3\n\n  glob-parent@6.0.2:\n    dependencies:\n      is-glob: 4.0.3\n\n  glob@10.4.5:\n    dependencies:\n      foreground-child: 3.3.1\n      jackspeak: 3.4.3\n      minimatch: 9.0.5\n      minipass: 7.1.2\n      package-json-from-dist: 1.0.1\n      path-scurry: 1.11.1\n\n  hasown@2.0.2:\n    dependencies:\n      function-bind: 1.1.2\n\n  input-otp@1.4.1(react-dom@19.1.0(react@19.1.0))(react@19.1.0):\n    dependencies:\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n\n  internmap@2.0.3: {}\n\n  is-arrayish@0.3.2:\n    optional: true\n\n  is-binary-path@2.1.0:\n    dependencies:\n      binary-extensions: 2.3.0\n\n  is-core-module@2.16.1:\n    dependencies:\n      hasown: 2.0.2\n\n  is-extglob@2.1.1: {}\n\n  is-fullwidth-code-point@3.0.0: {}\n\n  is-glob@4.0.3:\n    dependencies:\n      is-extglob: 2.1.1\n\n  is-number@7.0.0: {}\n\n  isexe@2.0.0: {}\n\n  jackspeak@3.4.3:\n    dependencies:\n      '@isaacs/cliui': 8.0.2\n    optionalDependencies:\n      '@pkgjs/parseargs': 0.11.0\n\n  jiti@1.21.7: {}\n\n  js-tokens@4.0.0: {}\n\n  lilconfig@3.1.3: {}\n\n  lines-and-columns@1.2.4: {}\n\n  lodash@4.17.21: {}\n\n  loose-envify@1.4.0:\n    dependencies:\n      js-tokens: 4.0.0\n\n  lru-cache@10.4.3: {}\n\n  lucide-react@0.454.0(react@19.1.0):\n    dependencies:\n      react: 19.1.0\n\n  merge2@1.4.1: {}\n\n  micromatch@4.0.8:\n    dependencies:\n      braces: 3.0.3\n      picomatch: 2.3.1\n\n  minimatch@9.0.5:\n    dependencies:\n      brace-expansion: 2.0.1\n\n  minipass@7.1.2: {}\n\n  mz@2.7.0:\n    dependencies:\n      any-promise: 1.3.0\n      object-assign: 4.1.1\n      thenify-all: 1.6.0\n\n  nanoid@3.3.11: {}\n\n  next-themes@0.4.6(react-dom@19.1.0(react@19.1.0))(react@19.1.0):\n    dependencies:\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n\n  next@15.2.4(react-dom@19.1.0(react@19.1.0))(react@19.1.0):\n    dependencies:\n      '@next/env': 15.2.4\n      '@swc/counter': 0.1.3\n      '@swc/helpers': 0.5.15\n      busboy: 1.6.0\n      caniuse-lite: 1.0.30001720\n      postcss: 8.4.31\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n      styled-jsx: 5.1.6(react@19.1.0)\n    optionalDependencies:\n      '@next/swc-darwin-arm64': 15.2.4\n      '@next/swc-darwin-x64': 15.2.4\n      '@next/swc-linux-arm64-gnu': 15.2.4\n      '@next/swc-linux-arm64-musl': 15.2.4\n      '@next/swc-linux-x64-gnu': 15.2.4\n      '@next/swc-linux-x64-musl': 15.2.4\n      '@next/swc-win32-arm64-msvc': 15.2.4\n      '@next/swc-win32-x64-msvc': 15.2.4\n      sharp: 0.33.5\n    transitivePeerDependencies:\n      - '@babel/core'\n      - babel-plugin-macros\n\n  node-releases@2.0.19: {}\n\n  normalize-path@3.0.0: {}\n\n  normalize-range@0.1.2: {}\n\n  object-assign@4.1.1: {}\n\n  object-hash@3.0.0: {}\n\n  package-json-from-dist@1.0.1: {}\n\n  path-key@3.1.1: {}\n\n  path-parse@1.0.7: {}\n\n  path-scurry@1.11.1:\n    dependencies:\n      lru-cache: 10.4.3\n      minipass: 7.1.2\n\n  picocolors@1.1.1: {}\n\n  picomatch@2.3.1: {}\n\n  pify@2.3.0: {}\n\n  pirates@4.0.7: {}\n\n  postcss-import@15.1.0(postcss@8.5.4):\n    dependencies:\n      postcss: 8.5.4\n      postcss-value-parser: 4.2.0\n      read-cache: 1.0.0\n      resolve: 1.22.10\n\n  postcss-js@4.0.1(postcss@8.5.4):\n    dependencies:\n      camelcase-css: 2.0.1\n      postcss: 8.5.4\n\n  postcss-load-config@4.0.2(postcss@8.5.4):\n    dependencies:\n      lilconfig: 3.1.3\n      yaml: 2.8.0\n    optionalDependencies:\n      postcss: 8.5.4\n\n  postcss-nested@6.2.0(postcss@8.5.4):\n    dependencies:\n      postcss: 8.5.4\n      postcss-selector-parser: 6.1.2\n\n  postcss-selector-parser@6.1.2:\n    dependencies:\n      cssesc: 3.0.0\n      util-deprecate: 1.0.2\n\n  postcss-value-parser@4.2.0: {}\n\n  postcss@8.4.31:\n    dependencies:\n      nanoid: 3.3.11\n      picocolors: 1.1.1\n      source-map-js: 1.2.1\n\n  postcss@8.5.4:\n    dependencies:\n      nanoid: 3.3.11\n      picocolors: 1.1.1\n      source-map-js: 1.2.1\n\n  prop-types@15.8.1:\n    dependencies:\n      loose-envify: 1.4.0\n      object-assign: 4.1.1\n      react-is: 16.13.1\n\n  queue-microtask@1.2.3: {}\n\n  react-day-picker@8.10.1(date-fns@4.1.0)(react@19.1.0):\n    dependencies:\n      date-fns: 4.1.0\n      react: 19.1.0\n\n  react-dom@19.1.0(react@19.1.0):\n    dependencies:\n      react: 19.1.0\n      scheduler: 0.26.0\n\n  react-hook-form@7.56.4(react@19.1.0):\n    dependencies:\n      react: 19.1.0\n\n  react-is@16.13.1: {}\n\n  react-is@18.3.1: {}\n\n  react-remove-scroll-bar@2.3.8(@types/react@19.1.6)(react@19.1.0):\n    dependencies:\n      react: 19.1.0\n      react-style-singleton: 2.2.3(@types/react@19.1.6)(react@19.1.0)\n      tslib: 2.8.1\n    optionalDependencies:\n      '@types/react': 19.1.6\n\n  react-remove-scroll@2.7.0(@types/react@19.1.6)(react@19.1.0):\n    dependencies:\n      react: 19.1.0\n      react-remove-scroll-bar: 2.3.8(@types/react@19.1.6)(react@19.1.0)\n      react-style-singleton: 2.2.3(@types/react@19.1.6)(react@19.1.0)\n      tslib: 2.8.1\n      use-callback-ref: 1.3.3(@types/react@19.1.6)(react@19.1.0)\n      use-sidecar: 1.1.3(@types/react@19.1.6)(react@19.1.0)\n    optionalDependencies:\n      '@types/react': 19.1.6\n\n  react-resizable-panels@2.1.9(react-dom@19.1.0(react@19.1.0))(react@19.1.0):\n    dependencies:\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n\n  react-smooth@4.0.4(react-dom@19.1.0(react@19.1.0))(react@19.1.0):\n    dependencies:\n      fast-equals: 5.2.2\n      prop-types: 15.8.1\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n      react-transition-group: 4.4.5(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n\n  react-style-singleton@2.2.3(@types/react@19.1.6)(react@19.1.0):\n    dependencies:\n      get-nonce: 1.0.1\n      react: 19.1.0\n      tslib: 2.8.1\n    optionalDependencies:\n      '@types/react': 19.1.6\n\n  react-transition-group@4.4.5(react-dom@19.1.0(react@19.1.0))(react@19.1.0):\n    dependencies:\n      '@babel/runtime': 7.27.4\n      dom-helpers: 5.2.1\n      loose-envify: 1.4.0\n      prop-types: 15.8.1\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n\n  react@19.1.0: {}\n\n  read-cache@1.0.0:\n    dependencies:\n      pify: 2.3.0\n\n  readdirp@3.6.0:\n    dependencies:\n      picomatch: 2.3.1\n\n  recharts-scale@0.4.5:\n    dependencies:\n      decimal.js-light: 2.5.1\n\n  recharts@2.15.0(react-dom@19.1.0(react@19.1.0))(react@19.1.0):\n    dependencies:\n      clsx: 2.1.1\n      eventemitter3: 4.0.7\n      lodash: 4.17.21\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n      react-is: 18.3.1\n      react-smooth: 4.0.4(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      recharts-scale: 0.4.5\n      tiny-invariant: 1.3.3\n      victory-vendor: 36.9.2\n\n  resolve@1.22.10:\n    dependencies:\n      is-core-module: 2.16.1\n      path-parse: 1.0.7\n      supports-preserve-symlinks-flag: 1.0.0\n\n  reusify@1.1.0: {}\n\n  run-parallel@1.2.0:\n    dependencies:\n      queue-microtask: 1.2.3\n\n  scheduler@0.26.0: {}\n\n  semver@7.7.2:\n    optional: true\n\n  sharp@0.33.5:\n    dependencies:\n      color: 4.2.3\n      detect-libc: 2.0.4\n      semver: 7.7.2\n    optionalDependencies:\n      '@img/sharp-darwin-arm64': 0.33.5\n      '@img/sharp-darwin-x64': 0.33.5\n      '@img/sharp-libvips-darwin-arm64': 1.0.4\n      '@img/sharp-libvips-darwin-x64': 1.0.4\n      '@img/sharp-libvips-linux-arm': 1.0.5\n      '@img/sharp-libvips-linux-arm64': 1.0.4\n      '@img/sharp-libvips-linux-s390x': 1.0.4\n      '@img/sharp-libvips-linux-x64': 1.0.4\n      '@img/sharp-libvips-linuxmusl-arm64': 1.0.4\n      '@img/sharp-libvips-linuxmusl-x64': 1.0.4\n      '@img/sharp-linux-arm': 0.33.5\n      '@img/sharp-linux-arm64': 0.33.5\n      '@img/sharp-linux-s390x': 0.33.5\n      '@img/sharp-linux-x64': 0.33.5\n      '@img/sharp-linuxmusl-arm64': 0.33.5\n      '@img/sharp-linuxmusl-x64': 0.33.5\n      '@img/sharp-wasm32': 0.33.5\n      '@img/sharp-win32-ia32': 0.33.5\n      '@img/sharp-win32-x64': 0.33.5\n    optional: true\n\n  shebang-command@2.0.0:\n    dependencies:\n      shebang-regex: 3.0.0\n\n  shebang-regex@3.0.0: {}\n\n  signal-exit@4.1.0: {}\n\n  simple-swizzle@0.2.2:\n    dependencies:\n      is-arrayish: 0.3.2\n    optional: true\n\n  sonner@1.7.4(react-dom@19.1.0(react@19.1.0))(react@19.1.0):\n    dependencies:\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n\n  source-map-js@1.2.1: {}\n\n  streamsearch@1.1.0: {}\n\n  string-width@4.2.3:\n    dependencies:\n      emoji-regex: 8.0.0\n      is-fullwidth-code-point: 3.0.0\n      strip-ansi: 6.0.1\n\n  string-width@5.1.2:\n    dependencies:\n      eastasianwidth: 0.2.0\n      emoji-regex: 9.2.2\n      strip-ansi: 7.1.0\n\n  strip-ansi@6.0.1:\n    dependencies:\n      ansi-regex: 5.0.1\n\n  strip-ansi@7.1.0:\n    dependencies:\n      ansi-regex: 6.1.0\n\n  styled-jsx@5.1.6(react@19.1.0):\n    dependencies:\n      client-only: 0.0.1\n      react: 19.1.0\n\n  sucrase@3.35.0:\n    dependencies:\n      '@jridgewell/gen-mapping': 0.3.8\n      commander: 4.1.1\n      glob: 10.4.5\n      lines-and-columns: 1.2.4\n      mz: 2.7.0\n      pirates: 4.0.7\n      ts-interface-checker: 0.1.13\n\n  supports-preserve-symlinks-flag@1.0.0: {}\n\n  tailwind-merge@2.6.0: {}\n\n  tailwindcss-animate@1.0.7(tailwindcss@3.4.17):\n    dependencies:\n      tailwindcss: 3.4.17\n\n  tailwindcss@3.4.17:\n    dependencies:\n      '@alloc/quick-lru': 5.2.0\n      arg: 5.0.2\n      chokidar: 3.6.0\n      didyoumean: 1.2.2\n      dlv: 1.1.3\n      fast-glob: 3.3.3\n      glob-parent: 6.0.2\n      is-glob: 4.0.3\n      jiti: 1.21.7\n      lilconfig: 3.1.3\n      micromatch: 4.0.8\n      normalize-path: 3.0.0\n      object-hash: 3.0.0\n      picocolors: 1.1.1\n      postcss: 8.5.4\n      postcss-import: 15.1.0(postcss@8.5.4)\n      postcss-js: 4.0.1(postcss@8.5.4)\n      postcss-load-config: 4.0.2(postcss@8.5.4)\n      postcss-nested: 6.2.0(postcss@8.5.4)\n      postcss-selector-parser: 6.1.2\n      resolve: 1.22.10\n      sucrase: 3.35.0\n    transitivePeerDependencies:\n      - ts-node\n\n  thenify-all@1.6.0:\n    dependencies:\n      thenify: 3.3.1\n\n  thenify@3.3.1:\n    dependencies:\n      any-promise: 1.3.0\n\n  tiny-invariant@1.3.3: {}\n\n  to-regex-range@5.0.1:\n    dependencies:\n      is-number: 7.0.0\n\n  ts-interface-checker@0.1.13: {}\n\n  tslib@2.8.1: {}\n\n  typescript@5.8.3: {}\n\n  undici-types@6.21.0: {}\n\n  update-browserslist-db@1.1.3(browserslist@4.25.0):\n    dependencies:\n      browserslist: 4.25.0\n      escalade: 3.2.0\n      picocolors: 1.1.1\n\n  use-callback-ref@1.3.3(@types/react@19.1.6)(react@19.1.0):\n    dependencies:\n      react: 19.1.0\n      tslib: 2.8.1\n    optionalDependencies:\n      '@types/react': 19.1.6\n\n  use-sidecar@1.1.3(@types/react@19.1.6)(react@19.1.0):\n    dependencies:\n      detect-node-es: 1.1.0\n      react: 19.1.0\n      tslib: 2.8.1\n    optionalDependencies:\n      '@types/react': 19.1.6\n\n  use-sync-external-store@1.5.0(react@19.1.0):\n    dependencies:\n      react: 19.1.0\n\n  util-deprecate@1.0.2: {}\n\n  vaul@0.9.9(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0):\n    dependencies:\n      '@radix-ui/react-dialog': 1.1.4(@types/react-dom@19.1.5(@types/react@19.1.6))(@types/react@19.1.6)(react-dom@19.1.0(react@19.1.0))(react@19.1.0)\n      react: 19.1.0\n      react-dom: 19.1.0(react@19.1.0)\n    transitivePeerDependencies:\n      - '@types/react'\n      - '@types/react-dom'\n\n  victory-vendor@36.9.2:\n    dependencies:\n      '@types/d3-array': 3.2.1\n      '@types/d3-ease': 3.0.2\n      '@types/d3-interpolate': 3.0.4\n      '@types/d3-scale': 4.0.9\n      '@types/d3-shape': 3.1.7\n      '@types/d3-time': 3.0.4\n      '@types/d3-timer': 3.0.2\n      d3-array: 3.2.4\n      d3-ease: 3.0.1\n      d3-interpolate: 3.0.1\n      d3-scale: 4.0.2\n      d3-shape: 3.2.0\n      d3-time: 3.1.0\n      d3-timer: 3.0.1\n\n  which@2.0.2:\n    dependencies:\n      isexe: 2.0.0\n\n  wrap-ansi@7.0.0:\n    dependencies:\n      ansi-styles: 4.3.0\n      string-width: 4.2.3\n      strip-ansi: 6.0.1\n\n  wrap-ansi@8.1.0:\n    dependencies:\n      ansi-styles: 6.2.1\n      string-width: 5.1.2\n      strip-ansi: 7.1.0\n\n  yaml@2.8.0: {}\n\n  zod@3.25.42: {}"
        },
        "deleted_files": []
    },
    {
        "commit_message": "v0 code doc",
        "added_files": {
            "docs/architecture.md": "# Habit Map 项目架构文档\n\n## 项目概述\n\nHabit Map 是一个基于福格行为模型（Fogg Behavior Model）的习惯养成应用，帮助用户通过微行为的方式建立和维持良好的习惯。项目采用现代化的 Web 技术栈，提供直观易用的用户界面和流畅的用户体验。\n\n## 技术选型\n\n### 核心框架与平台\n- **Next.js 15** - React 全栈框架，采用 App Router 架构\n- **React 19** - 用户界面构建库\n- **TypeScript** - 类型安全的 JavaScript 超集\n- **Node.js** - 服务端运行时环境\n\n### UI 组件库与样式\n- **shadcn/ui** - 基于 Radix UI 的组件库，提供无障碍访问支持\n- **Radix UI** - 底层原语组件库，包含 28+ 组件\n- **Tailwind CSS 3** - 实用工具优先的 CSS 框架\n- **Lucide React** - 现代化图标库\n- **CVA (Class Variance Authority)** - 组件样式变体管理\n- **next-themes** - 主题切换支持\n\n### 表单处理与验证\n- **React Hook Form** - 高性能表单库\n- **Zod** - TypeScript 优先的模式验证库\n- **@hookform/resolvers** - Hook Form 与 Zod 集成\n\n### 用户体验增强\n- **Sonner** - Toast 通知组件\n- **Embla Carousel** - 轮播图组件\n- **Recharts** - 图表可视化库\n- **React Day Picker** - 日期选择器\n- **React Resizable Panels** - 可调整大小的面板\n\n### 工具库\n- **date-fns** - 日期处理工具库\n- **clsx & tailwind-merge** - CSS 类名处理\n- **cmdk** - 命令面板组件\n\n## 架构设计\n\n### 整体架构模式\n\n项目采用 **前端单页应用 (SPA)** 架构，基于 Next.js App Router 的文件系统路由，遵循 **组件化开发** 和 **分层架构** 原则。\n\n### 目录结构与模块划分\n\n```\nhabit-map/\n├── app/                    # Next.js App Router 页面\n│   ├── layout.tsx         # 根布局组件\n│   ├── globals.css        # 全局样式\n│   └── habits/            # 习惯相关页面\n│       └── add/           # 添加习惯页面\n├── components/            # 可复用组件\n│   ├── ui/               # shadcn/ui 组件库\n│   └── theme-provider.tsx # 主题提供者\n├── hooks/                # 自定义 React Hooks\n│   ├── use-mobile.tsx    # 移动端检测\n│   └── use-toast.ts      # Toast 通知\n├── lib/                  # 工具函数库\n│   └── utils.ts          # 通用工具函数\n├── styles/               # 样式文件\n├── public/               # 静态资源\n└── docs/                 # 项目文档\n```\n\n## 核心模块说明\n\n### 1. 路由模块 (App Router)\n- **位置**: `app/` 目录\n- **架构**: 基于文件系统的路由\n- **特点**: \n  - 支持嵌套布局\n  - 服务端组件优先\n  - 自动代码分割\n\n### 2. 组件系统\n#### 2.1 基础组件库 (`components/ui/`)\n- **设计系统**: 基于 shadcn/ui 设计规范\n- **组件数量**: 48+ 个可复用组件\n- **特点**:\n  - 无障碍访问支持 (a11y)\n  - 完全类型安全\n  - 主题化支持\n  - 响应式设计\n\n#### 2.2 业务组件 (`components/`)\n- **主题管理**: `theme-provider.tsx` 提供深浅主题切换\n- **布局组件**: 页面级布局组件\n\n### 3. 状态管理模块\n- **本地状态**: React useState/useReducer\n- **表单状态**: React Hook Form\n- **主题状态**: next-themes\n- **特点**: 去中心化状态管理，避免过度复杂性\n\n### 4. 工具与配置模块 (`lib/`)\n- **样式工具**: clsx + tailwind-merge 集成\n- **类型定义**: TypeScript 类型声明\n- **配置文件**: \n  - `tailwind.config.ts` - 样式系统配置\n  - `components.json` - shadcn/ui 配置\n  - `next.config.mjs` - Next.js 配置\n\n### 5. 样式系统\n- **CSS 框架**: Tailwind CSS\n- **设计令牌**: CSS 变量驱动的设计系统\n- **主题支持**: 明暗主题切换\n- **颜色系统**:\n  - Primary: `#69B578` (绿色 - 成长与健康)\n  - Secondary: `#81ACDA` (蓝色 - 平静与专注)\n  - Accent: `#E5B061` (黄色 - 活力与动机)\n\n## 核心功能架构\n\n### 习惯创建流程\n基于多步骤表单的设计模式：\n\n1. **步骤1 - 习惯定义**\n   - 习惯名称和描述输入\n   - 表单验证和状态管理\n\n2. **步骤2 - 微行为选择**\n   - 推荐算法模拟\n   - 多选交互设计\n   - 选择限制逻辑\n\n3. **步骤3 - 提醒设置**\n   - 自然提醒（锚点习惯）\n   - 定时提醒\n   - 动态表单配置\n\n4. **步骤4 - 完成确认**\n   - 习惯总结展示\n   - 成功反馈设计\n\n## 性能优化策略\n\n### 1. 构建优化\n- **代码分割**: Next.js 自动代码分割\n- **Tree Shaking**: 只打包使用的代码\n- **静态生成**: 适当页面使用 SSG\n\n### 2. 运行时优化\n- **组件懒加载**: React.lazy + Suspense\n- **状态优化**: 避免不必要的重渲染\n- **图标优化**: 按需导入 Lucide 图标\n\n### 3. 样式优化\n- **CSS 优化**: Tailwind CSS JIT 编译\n- **字体优化**: Next.js 字体优化\n- **主题缓存**: localStorage 主题持久化\n\n## 可维护性设计\n\n### 1. 代码组织\n- **模块化**: 按功能模块组织代码\n- **组件复用**: 统一的组件设计系统\n- **类型安全**: 完整的 TypeScript 类型覆盖\n\n### 2. 开发体验\n- **配置标准化**: ESLint + Prettier 代码规范\n- **路径别名**: `@/` 别名简化导入路径\n- **组件文档**: 内联类型文档\n\n### 3. 扩展性考虑\n- **组件库**: 易于扩展的组件系统\n- **主题系统**: 可配置的设计令牌\n- **国际化预留**: 组件结构支持多语言\n\n## 部署与环境\n\n### 开发环境\n- **包管理**: pnpm (高效的包管理器)\n- **开发服务器**: Next.js dev server\n- **热重载**: 快速开发反馈\n\n### 生产环境\n- **构建**: Next.js build 静态优化\n- **部署**: 支持 Vercel、Netlify 等平台\n- **CDN**: 静态资源 CDN 加速"
        },
        "modified_files": {},
        "deleted_files": []
    },
    {
        "commit_message": "add rules",
        "added_files": {
            ".cursor/rules/ask-to-agent.mdc": "---\ndescription: \nglobs: \nalwaysApply: false\n---\n把以上方案写成一份修改代码的 prompt，我要交给 claude 3.7 写代码。要求直接输入 prompt 内容，不包含多余的话，可以直接复制。",
            ".cursor/rules/do-not-write-code.mdc": "---\ndescription: \nglobs: \nalwaysApply: false\n---\n\n先讨论技术方案，不要写代码，直到我让你开始写代码为止。",
            ".cursor/rules/run-unit-test.mdc": "---\ndescription: \nglobs: \nalwaysApply: false\n---\n如果改动的模块有单元测试，在改动后运行单元测试来检查改动的正确性。如果单元测试失败，需要返回修改代码，直到单元测试正确为止。",
            ".cursor/rules/start-to-write-code.mdc": "---\ndescription: \nglobs: \nalwaysApply: false\n---\n请根据以上讨论的技术方案，编写代码实现功能，代码风格清晰准确。"
        },
        "modified_files": {},
        "deleted_files": []
    },
    {
        "commit_message": "brand color theme",
        "added_files": {
            "brand-color-theme.md": "# Habit Map 品牌色彩主题改造计划\n\n## 项目背景\n\n当前项目中存在大量硬编码的 hex 颜色值（如 `bg-[#69B578]`、`text-[#292F36]` 等），需要统一管理并支持深浅主题切换。\n\n## 设计色彩规范\n\n基于提供的配色设计，定义以下色彩系统：\n\n| 角色 | 颜色名称 | HEX 色值 | HSL 色值 | 用途说明 |\n|------|----------|----------|----------|----------|\n| 核心主绿 | Primary Green | #69B578 | 132 34% 56% | 品牌主色，代表成长、积极 |\n| 核心强调色 | Primary Accent | #E5B061 | 43 71% 62% | 行动召唤 (CTA)，庆祝，高亮 |\n| 主要背景色 | Main Background | #EBF2FA | 210 59% 95% | 大部分页面背景，卡片间隙 |\n| 主要文本色 | Primary Text | #292F36 | 210 13% 19% | 标题、正文等主要信息 |\n| 辅助/信息浅蓝 | Secondary Blue | #81ACDA | 210 55% 68% | 辅助信息，次要交互，柔和引导 |\n| 次要文本 | Secondary Text | #5A6872 | 210 10% 38% | 辅助文字，描述，时间戳 |\n| 分隔线 | Divider | #D8DEE9 | 210 24% 85% | 列表分隔，卡片边框 |\n\n## 技术方案\n\n采用 **CSS 变量 + Tailwind** 的组合方案：\n\n### 优势\n- 支持深浅主题动态切换\n- 语义化的颜色命名\n- 运行时可调整颜色\n- 与现有 `next-themes` 系统兼容\n\n### 颜色分类体系\n\n#### 1. 品牌色系 (brand)\n- `brand-primary`: 核心主绿色\n- `brand-accent`: 核心强调色  \n- `brand-secondary`: 辅助信息蓝色\n\n#### 2. 文本色系 (text)\n- `text-primary`: 主要文本色\n- `text-secondary`: 次要文本色\n\n#### 3. 表面色系 (surface)\n- `surface-main`: 主要背景色\n- `surface-divider`: 分隔线颜色\n\n## 修改步骤\n\n### 步骤 1: 更新 Tailwind 配置\n\n**文件**: `tailwind.config.ts`\n\n**修改内容**:\n1. 将现有的硬编码颜色值改为 CSS 变量引用\n2. 添加自定义品牌色系配置\n3. 保持与 shadcn/ui 的兼容性\n\n**新增颜色类**:\n```typescript\ncolors: {\n  // 现有的 shadcn/ui 颜色保持不变\n  // ...\n  \n  // 新增自定义品牌色系\n  brand: {\n    primary: \"hsl(var(--brand-primary))\",\n    accent: \"hsl(var(--brand-accent))\",\n    secondary: \"hsl(var(--brand-secondary))\",\n  },\n  text: {\n    primary: \"hsl(var(--text-primary))\",\n    secondary: \"hsl(var(--text-secondary))\",\n  },\n  surface: {\n    main: \"hsl(var(--surface-main))\",\n    divider: \"hsl(var(--surface-divider))\",\n  },\n}\n```\n\n### 步骤 2: 定义 CSS 变量\n\n**文件**: `app/globals.css`\n\n**修改内容**:\n1. 在 `:root` 中添加浅色主题的颜色变量\n2. 在 `.dark` 中添加深色主题的颜色变量\n3. 使用 HSL 格式以便更好地调整亮度\n\n**浅色主题变量**:\n```css\n:root {\n  /* 品牌色系 */\n  --brand-primary: 132 34% 56%;      /* #69B578 */\n  --brand-accent: 43 71% 62%;        /* #E5B061 */\n  --brand-secondary: 210 55% 68%;    /* #81ACDA */\n  \n  /* 文本色系 */\n  --text-primary: 210 13% 19%;       /* #292F36 */\n  --text-secondary: 210 10% 38%;     /* #5A6872 */\n  \n  /* 表面色系 */\n  --surface-main: 210 59% 95%;       /* #EBF2FA */\n  --surface-divider: 210 24% 85%;    /* #D8DEE9 */\n}\n```\n\n**深色主题变量**:\n```css\n.dark {\n  /* 品牌色系 - 降低亮度以适应深色背景 */\n  --brand-primary: 132 34% 46%;      /* 降低 10% 亮度 */\n  --brand-accent: 43 71% 52%;        /* 降低 10% 亮度 */\n  --brand-secondary: 210 54% 57%;    /* 降低 10% 亮度 */\n  \n  /* 文本色系 - 反转为浅色 */\n  --text-primary: 0 0% 95%;          /* 浅色文本 */\n  --text-secondary: 0 0% 70%;        /* 中等浅色文本 */\n  \n  /* 表面色系 - 深色背景 */\n  --surface-main: 210 15% 8%;        /* 深色背景 */\n  --surface-divider: 210 15% 15%;    /* 深色分隔线 */\n}\n```\n\n### 步骤 3: 更新组件代码\n\n**文件**: `app/habits/add/page.tsx`\n\n**修改策略**:\n1. 逐步替换硬编码颜色\n2. 使用语义化的颜色类名\n3. 保持视觉效果一致性\n\n**颜色映射表**:\n\n| 原硬编码颜色 | 新颜色类名 | 用途 |\n|-------------|-----------|------|\n| `bg-[#69B578]` | `bg-brand-primary` | 主要按钮、成功状态 |\n| `hover:bg-[#5a9a68]` | `hover:bg-brand-primary/80` | 主要按钮悬停 |\n| `bg-[#E5B061]` | `bg-brand-accent` | 强调按钮、完成状态 |\n| `hover:bg-[#d49d4f]` | `hover:bg-brand-accent/80` | 强调按钮悬停 |\n| `bg-[#81ACDA]` | `bg-brand-secondary` | 信息提示、次要元素 |\n| `bg-[#EBF2FA]` | `bg-surface-main` | 页面背景、卡片背景 |\n| `border-[#D8DEE9]` | `border-surface-divider` | 卡片边框、分隔线 |\n| `text-[#292F36]` | `text-text-primary` | 主要文本 |\n| `text-[#5A6872]` | `text-text-secondary` | 次要文本、描述 |\n\n### 步骤 4: 验证和测试\n\n1. **功能测试**: 确保所有颜色正确显示\n2. **主题切换测试**: 验证深浅主题切换效果\n3. **视觉回归测试**: 确保改造后视觉效果与原设计一致\n4. **响应式测试**: 确保在不同设备上显示正常\n\n## 实施注意事项\n\n### 1. 兼容性考虑\n- 保持与现有 shadcn/ui 组件的兼容性\n- 不影响其他页面的现有样式\n\n### 2. 渐进式迁移\n- 可以分模块逐步替换，不需要一次性全部修改\n- 优先替换使用频率高的颜色\n\n### 3. 命名规范\n- 使用语义化命名而非颜色名称（如 `primary` 而非 `green`）\n- 保持命名的一致性和可预测性\n\n### 4. 文档维护\n- 更新组件文档中的颜色使用说明\n- 建立颜色使用规范指南\n\n## 预期效果\n\n改造完成后将实现：\n\n1. **统一的颜色管理**: 所有颜色在配置文件中统一定义\n2. **主题切换支持**: 完整的深浅主题切换功能\n3. **更好的可维护性**: 语义化命名，易于理解和修改\n4. **设计系统化**: 建立完整的颜色设计系统\n5. **未来扩展性**: 支持更多主题变体和个性化设置\n\n## 实施进度记录\n\n### 步骤 1: 更新 Tailwind 配置\n- [x] 1.1 将现有的硬编码颜色值改为 CSS 变量引用\n- [x] 1.2 添加自定义品牌色系配置\n- [x] 1.3 保持与 shadcn/ui 的兼容性\n- [x] 1.4 验证配置更新\n\n### 步骤 2: 定义 CSS 变量\n- [x] 2.1 在 :root 中添加浅色主题的颜色变量\n- [x] 2.2 在 .dark 中添加深色主题的颜色变量\n- [x] 2.3 使用 HSL 格式定义所有颜色\n- [x] 2.4 验证变量定义\n\n### 步骤 3: 更新组件代码\n- [x] 3.1 替换 app/habits/add/page.tsx 中的硬编码颜色\n- [x] 3.2 验证组件视觉效果\n- [x] 3.3 测试深色模式切换\n- [x] 3.4 代码审查和优化\n\n### 步骤 4: 验证和测试\n- [ ] 4.1 功能测试\n- [ ] 4.2 主题切换测试\n- [ ] 4.3 视觉回归测试\n- [ ] 4.4 响应式测试\n- [ ] 4.5 性能测试"
        },
        "modified_files": {
            "app/globals.css": "@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\nbody {\n  font-family: Arial, Helvetica, sans-serif;\n}\n\n@layer utilities {\n  .text-balance {\n    text-wrap: balance;\n  }\n}\n\n@layer base {\n  :root {\n    --background: 0 0% 100%;\n    --foreground: 0 0% 3.9%;\n    --card: 0 0% 100%;\n    --card-foreground: 0 0% 3.9%;\n    --popover: 0 0% 100%;\n    --popover-foreground: 0 0% 3.9%;\n    --primary: 0 0% 9%;\n    --primary-foreground: 0 0% 98%;\n    --secondary: 0 0% 96.1%;\n    --secondary-foreground: 0 0% 9%;\n    --muted: 0 0% 96.1%;\n    --muted-foreground: 0 0% 45.1%;\n    --accent: 0 0% 96.1%;\n    --accent-foreground: 0 0% 9%;\n    --destructive: 0 84.2% 60.2%;\n    --destructive-foreground: 0 0% 98%;\n    --border: 0 0% 89.8%;\n    --input: 0 0% 89.8%;\n    --ring: 0 0% 3.9%;\n    --chart-1: 12 76% 61%;\n    --chart-2: 173 58% 39%;\n    --chart-3: 197 37% 24%;\n    --chart-4: 43 74% 66%;\n    --chart-5: 27 87% 67%;\n    --radius: 0.5rem;\n    --sidebar-background: 0 0% 98%;\n    --sidebar-foreground: 240 5.3% 26.1%;\n    --sidebar-primary: 240 5.9% 10%;\n    --sidebar-primary-foreground: 0 0% 98%;\n    --sidebar-accent: 240 4.8% 95.9%;\n    --sidebar-accent-foreground: 240 5.9% 10%;\n    --sidebar-border: 220 13% 91%;\n    --sidebar-ring: 217.2 91.2% 59.8%;\n    \n    /* 品牌色系 - 修正后的准确 HSL 值 */\n    --brand-primary: 132 34% 56%;      /* #69B578 */\n    --brand-accent: 43 71% 62%;        /* #E5B061 */\n    --brand-secondary: 210 55% 68%;    /* #81ACDA */\n    \n    /* 文本色系 */\n    --text-primary: 210 13% 19%;       /* #292F36 */\n    --text-secondary: 210 10% 38%;     /* #5A6872 */\n    \n    /* 表面色系 */\n    --surface-main: 210 59% 95%;       /* #EBF2FA */\n    --surface-divider: 210 24% 85%;    /* #D8DEE9 */\n  }\n  .dark {\n    --background: 0 0% 3.9%;\n    --foreground: 0 0% 98%;\n    --card: 0 0% 3.9%;\n    --card-foreground: 0 0% 98%;\n    --popover: 0 0% 3.9%;\n    --popover-foreground: 0 0% 98%;\n    --primary: 0 0% 98%;\n    --primary-foreground: 0 0% 9%;\n    --secondary: 0 0% 14.9%;\n    --secondary-foreground: 0 0% 98%;\n    --muted: 0 0% 14.9%;\n    --muted-foreground: 0 0% 63.9%;\n    --accent: 0 0% 14.9%;\n    --accent-foreground: 0 0% 98%;\n    --destructive: 0 62.8% 30.6%;\n    --destructive-foreground: 0 0% 98%;\n    --border: 0 0% 14.9%;\n    --input: 0 0% 14.9%;\n    --ring: 0 0% 83.1%;\n    --chart-1: 220 70% 50%;\n    --chart-2: 160 60% 45%;\n    --chart-3: 30 80% 55%;\n    --chart-4: 280 65% 60%;\n    --chart-5: 340 75% 55%;\n    --sidebar-background: 240 5.9% 10%;\n    --sidebar-foreground: 240 4.8% 95.9%;\n    --sidebar-primary: 224.3 76.3% 48%;\n    --sidebar-primary-foreground: 0 0% 100%;\n    --sidebar-accent: 240 3.7% 15.9%;\n    --sidebar-accent-foreground: 240 4.8% 95.9%;\n    --sidebar-border: 240 3.7% 15.9%;\n    --sidebar-ring: 217.2 91.2% 59.8%;\n    \n    /* 品牌色系 - 深色主题，降低亮度 */\n    --brand-primary: 132 34% 46%;      /* 降低 10% 亮度 */\n    --brand-accent: 43 71% 52%;        /* 降低 10% 亮度 */\n    --brand-secondary: 210 55% 58%;    /* 降低 10% 亮度 */\n    \n    /* 文本色系 - 反转为浅色 */\n    --text-primary: 0 0% 95%;          /* 浅色文本 */\n    --text-secondary: 0 0% 70%;        /* 中等浅色文本 */\n    \n    /* 表面色系 - 深色背景 */\n    --surface-main: 210 15% 8%;        /* 深色背景 */\n    --surface-divider: 210 15% 15%;    /* 深色分隔线 */\n  }\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n  body {\n    @apply bg-background text-foreground;\n  }\n}",
            "app/habits/add/page.tsx": "\"use client\"\n\nimport { useState } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Checkbox } from \"@/components/ui/checkbox\"\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\"\nimport { Label } from \"@/components/ui/label\"\nimport { ArrowLeft, ArrowRight, Check, Clock, Link, ArrowUp, ArrowDown, Sparkles, Heart, Target } from \"lucide-react\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { useToast } from \"@/hooks/use-toast\"\nimport { Toaster } from \"@/components/ui/toaster\"\n\ninterface MicroBehavior {\n  id: string\n  title: string\n  description: string\n  selected: boolean\n}\n\ninterface AnchorOption {\n  id: string\n  label: string\n  description: string\n}\n\nexport default function AddHabitPage() {\n  const [currentStep, setCurrentStep] = useState(1)\n  const [habitName, setHabitName] = useState(\"\")\n  const [habitDescription, setHabitDescription] = useState(\"\")\n  const [selectedMicroBehaviors, setSelectedMicroBehaviors] = useState<MicroBehavior[]>([])\n  const [reminderSettings, setReminderSettings] = useState<{ [key: string]: any }>({})\n  const { toast } = useToast()\n  const [expandedCards, setExpandedCards] = useState<{ [key: string]: boolean }>({})\n  const [isLoadingRecommendations, setIsLoadingRecommendations] = useState(false)\n\n  // 模拟推荐的微行为\n  const recommendedMicroBehaviors: MicroBehavior[] = [\n    {\n      id: \"1\",\n      title: \"打开书本\",\n      description: \"每天只需要打开一本书，翻到任意一页\",\n      selected: false,\n    },\n    {\n      id: \"2\",\n      title: \"阅读一段话\",\n      description: \"读完一个段落就算完成\",\n      selected: false,\n    },\n    {\n      id: \"3\",\n      title: \"阅读2分钟\",\n      description: \"设置计时器，专注阅读2分钟\",\n      selected: false,\n    },\n    {\n      id: \"4\",\n      title: \"准备阅读环境\",\n      description: \"找一个安静的地方，准备好书本和水杯\",\n      selected: false,\n    },\n    {\n      id: \"5\",\n      title: \"记录一个想法\",\n      description: \"阅读后写下一句话的感受或想法\",\n      selected: false,\n    },\n    {\n      id: \"6\",\n      title: \"朗读一句话\",\n      description: \"大声朗读书中的任意一句话\",\n      selected: false,\n    },\n    {\n      id: \"7\",\n      title: \"标记一个重点\",\n      description: \"用笔或便签标记一个有趣的内容\",\n      selected: false,\n    },\n    {\n      id: \"8\",\n      title: \"翻阅目录\",\n      description: \"浏览书本目录，选择感兴趣的章节\",\n      selected: false,\n    },\n    {\n      id: \"9\",\n      title: \"设置阅读提醒\",\n      description: \"在手机上设置明天的阅读提醒\",\n      selected: false,\n    },\n    {\n      id: \"10\",\n      title: \"分享阅读计划\",\n      description: \"告诉朋友或家人你今天的阅读计划\",\n      selected: false,\n    },\n  ]\n\n  const anchorOptions: AnchorOption[] = [\n    { id: \"morning-brush\", label: \"早上刷牙后\", description: \"利用晨间例行公事\" },\n    { id: \"coffee\", label: \"喝咖啡/茶时\", description: \"与日常饮品习惯结合\" },\n    { id: \"lunch-break\", label: \"午休时间\", description: \"利用工作间隙\" },\n    { id: \"before-sleep\", label: \"睡前\", description: \"作为放松活动\" },\n    { id: \"commute\", label: \"通勤路上\", description: \"利用交通时间\" },\n  ]\n\n  const handleMicroBehaviorToggle = (behaviorId: string) => {\n    const selectedCount = selectedMicroBehaviors.filter((b) => b.selected).length\n    const behavior = selectedMicroBehaviors.find((b) => b.id === behaviorId)\n\n    // 如果要选择第4个，显示toast提示\n    if (!behavior?.selected && selectedCount >= 3) {\n      toast({\n        title: \"选择数量已达上限\",\n        description: \"最多只能选择3个微行为，请先取消其他选择。\",\n        variant: \"destructive\",\n      })\n      return\n    }\n\n    setSelectedMicroBehaviors((prev) =>\n      prev.map((behavior) => (behavior.id === behaviorId ? { ...behavior, selected: !behavior.selected } : behavior)),\n    )\n  }\n\n  const initializeMicroBehaviors = () => {\n    if (selectedMicroBehaviors.length === 0) {\n      setSelectedMicroBehaviors(recommendedMicroBehaviors)\n      // 初始化所有选中的微行为卡片为展开状态\n      const initialExpandedState: { [key: string]: boolean } = {}\n      recommendedMicroBehaviors.forEach((behavior) => {\n        if (behavior.selected) {\n          initialExpandedState[behavior.id] = true\n        }\n      })\n      setExpandedCards(initialExpandedState)\n    }\n  }\n\n  const handleNextStep = async () => {\n    if (currentStep === 1) {\n      setIsLoadingRecommendations(true)\n      setCurrentStep(2)\n      // 模拟系统推荐微行为的等待时间\n      await new Promise((resolve) => setTimeout(resolve, 2000))\n      initializeMicroBehaviors()\n      setIsLoadingRecommendations(false)\n    } else if (currentStep === 2) {\n      const selectedCount = selectedMicroBehaviors.filter((b) => b.selected).length\n      if (selectedCount === 0) {\n        toast({\n          title: \"请选择微行为\",\n          description: \"至少需要选择1个微行为才能继续。\",\n          variant: \"destructive\",\n        })\n        return\n      }\n      // 为选中的微行为初始化展开状态和默认提醒设置\n      const initialExpandedState: { [key: string]: boolean } = {}\n      const initialReminderSettings: { [key: string]: any } = { ...reminderSettings }\n\n      selectedMicroBehaviors\n        .filter((b) => b.selected)\n        .forEach((behavior) => {\n          initialExpandedState[behavior.id] = true\n          // 如果该微行为还没有提醒设置，初始化为默认的自然提醒\n          if (!initialReminderSettings[behavior.id]) {\n            initialReminderSettings[behavior.id] = { type: \"anchor\" }\n          }\n        })\n\n      setExpandedCards(initialExpandedState)\n      setReminderSettings(initialReminderSettings)\n      setCurrentStep(3)\n    } else if (currentStep === 3) {\n      // 完成创建，进入第4步（完成页面）\n      setCurrentStep(4)\n    }\n  }\n\n  const handlePrevStep = () => {\n    setCurrentStep((prev) => Math.max(prev - 1, 1))\n  }\n\n  const handleComplete = () => {\n    // 导航到习惯列表页或今日行动页\n    window.location.href = \"/habits\"\n  }\n\n  const toggleCardExpanded = (behaviorId: string) => {\n    setExpandedCards((prev) => ({\n      ...prev,\n      [behaviorId]: !prev[behaviorId],\n    }))\n  }\n\n  const getReminderText = (behaviorId: string) => {\n    const setting = reminderSettings[behaviorId]\n    if (!setting || !setting.type) {\n      return \"未设置提醒\"\n    }\n\n    if (setting.type === \"anchor\") {\n      if (setting.anchor) {\n        const anchorOption = anchorOptions.find((option) => option.id === setting.anchor)\n        return `${anchorOption?.label || \"未知锚点\"}`\n      }\n      return \"自然提醒（未选择锚点）\"\n    } else if (setting.type === \"timer\") {\n      if (setting.time) {\n        return `每天 ${setting.time}`\n      }\n      return \"定时提醒（未选择时间）\"\n    }\n\n    return \"未设置提醒\"\n  }\n\n  const renderStep1 = () => (\n    <div className=\"space-y-6\">\n      <div className=\"text-center mb-6\">\n        <h1 className=\"text-xl font-bold text-text-primary mb-2\">创建新习惯</h1>\n        <p className=\"text-sm text-text-secondary\">第1步：定义你的习惯</p>\n      </div>\n\n      <div className=\"space-y-4\">\n        <div>\n          <Label htmlFor=\"habit-name\" className=\"text-text-primary font-medium\">\n            习惯名称\n          </Label>\n          <Input\n            id=\"habit-name\"\n            value={habitName}\n            onChange={(e) => setHabitName(e.target.value)}\n            placeholder=\"我想养成的好习惯是...\"\n            className=\"mt-2 border-surface-divider focus:border-brand-primary\"\n          />\n        </div>\n\n        <div>\n          <Label htmlFor=\"habit-description\" className=\"text-text-primary font-medium\">\n            习惯描述 (可选)\n          </Label>\n          <Textarea\n            id=\"habit-description\"\n            value={habitDescription}\n            onChange={(e) => setHabitDescription(e.target.value)}\n            placeholder=\"我为什么想养成这个习惯？它对我有什么意义？\"\n            className=\"mt-2 border-surface-divider focus:border-brand-primary min-h-[100px]\"\n          />\n        </div>\n      </div>\n\n      <div className=\"flex justify-between pt-4\">\n        <Button variant=\"ghost\" className=\"text-text-secondary\" onClick={() => window.history.back()}>\n          <ArrowLeft className=\"w-4 h-4 mr-2\" />\n          取消\n        </Button>\n        <Button\n          onClick={handleNextStep}\n          disabled={!habitName.trim()}\n          className=\"bg-brand-primary hover:bg-brand-primary/80 text-white\"\n        >\n          下一步\n          <ArrowRight className=\"w-4 h-4 ml-2\" />\n        </Button>\n      </div>\n    </div>\n  )\n\n  const renderLoadingStep2 = () => (\n    <div className=\"space-y-6\">\n      <div className=\"text-center mb-6\">\n        <h1 className=\"text-xl font-bold text-text-primary mb-2\">创建新习惯</h1>\n        <p className=\"text-sm text-text-secondary\">第2步：设计你的微行动</p>\n      </div>\n\n      <Card className=\"border-surface-divider bg-surface-main\">\n        <CardContent className=\"p-4\">\n          <p className=\"text-sm text-text-secondary\">习惯：</p>\n          <p className=\"font-medium text-text-primary\">{habitName}</p>\n        </CardContent>\n      </Card>\n\n      <div className=\"flex flex-col items-center justify-center py-16\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-brand-primary mb-6\"></div>\n        <h3 className=\"text-lg font-medium text-text-primary mb-2\">正在为您推荐微行为...</h3>\n        <p className=\"text-sm text-text-secondary text-center leading-relaxed\">\n          基于您的习惯目标，我们正在分析并推荐\n          <br />\n          最适合的微行为组合\n        </p>\n      </div>\n    </div>\n  )\n\n  const renderStep2 = () => (\n    <div className=\"space-y-6\">\n      <div className=\"text-center mb-6\">\n        <h1 className=\"text-xl font-bold text-text-primary mb-2\">创建新习惯</h1>\n        <p className=\"text-sm text-text-secondary\">第2步：设计你的微行动</p>\n      </div>\n\n      <Card className=\"border-surface-divider bg-surface-main\">\n        <CardContent className=\"p-4\">\n          <p className=\"text-sm text-text-secondary\">习惯：</p>\n          <p className=\"font-medium text-text-primary\">{habitName}</p>\n        </CardContent>\n      </Card>\n\n      <div>\n        <div className=\"flex justify-between items-center mb-4\">\n          <h3 className=\"font-medium text-text-primary\">推荐的微行为</h3>\n          <span className=\"text-sm text-text-secondary\">\n            已选择 {selectedMicroBehaviors.filter((b) => b.selected).length}/3\n          </span>\n        </div>\n        <p className=\"text-sm text-text-secondary mb-4\">选择1-3个简单易行的微行为，让习惯更容易坚持</p>\n\n        <div className=\"space-y-3\">\n          {selectedMicroBehaviors.map((behavior) => (\n            <Card key={behavior.id} className=\"border-surface-divider\">\n              <CardContent\n                className=\"p-4 cursor-pointer hover:bg-gray-50 transition-colors\"\n                onClick={() => handleMicroBehaviorToggle(behavior.id)}\n              >\n                <div className=\"flex items-start space-x-3\">\n                  <Checkbox\n                    id={behavior.id}\n                    checked={behavior.selected}\n                    onCheckedChange={() => handleMicroBehaviorToggle(behavior.id)}\n                    className=\"mt-1 pointer-events-none\"\n                  />\n                  <div className=\"flex-1\">\n                    <Label\n                      htmlFor={behavior.id}\n                      className=\"font-medium cursor-pointer text-text-primary pointer-events-none\"\n                    >\n                      {behavior.title}\n                    </Label>\n                    <p className=\"text-sm text-text-secondary mt-1 pointer-events-none\">{behavior.description}</p>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"flex justify-between pt-4\">\n        <Button variant=\"ghost\" onClick={handlePrevStep} className=\"text-text-secondary\">\n          <ArrowLeft className=\"w-4 h-4 mr-2\" />\n          上一步\n        </Button>\n        <Button onClick={handleNextStep} className=\"bg-brand-primary hover:bg-brand-primary/80 text-white\">\n          下一步\n          <ArrowRight className=\"w-4 h-4 ml-2\" />\n        </Button>\n      </div>\n    </div>\n  )\n\n  const getReminderDisplayText = (behaviorId: string) => {\n    const setting = reminderSettings[behaviorId]\n    if (!setting || !setting.type) {\n      return \"需要设置提醒方式\"\n    }\n\n    if (setting.type === \"anchor\") {\n      if (setting.anchor) {\n        const anchorOption = anchorOptions.find((option) => option.id === setting.anchor)\n        return `自然提醒：${anchorOption?.label || \"未选择锚点\"}`\n      }\n      return \"自然提醒（未选择锚点）\"\n    } else if (setting.type === \"timer\") {\n      if (setting.time) {\n        return `定时提醒：${setting.time}`\n      }\n      return \"定时提醒（未选择时间）\"\n    }\n\n    return \"需要设置提醒方式\"\n  }\n\n  const renderStep3 = () => (\n    <div className=\"space-y-6\">\n      <div className=\"text-center mb-6\">\n        <h1 className=\"text-xl font-bold text-text-primary mb-2\">创建新习惯</h1>\n        <p className=\"text-sm text-text-secondary\">第3步：设置提醒</p>\n      </div>\n\n      <div className=\"space-y-6\">\n        {selectedMicroBehaviors\n          .filter((behavior) => behavior.selected)\n          .map((behavior) => (\n            <Card key={behavior.id} className=\"border-surface-divider\">\n              {expandedCards[behavior.id] ? (\n                // 展开状态 - 完整编辑界面\n                <>\n                  <CardHeader\n                    className=\"pb-3 cursor-pointer hover:bg-gray-50 transition-colors\"\n                    onClick={() => toggleCardExpanded(behavior.id)}\n                  >\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex-1\">\n                        <CardTitle className=\"text-base text-text-primary\">{behavior.title}</CardTitle>\n                        <p className=\"text-sm text-text-secondary\">{behavior.description}</p>\n                      </div>\n                      <div className=\"ml-2\">\n                        <ArrowUp className=\"w-4 h-4 text-text-secondary\" />\n                      </div>\n                    </div>\n                  </CardHeader>\n                  <CardContent className=\"space-y-4\">\n                    <div>\n                      <Label className=\"text-text-primary font-medium mb-3 block\">选择提醒方式</Label>\n                      <RadioGroup\n                        value={reminderSettings[behavior.id]?.type || \"anchor\"}\n                        onValueChange={(value) =>\n                          setReminderSettings((prev) => ({\n                            ...prev,\n                            [behavior.id]: { ...prev[behavior.id], type: value },\n                          }))\n                        }\n                      >\n                        <div className=\"space-y-3\">\n                          <Card className=\"border-brand-secondary bg-blue-50\">\n                            <CardContent className=\"p-3\">\n                              <div className=\"flex items-center space-x-2\">\n                                <RadioGroupItem value=\"anchor\" id={`anchor-${behavior.id}`} />\n                                <Label htmlFor={`anchor-${behavior.id}`} className=\"flex-1 cursor-pointer\">\n                                  <div className=\"flex items-center\">\n                                    <Link className=\"w-4 h-4 mr-2 text-brand-secondary\" />\n                                    <span className=\"font-medium text-text-primary\">自然提醒（推荐）</span>\n                                  </div>\n                                  <p className=\"text-sm text-text-secondary mt-1\">与现有习惯关联，更容易记住</p>\n                                </Label>\n                              </div>\n                            </CardContent>\n                          </Card>\n\n                          <Card className=\"border-surface-divider\">\n                            <CardContent className=\"p-3\">\n                              <div className=\"flex items-center space-x-2\">\n                                <RadioGroupItem value=\"timer\" id={`timer-${behavior.id}`} />\n                                <Label htmlFor={`timer-${behavior.id}`} className=\"flex-1 cursor-pointer\">\n                                  <div className=\"flex items-center\">\n                                    <Clock className=\"w-4 h-4 mr-2 text-text-secondary\" />\n                                    <span className=\"font-medium text-text-primary\">定时提醒</span>\n                                  </div>\n                                  <p className=\"text-sm text-text-secondary mt-1\">设置固定时间提醒</p>\n                                </Label>\n                              </div>\n                            </CardContent>\n                          </Card>\n                        </div>\n                      </RadioGroup>\n                    </div>\n\n                    <div>\n                      {reminderSettings[behavior.id]?.type === \"timer\" ? (\n                        <>\n                          <Label className=\"text-text-primary font-medium\">选择提醒时间</Label>\n                          <Select\n                            onValueChange={(value) =>\n                              setReminderSettings((prev) => ({\n                                ...prev,\n                                [behavior.id]: { ...prev[behavior.id], time: value },\n                              }))\n                            }\n                            value={reminderSettings[behavior.id]?.time}\n                          >\n                            <SelectTrigger className=\"mt-2 border-surface-divider\">\n                              <SelectValue placeholder=\"选择每天的提醒时间\" />\n                            </SelectTrigger>\n                            <SelectContent>\n                              <SelectItem value=\"06:00\">早上 6:00</SelectItem>\n                              <SelectItem value=\"07:00\">早上 7:00</SelectItem>\n                              <SelectItem value=\"08:00\">早上 8:00</SelectItem>\n                              <SelectItem value=\"09:00\">早上 9:00</SelectItem>\n                              <SelectItem value=\"12:00\">中午 12:00</SelectItem>\n                              <SelectItem value=\"18:00\">下午 6:00</SelectItem>\n                              <SelectItem value=\"19:00\">下午 7:00</SelectItem>\n                              <SelectItem value=\"20:00\">下午 8:00</SelectItem>\n                              <SelectItem value=\"21:00\">下午 9:00</SelectItem>\n                              <SelectItem value=\"22:00\">下午 10:00</SelectItem>\n                            </SelectContent>\n                          </Select>\n                        </>\n                      ) : (\n                        <>\n                          <Label className=\"text-text-primary font-medium\">选择锚点习惯</Label>\n                          <Select\n                            onValueChange={(value) =>\n                              setReminderSettings((prev) => ({\n                                ...prev,\n                                [behavior.id]: { ...prev[behavior.id], anchor: value },\n                              }))\n                            }\n                            value={reminderSettings[behavior.id]?.anchor}\n                          >\n                            <SelectTrigger className=\"mt-2 border-surface-divider\">\n                              <SelectValue placeholder=\"选择一个现有的日常习惯\" />\n                            </SelectTrigger>\n                            <SelectContent>\n                              {anchorOptions.map((option) => (\n                                <SelectItem key={option.id} value={option.id}>\n                                  <div>\n                                    <div className=\"font-medium\">{option.label}</div>\n                                    <div className=\"text-sm text-text-secondary\">{option.description}</div>\n                                  </div>\n                                </SelectItem>\n                              ))}\n                            </SelectContent>\n                          </Select>\n                        </>\n                      )}\n                    </div>\n                  </CardContent>\n                </>\n              ) : (\n                // 收起状态 - 简略只读信息\n                <CardContent\n                  className=\"p-4 cursor-pointer hover:bg-gray-50 transition-colors\"\n                  onClick={() => toggleCardExpanded(behavior.id)}\n                >\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex-1\">\n                      <div className=\"flex items-center justify-between mb-2\">\n                        <h4 className=\"font-medium text-text-primary\">{behavior.title}</h4>\n                        <ArrowDown className=\"w-4 h-4 text-text-secondary\" />\n                      </div>\n                      <p className=\"text-sm text-text-secondary mb-2\">{behavior.description}</p>\n                      <div className=\"flex items-center\">\n                        <span className=\"text-xs text-text-secondary mr-2\">提醒方式:</span>\n                        <span\n                          className={`text-xs ${\n                            reminderSettings[behavior.id]?.type ? \"text-brand-primary\" : \"text-brand-accent\"\n                          }`}\n                        >\n                          {getReminderDisplayText(behavior.id)}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                </CardContent>\n              )}\n            </Card>\n          ))}\n      </div>\n\n      <div className=\"flex justify-between pt-4\">\n        <Button variant=\"ghost\" onClick={handlePrevStep} className=\"text-text-secondary\">\n          <ArrowLeft className=\"w-4 h-4 mr-2\" />\n          上一步\n        </Button>\n        <Button onClick={handleNextStep} className=\"bg-brand-accent hover:bg-brand-accent/80 text-white\">\n          <Check className=\"w-4 h-4 mr-2\" />\n          完成创建\n        </Button>\n      </div>\n    </div>\n  )\n\n  const renderStep4 = () => (\n    <div className=\"space-y-6\">\n      {/* 成功标识 */}\n      <div className=\"text-center mb-6\">\n        <div className=\"relative mx-auto w-16 h-16 mb-4\">\n          <div className=\"absolute inset-0 bg-brand-primary rounded-full flex items-center justify-center\">\n            <Check className=\"w-8 h-8 text-white\" />\n          </div>\n          <div className=\"absolute -top-2 -right-2\">\n            <Sparkles className=\"w-6 h-6 text-brand-accent\" />\n          </div>\n        </div>\n\n        <h1 className=\"text-xl font-bold text-text-primary mb-1\">🎉 太棒了！</h1>\n        <p className=\"text-text-secondary mb-1\">你的新习惯已经创建成功</p>\n        <p className=\"text-sm text-brand-secondary flex items-center justify-center\">\n          <Heart className=\"w-4 h-4 mr-1\" />\n          每一个小行动都是改变的开始\n        </p>\n      </div>\n\n      {/* 习惯信息和微行为计划合并卡片 */}\n      <Card className=\"border-brand-primary border-2 mb-6 bg-gradient-to-br from-white to-surface-main\">\n        <CardHeader className=\"pb-3\">\n          <div className=\"flex items-center mb-2\">\n            <Target className=\"w-5 h-5 text-brand-primary mr-2\" />\n            <CardTitle className=\"text-lg text-text-primary\">你的新习惯</CardTitle>\n          </div>\n          <div>\n            <h3 className=\"font-bold text-text-primary text-lg mb-2\">{habitName}</h3>\n            {habitDescription && <p className=\"text-text-secondary text-sm leading-relaxed mb-4\">{habitDescription}</p>}\n          </div>\n\n          <div className=\"flex items-center mt-4 mb-2\">\n            <Sparkles className=\"w-5 h-5 mr-2 text-brand-accent\" />\n            <h2 className=\"text-lg font-bold text-text-primary\">你的微行动计划</h2>\n          </div>\n        </CardHeader>\n\n        <CardContent className=\"pt-0 space-y-2\">\n          {selectedMicroBehaviors\n            .filter((behavior) => behavior.selected)\n            .map((behavior, index) => (\n              <div key={behavior.id} className=\"bg-gray-50/80 rounded-lg p-2.5\">\n                <div className=\"flex items-start space-x-2.5\">\n                  <div className=\"flex-shrink-0 w-4 h-4 bg-brand-primary rounded-full flex items-center justify-center text-white text-xs font-medium\">\n                    {index + 1}\n                  </div>\n                  <div className=\"flex-1\">\n                    <h4 className=\"font-medium text-text-primary mb-1 text-sm\">{behavior.title}</h4>\n                    <p className=\"text-xs text-text-secondary mb-1.5\">{behavior.description}</p>\n\n                    <div className=\"flex items-center text-xs\">\n                      <span className=\"text-text-secondary mr-1.5\">📅 提醒方式:</span>\n                      <span className=\"text-brand-primary font-medium\">{getReminderText(behavior.id)}</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n        </CardContent>\n      </Card>\n\n      {/* 鼓励文案 */}\n      <Card className=\"border-brand-accent bg-gradient-to-r from-brand-accent/10 to-brand-primary/10 mb-6\">\n        <CardContent className=\"p-3 text-center\">\n          <p className=\"text-text-primary font-medium mb-2 text-sm\">✨ 记住福格行为模型的秘诀</p>\n          <p className=\"text-sm text-text-secondary leading-relaxed\">\n            从小事开始，利用现有习惯作为提醒，持续的小行动会带来巨大的改变！\n          </p>\n        </CardContent>\n      </Card>\n\n      {/* 完成按钮 */}\n      <Button\n        onClick={handleComplete}\n        className=\"w-full bg-brand-primary hover:bg-brand-primary/80 text-white py-2 text-lg font-medium\"\n      >\n        开始我的习惯之旅 🚀\n      </Button>\n\n      {/* 底部提示 */}\n      <p className=\"text-center text-xs text-text-secondary mt-4\">你可以随时在习惯列表中查看和调整你的微行为</p>\n    </div>\n  )\n\n  return (\n    <div className=\"min-h-screen bg-surface-main p-4\">\n      <div className=\"max-w-md mx-auto\">\n        {/* 进度指示器 - 只在前3步显示 */}\n        {currentStep <= 3 && (\n          <div className=\"flex justify-center mb-6\">\n            <div className=\"flex items-center space-x-2\">\n              {[1, 2, 3].map((step) => (\n                <div key={step} className=\"flex items-center\">\n                  <div\n                    className={`w-8 h-8 rounded-full flex items-center justify-center text-sm font-medium ${\n                      step <= currentStep ? \"bg-brand-primary text-white\" : \"bg-surface-divider text-text-secondary\"\n                    }`}\n                  >\n                    {step < currentStep ? <Check className=\"w-4 h-4\" /> : step}\n                  </div>\n                  {step < 3 && <div className={`w-8 h-0.5 ${step < currentStep ? \"bg-brand-primary\" : \"bg-surface-divider\"}`} />}\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* 步骤内容 */}\n        {currentStep <= 3 ? (\n          <Card className=\"border-surface-divider shadow-sm\">\n            <CardContent className=\"p-6\">\n              {currentStep === 1 && renderStep1()}\n              {currentStep === 2 && isLoadingRecommendations && renderLoadingStep2()}\n              {currentStep === 2 && !isLoadingRecommendations && renderStep2()}\n              {currentStep === 3 && renderStep3()}\n            </CardContent>\n          </Card>\n        ) : (\n          // 第4步不需要卡片包装，直接渲染内容\n          renderStep4()\n        )}\n        <Toaster />\n      </div>\n    </div>\n  )\n}",
            "docs/architecture.md": "# Habit Map 项目架构文档\n\n## 项目概述\n\nHabit Map 是一个基于福格行为模型（Fogg Behavior Model）的习惯养成应用，帮助用户通过微行为的方式建立和维持良好的习惯。项目采用现代化的 Web 技术栈，提供直观易用的用户界面和流畅的用户体验。\n\n## 技术选型\n\n### 核心框架与平台\n- **Next.js 15** - React 全栈框架，采用 App Router 架构\n- **React 19** - 用户界面构建库\n- **TypeScript** - 类型安全的 JavaScript 超集\n- **Node.js** - 服务端运行时环境\n\n### UI 组件库与样式\n- **shadcn/ui** - 基于 Radix UI 的组件库，提供无障碍访问支持\n- **Radix UI** - 底层原语组件库，包含 28+ 组件\n- **Tailwind CSS 3** - 实用工具优先的 CSS 框架\n- **Lucide React** - 现代化图标库\n- **CVA (Class Variance Authority)** - 组件样式变体管理\n- **next-themes** - 主题切换支持\n\n### 表单处理与验证\n- **React Hook Form** - 高性能表单库\n- **Zod** - TypeScript 优先的模式验证库\n- **@hookform/resolvers** - Hook Form 与 Zod 集成\n\n### 用户体验增强\n- **Sonner** - Toast 通知组件\n- **Embla Carousel** - 轮播图组件\n- **Recharts** - 图表可视化库\n- **React Day Picker** - 日期选择器\n- **React Resizable Panels** - 可调整大小的面板\n\n### 工具库\n- **date-fns** - 日期处理工具库\n- **clsx & tailwind-merge** - CSS 类名处理\n- **cmdk** - 命令面板组件\n\n## 架构设计\n\n### 整体架构模式\n\n项目采用 **前端单页应用 (SPA)** 架构，基于 Next.js App Router 的文件系统路由，遵循 **组件化开发** 和 **分层架构** 原则。\n\n### 目录结构与模块划分\n\n```\nhabit-map/\n├── app/                    # Next.js App Router 页面\n│   ├── layout.tsx         # 根布局组件\n│   ├── globals.css        # 全局样式\n│   └── habits/            # 习惯相关页面\n│       └── add/           # 添加习惯页面\n├── components/            # 可复用组件\n│   ├── ui/               # shadcn/ui 组件库\n│   └── theme-provider.tsx # 主题提供者\n├── hooks/                # 自定义 React Hooks\n│   ├── use-mobile.tsx    # 移动端检测\n│   └── use-toast.ts      # Toast 通知\n├── lib/                  # 工具函数库\n│   └── utils.ts          # 通用工具函数\n├── public/               # 静态资源\n└── docs/                 # 项目文档\n```\n\n## 核心模块说明\n\n### 1. 路由模块 (App Router)\n- **位置**: `app/` 目录\n- **架构**: 基于文件系统的路由\n- **特点**: \n  - 支持嵌套布局\n  - 服务端组件优先\n  - 自动代码分割\n\n### 2. 组件系统\n#### 2.1 基础组件库 (`components/ui/`)\n- **设计系统**: 基于 shadcn/ui 设计规范\n- **组件数量**: 48+ 个可复用组件\n- **特点**:\n  - 无障碍访问支持 (a11y)\n  - 完全类型安全\n  - 主题化支持\n  - 响应式设计\n\n#### 2.2 业务组件 (`components/`)\n- **主题管理**: `theme-provider.tsx` 提供深浅主题切换\n- **布局组件**: 页面级布局组件\n\n### 3. 状态管理模块\n- **本地状态**: React useState/useReducer\n- **表单状态**: React Hook Form\n- **主题状态**: next-themes\n- **特点**: 去中心化状态管理，避免过度复杂性\n\n### 4. 工具与配置模块 (`lib/`)\n- **样式工具**: clsx + tailwind-merge 集成\n- **类型定义**: TypeScript 类型声明\n- **配置文件**: \n  - `tailwind.config.ts` - 样式系统配置\n  - `components.json` - shadcn/ui 配置\n  - `next.config.mjs` - Next.js 配置\n\n### 5. 样式系统\n- **CSS 框架**: Tailwind CSS\n- **设计令牌**: CSS 变量驱动的设计系统\n- **主题支持**: 明暗主题切换\n- **颜色系统**:\n  - Primary: `#69B578` (绿色 - 成长与健康)\n  - Secondary: `#81ACDA` (蓝色 - 平静与专注)\n  - Accent: `#E5B061` (黄色 - 活力与动机)\n\n## 核心功能架构\n\n### 习惯创建流程\n基于多步骤表单的设计模式：\n\n1. **步骤1 - 习惯定义**\n   - 习惯名称和描述输入\n   - 表单验证和状态管理\n\n2. **步骤2 - 微行为选择**\n   - 推荐算法模拟\n   - 多选交互设计\n   - 选择限制逻辑\n\n3. **步骤3 - 提醒设置**\n   - 自然提醒（锚点习惯）\n   - 定时提醒\n   - 动态表单配置\n\n4. **步骤4 - 完成确认**\n   - 习惯总结展示\n   - 成功反馈设计\n\n## 性能优化策略\n\n### 1. 构建优化\n- **代码分割**: Next.js 自动代码分割\n- **Tree Shaking**: 只打包使用的代码\n- **静态生成**: 适当页面使用 SSG\n\n### 2. 运行时优化\n- **组件懒加载**: React.lazy + Suspense\n- **状态优化**: 避免不必要的重渲染\n- **图标优化**: 按需导入 Lucide 图标\n\n### 3. 样式优化\n- **CSS 优化**: Tailwind CSS JIT 编译\n- **字体优化**: Next.js 字体优化\n- **主题缓存**: localStorage 主题持久化\n\n## 可维护性设计\n\n### 1. 代码组织\n- **模块化**: 按功能模块组织代码\n- **组件复用**: 统一的组件设计系统\n- **类型安全**: 完整的 TypeScript 类型覆盖\n\n### 2. 开发体验\n- **配置标准化**: ESLint + Prettier 代码规范\n- **路径别名**: `@/` 别名简化导入路径\n- **组件文档**: 内联类型文档\n\n### 3. 扩展性考虑\n- **组件库**: 易于扩展的组件系统\n- **主题系统**: 可配置的设计令牌\n- **国际化预留**: 组件结构支持多语言\n\n## 部署与环境\n\n### 开发环境\n- **包管理**: pnpm (高效的包管理器)\n- **开发服务器**: Next.js dev server\n- **热重载**: 快速开发反馈\n\n### 生产环境\n- **构建**: Next.js build 静态优化\n- **部署**: 支持 Vercel、Netlify 等平台\n- **CDN**: 静态资源 CDN 加速",
            "tailwind.config.ts": "import type { Config } from \"tailwindcss\"\n\nconst config: Config = {\n  darkMode: [\"class\"],\n  content: [\n    \"./pages/**/*.{ts,tsx}\",\n    \"./components/**/*.{ts,tsx}\",\n    \"./app/**/*.{ts,tsx}\",\n    \"./src/**/*.{ts,tsx}\",\n    \"*.{js,ts,jsx,tsx,mdx}\",\n  ],\n  prefix: \"\",\n  theme: {\n    container: {\n      center: true,\n      padding: \"2rem\",\n      screens: {\n        \"2xl\": \"1400px\",\n      },\n    },\n    extend: {\n      colors: {\n        border: \"hsl(var(--border))\",\n        input: \"hsl(var(--input))\",\n        ring: \"hsl(var(--ring))\",\n        background: \"hsl(var(--background))\",\n        foreground: \"hsl(var(--foreground))\",\n        primary: {\n          DEFAULT: \"hsl(var(--primary))\",\n          foreground: \"hsl(var(--primary-foreground))\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary))\",\n          foreground: \"hsl(var(--secondary-foreground))\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive))\",\n          foreground: \"hsl(var(--destructive-foreground))\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted))\",\n          foreground: \"hsl(var(--muted-foreground))\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent))\",\n          foreground: \"hsl(var(--accent-foreground))\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover))\",\n          foreground: \"hsl(var(--popover-foreground))\",\n        },\n        card: {\n          DEFAULT: \"hsl(var(--card))\",\n          foreground: \"hsl(var(--card-foreground))\",\n        },\n        brand: {\n          primary: \"hsl(var(--brand-primary))\",\n          accent: \"hsl(var(--brand-accent))\",\n          secondary: \"hsl(var(--brand-secondary))\",\n        },\n        text: {\n          primary: \"hsl(var(--text-primary))\",\n          secondary: \"hsl(var(--text-secondary))\",\n        },\n        surface: {\n          main: \"hsl(var(--surface-main))\",\n          divider: \"hsl(var(--surface-divider))\",\n        },\n      },\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: \"0\" },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: \"0\" },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\")],\n} satisfies Config\n\nexport default config"
        },
        "deleted_files": [
            "styles/globals.css"
        ]
    },
    {
        "commit_message": "restore version 16: completeAdd, with brand color",
        "added_files": {
            "app/habits/completeAdd/page.tsx": "\"use client\"\n\nimport { useEffect, useState } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Check, Sparkles, Heart, Target } from \"lucide-react\"\n\ninterface MicroBehavior {\n  id: string\n  title: string\n  description: string\n  selected: boolean\n}\n\ninterface HabitData {\n  habitName: string\n  habitDescription: string\n  selectedMicroBehaviors: MicroBehavior[]\n  reminderSettings: { [key: string]: any }\n}\n\nexport default function CompleteAddPage() {\n  const [habitData, setHabitData] = useState<HabitData | null>(null)\n\n  const anchorOptions = [\n    { id: \"morning-brush\", label: \"早上刷牙后\", description: \"利用晨间例行公事\" },\n    { id: \"coffee\", label: \"喝咖啡/茶时\", description: \"与日常饮品习惯结合\" },\n    { id: \"lunch-break\", label: \"午休时间\", description: \"利用工作间隙\" },\n    { id: \"before-sleep\", label: \"睡前\", description: \"作为放松活动\" },\n    { id: \"commute\", label: \"通勤路上\", description: \"利用交通时间\" },\n  ]\n\n  useEffect(() => {\n    // 从 localStorage 获取数据\n    const storedData = localStorage.getItem(\"newHabitData\")\n    if (storedData) {\n      setHabitData(JSON.parse(storedData))\n    }\n  }, [])\n\n  const getReminderText = (behaviorId: string) => {\n    if (!habitData) return \"\"\n\n    const setting = habitData.reminderSettings[behaviorId]\n    if (!setting || !setting.type) {\n      return \"未设置提醒\"\n    }\n\n    if (setting.type === \"anchor\") {\n      if (setting.anchor) {\n        const anchorOption = anchorOptions.find((option) => option.id === setting.anchor)\n        return `${anchorOption?.label || \"未知锚点\"}`\n      }\n      return \"自然提醒（未选择锚点）\"\n    } else if (setting.type === \"timer\") {\n      if (setting.time) {\n        return `每天 ${setting.time}`\n      }\n      return \"定时提醒（未选择时间）\"\n    }\n\n    return \"未设置提醒\"\n  }\n\n  const handleComplete = () => {\n    // 清除临时数据\n    localStorage.removeItem(\"newHabitData\")\n    // 导航到习惯列表页或今日行动页\n    window.location.href = \"/habits\"\n  }\n\n  if (!habitData) {\n    return (\n      <div className=\"min-h-screen bg-surface-main flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-brand-primary mx-auto\"></div>\n          <p className=\"text-text-secondary mt-4\">加载中...</p>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"min-h-screen bg-surface-main p-4\">\n      <div className=\"max-w-md mx-auto\">\n        {/* 成功标识 */}\n        <div className=\"text-center mb-6\">\n          <div className=\"relative mx-auto w-16 h-16 mb-4\">\n            <div className=\"absolute inset-0 bg-brand-primary rounded-full flex items-center justify-center\">\n              <Check className=\"w-8 h-8 text-white\" />\n            </div>\n            <div className=\"absolute -top-2 -right-2\">\n              <Sparkles className=\"w-6 h-6 text-brand-accent\" />\n            </div>\n          </div>\n\n          <h1 className=\"text-xl font-bold text-text-primary mb-1\">🎉 太棒了！</h1>\n          <p className=\"text-text-secondary mb-1\">你的新习惯已经创建成功</p>\n          <p className=\"text-sm text-brand-secondary flex items-center justify-center\">\n            <Heart className=\"w-4 h-4 mr-1\" />\n            每一个小行动都是改变的开始\n          </p>\n        </div>\n\n        {/* 习惯信息和微行为计划合并卡片 */}\n        <Card className=\"border-brand-primary border-2 mb-6 bg-gradient-to-br from-white to-surface-main\">\n          <CardHeader className=\"pb-3\">\n            <div className=\"flex items-center mb-2\">\n              <Target className=\"w-5 h-5 text-brand-primary mr-2\" />\n              <CardTitle className=\"text-lg text-text-primary\">你的新习惯</CardTitle>\n            </div>\n            <div>\n              <h3 className=\"font-bold text-text-primary text-lg mb-2\">{habitData.habitName}</h3>\n              {habitData.habitDescription && (\n                <p className=\"text-text-secondary text-sm leading-relaxed mb-4\">{habitData.habitDescription}</p>\n              )}\n            </div>\n\n            <div className=\"flex items-center mt-4 mb-2\">\n              <Sparkles className=\"w-5 h-5 mr-2 text-brand-accent\" />\n              <h2 className=\"text-lg font-bold text-text-primary\">你的微行动计划</h2>\n            </div>\n          </CardHeader>\n\n          <CardContent className=\"pt-0 space-y-2\">\n            {habitData.selectedMicroBehaviors.map((behavior, index) => (\n              <div key={behavior.id} className=\"bg-gray-50/80 rounded-lg p-2.5\">\n                <div className=\"flex items-start space-x-2.5\">\n                  <div className=\"flex-shrink-0 w-4 h-4 bg-brand-primary rounded-full flex items-center justify-center text-white text-xs font-medium\">\n                    {index + 1}\n                  </div>\n                  <div className=\"flex-1\">\n                    <h4 className=\"font-medium text-text-primary mb-1 text-sm\">{behavior.title}</h4>\n                    <p className=\"text-xs text-text-secondary mb-1.5\">{behavior.description}</p>\n\n                    <div className=\"flex items-center text-xs\">\n                      <span className=\"text-text-secondary mr-1.5\">📅 提醒方式:</span>\n                      <span className=\"text-brand-primary font-medium\">{getReminderText(behavior.id)}</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </CardContent>\n        </Card>\n\n        {/* 鼓励文案 */}\n        <Card className=\"border-brand-accent bg-gradient-to-r from-brand-accent/10 to-brand-primary/10 mb-6\">\n          <CardContent className=\"p-3 text-center\">\n            <p className=\"text-text-primary font-medium mb-2 text-sm\">✨ 记住福格行为模型的秘诀</p>\n            <p className=\"text-sm text-text-secondary leading-relaxed\">\n              从小事开始，利用现有习惯作为提醒，持续的小行动会带来巨大的改变！\n            </p>\n          </CardContent>\n        </Card>\n\n        {/* 完成按钮 */}\n        <Button\n          onClick={handleComplete}\n          className=\"w-full bg-brand-primary hover:bg-brand-primary/80 text-white py-2 text-lg font-medium\"\n        >\n          开始我的习惯之旅 🚀\n        </Button>\n\n        {/* 底部提示 */}\n        <p className=\"text-center text-xs text-text-secondary mt-4\">你可以随时在习惯列表中查看和调整你的微行为</p>\n      </div>\n    </div>\n  )\n}"
        },
        "modified_files": {
            "app/habits/add/page.tsx": "\"use client\"\n\nimport { useState } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Checkbox } from \"@/components/ui/checkbox\"\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\"\nimport { Label } from \"@/components/ui/label\"\nimport { ArrowLeft, ArrowRight, Check, Clock, Link, ArrowUp, ArrowDown } from \"lucide-react\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { useToast } from \"@/hooks/use-toast\"\nimport { Toaster } from \"@/components/ui/toaster\"\n\ninterface MicroBehavior {\n  id: string\n  title: string\n  description: string\n  selected: boolean\n}\n\ninterface AnchorOption {\n  id: string\n  label: string\n  description: string\n}\n\nexport default function AddHabitPage() {\n  const [currentStep, setCurrentStep] = useState(1)\n  const [habitName, setHabitName] = useState(\"\")\n  const [habitDescription, setHabitDescription] = useState(\"\")\n  const [selectedMicroBehaviors, setSelectedMicroBehaviors] = useState<MicroBehavior[]>([])\n  const [reminderSettings, setReminderSettings] = useState<{ [key: string]: any }>({})\n  const { toast } = useToast()\n  const [expandedCards, setExpandedCards] = useState<{ [key: string]: boolean }>({})\n  const [isLoadingRecommendations, setIsLoadingRecommendations] = useState(false)\n\n  // 模拟推荐的微行为\n  const recommendedMicroBehaviors: MicroBehavior[] = [\n    {\n      id: \"1\",\n      title: \"打开书本\",\n      description: \"每天只需要打开一本书，翻到任意一页\",\n      selected: false,\n    },\n    {\n      id: \"2\",\n      title: \"阅读一段话\",\n      description: \"读完一个段落就算完成\",\n      selected: false,\n    },\n    {\n      id: \"3\",\n      title: \"阅读2分钟\",\n      description: \"设置计时器，专注阅读2分钟\",\n      selected: false,\n    },\n    {\n      id: \"4\",\n      title: \"准备阅读环境\",\n      description: \"找一个安静的地方，准备好书本和水杯\",\n      selected: false,\n    },\n    {\n      id: \"5\",\n      title: \"记录一个想法\",\n      description: \"阅读后写下一句话的感受或想法\",\n      selected: false,\n    },\n    {\n      id: \"6\",\n      title: \"朗读一句话\",\n      description: \"大声朗读书中的任意一句话\",\n      selected: false,\n    },\n    {\n      id: \"7\",\n      title: \"标记一个重点\",\n      description: \"用笔或便签标记一个有趣的内容\",\n      selected: false,\n    },\n    {\n      id: \"8\",\n      title: \"翻阅目录\",\n      description: \"浏览书本目录，选择感兴趣的章节\",\n      selected: false,\n    },\n    {\n      id: \"9\",\n      title: \"设置阅读提醒\",\n      description: \"在手机上设置明天的阅读提醒\",\n      selected: false,\n    },\n    {\n      id: \"10\",\n      title: \"分享阅读计划\",\n      description: \"告诉朋友或家人你今天的阅读计划\",\n      selected: false,\n    },\n  ]\n\n  const anchorOptions: AnchorOption[] = [\n    { id: \"morning-brush\", label: \"早上刷牙后\", description: \"利用晨间例行公事\" },\n    { id: \"coffee\", label: \"喝咖啡/茶时\", description: \"与日常饮品习惯结合\" },\n    { id: \"lunch-break\", label: \"午休时间\", description: \"利用工作间隙\" },\n    { id: \"before-sleep\", label: \"睡前\", description: \"作为放松活动\" },\n    { id: \"commute\", label: \"通勤路上\", description: \"利用交通时间\" },\n  ]\n\n  const handleMicroBehaviorToggle = (behaviorId: string) => {\n    const selectedCount = selectedMicroBehaviors.filter((b) => b.selected).length\n    const behavior = selectedMicroBehaviors.find((b) => b.id === behaviorId)\n\n    // 如果要选择第4个，显示toast提示\n    if (!behavior?.selected && selectedCount >= 3) {\n      toast({\n        title: \"选择数量已达上限\",\n        description: \"最多只能选择3个微行为，请先取消其他选择。\",\n        variant: \"destructive\",\n      })\n      return\n    }\n\n    setSelectedMicroBehaviors((prev) =>\n      prev.map((behavior) => (behavior.id === behaviorId ? { ...behavior, selected: !behavior.selected } : behavior)),\n    )\n  }\n\n  const initializeMicroBehaviors = () => {\n    if (selectedMicroBehaviors.length === 0) {\n      setSelectedMicroBehaviors(recommendedMicroBehaviors)\n      // 初始化所有选中的微行为卡片为展开状态\n      const initialExpandedState: { [key: string]: boolean } = {}\n      recommendedMicroBehaviors.forEach((behavior) => {\n        if (behavior.selected) {\n          initialExpandedState[behavior.id] = true\n        }\n      })\n      setExpandedCards(initialExpandedState)\n    }\n  }\n\n  const handleNextStep = async () => {\n    if (currentStep === 1) {\n      setIsLoadingRecommendations(true)\n      setCurrentStep(2)\n      // 模拟系统推荐微行为的等待时间\n      await new Promise((resolve) => setTimeout(resolve, 2000))\n      initializeMicroBehaviors()\n      setIsLoadingRecommendations(false)\n    } else if (currentStep === 2) {\n      const selectedCount = selectedMicroBehaviors.filter((b) => b.selected).length\n      if (selectedCount === 0) {\n        toast({\n          title: \"请选择微行为\",\n          description: \"至少需要选择1个微行为才能继续。\",\n          variant: \"destructive\",\n        })\n        return\n      }\n      // 为选中的微行为初始化展开状态和默认提醒设置\n      const initialExpandedState: { [key: string]: boolean } = {}\n      const initialReminderSettings: { [key: string]: any } = { ...reminderSettings }\n\n      selectedMicroBehaviors\n        .filter((b) => b.selected)\n        .forEach((behavior) => {\n          initialExpandedState[behavior.id] = true\n          // 如果该微行为还没有提醒设置，初始化为默认的自然提醒\n          if (!initialReminderSettings[behavior.id]) {\n            initialReminderSettings[behavior.id] = { type: \"anchor\" }\n          }\n        })\n\n      setExpandedCards(initialExpandedState)\n      setReminderSettings(initialReminderSettings)\n      setCurrentStep(3)\n    }\n  }\n\n  const handlePrevStep = () => {\n    setCurrentStep((prev) => Math.max(prev - 1, 1))\n  }\n\n  const handleComplete = () => {\n    // 这里处理完成创建的逻辑\n    const habitData = {\n      habitName,\n      habitDescription,\n      selectedMicroBehaviors: selectedMicroBehaviors.filter((b) => b.selected),\n      reminderSettings,\n    }\n\n    console.log(\"创建习惯:\", habitData)\n\n    // 将数据存储到 localStorage 或通过其他方式传递给下一个页面\n    localStorage.setItem(\"newHabitData\", JSON.stringify(habitData))\n\n    // 导航到完成页面\n    window.location.href = \"/habits/completeAdd\"\n  }\n\n  const toggleCardExpanded = (behaviorId: string) => {\n    setExpandedCards((prev) => ({\n      ...prev,\n      [behaviorId]: !prev[behaviorId],\n    }))\n  }\n\n  const renderStep1 = () => (\n    <div className=\"space-y-6\">\n      <div className=\"text-center mb-6\">\n        <h1 className=\"text-xl font-bold text-text-primary mb-2\">创建新习惯</h1>\n        <p className=\"text-sm text-text-secondary\">第1步：定义你的习惯</p>\n      </div>\n\n      <div className=\"space-y-4\">\n        <div>\n          <Label htmlFor=\"habit-name\" className=\"text-text-primary font-medium\">\n            习惯名称\n          </Label>\n          <Input\n            id=\"habit-name\"\n            value={habitName}\n            onChange={(e) => setHabitName(e.target.value)}\n            placeholder=\"我想养成的好习惯是...\"\n            className=\"mt-2 border-surface-divider focus:border-brand-primary\"\n          />\n        </div>\n\n        <div>\n          <Label htmlFor=\"habit-description\" className=\"text-text-primary font-medium\">\n            习惯描述 (可选)\n          </Label>\n          <Textarea\n            id=\"habit-description\"\n            value={habitDescription}\n            onChange={(e) => setHabitDescription(e.target.value)}\n            placeholder=\"我为什么想养成这个习惯？它对我有什么意义？\"\n            className=\"mt-2 border-surface-divider focus:border-brand-primary min-h-[100px]\"\n          />\n        </div>\n      </div>\n\n      <div className=\"flex justify-between pt-4\">\n        <Button variant=\"ghost\" className=\"text-text-secondary\" onClick={() => window.history.back()}>\n          <ArrowLeft className=\"w-4 h-4 mr-2\" />\n          取消\n        </Button>\n        <Button\n          onClick={handleNextStep}\n          disabled={!habitName.trim()}\n          className=\"bg-brand-primary hover:bg-brand-primary/80 text-white\"\n        >\n          下一步\n          <ArrowRight className=\"w-4 h-4 ml-2\" />\n        </Button>\n      </div>\n    </div>\n  )\n\n  const renderLoadingStep2 = () => (\n    <div className=\"space-y-6\">\n      <div className=\"text-center mb-6\">\n        <h1 className=\"text-xl font-bold text-text-primary mb-2\">创建新习惯</h1>\n        <p className=\"text-sm text-text-secondary\">第2步：设计你的微行动</p>\n      </div>\n\n      <Card className=\"border-surface-divider bg-surface-main\">\n        <CardContent className=\"p-4\">\n          <p className=\"text-sm text-text-secondary\">习惯：</p>\n          <p className=\"font-medium text-text-primary\">{habitName}</p>\n        </CardContent>\n      </Card>\n\n      <div className=\"flex flex-col items-center justify-center py-16\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-brand-primary mb-6\"></div>\n        <h3 className=\"text-lg font-medium text-text-primary mb-2\">正在为您推荐微行为...</h3>\n        <p className=\"text-sm text-text-secondary text-center leading-relaxed\">\n          基于您的习惯目标，我们正在分析并推荐\n          <br />\n          最适合的微行为组合\n        </p>\n      </div>\n    </div>\n  )\n\n  const renderStep2 = () => (\n    <div className=\"space-y-6\">\n      <div className=\"text-center mb-6\">\n        <h1 className=\"text-xl font-bold text-text-primary mb-2\">创建新习惯</h1>\n        <p className=\"text-sm text-text-secondary\">第2步：设计你的微行动</p>\n      </div>\n\n      <Card className=\"border-surface-divider bg-surface-main\">\n        <CardContent className=\"p-4\">\n          <p className=\"text-sm text-text-secondary\">习惯：</p>\n          <p className=\"font-medium text-text-primary\">{habitName}</p>\n        </CardContent>\n      </Card>\n\n      <div>\n        <div className=\"flex justify-between items-center mb-4\">\n          <h3 className=\"font-medium text-text-primary\">推荐的微行为</h3>\n          <span className=\"text-sm text-text-secondary\">\n            已选择 {selectedMicroBehaviors.filter((b) => b.selected).length}/3\n          </span>\n        </div>\n        <p className=\"text-sm text-text-secondary mb-4\">选择1-3个简单易行的微行为，让习惯更容易坚持</p>\n\n        <div className=\"space-y-3\">\n          {selectedMicroBehaviors.map((behavior) => (\n            <Card key={behavior.id} className=\"border-surface-divider\">\n              <CardContent\n                className=\"p-4 cursor-pointer hover:bg-gray-50 transition-colors\"\n                onClick={() => handleMicroBehaviorToggle(behavior.id)}\n              >\n                <div className=\"flex items-start space-x-3\">\n                  <Checkbox\n                    id={behavior.id}\n                    checked={behavior.selected}\n                    onCheckedChange={() => handleMicroBehaviorToggle(behavior.id)}\n                    className=\"mt-1 pointer-events-none\"\n                  />\n                  <div className=\"flex-1\">\n                    <Label\n                      htmlFor={behavior.id}\n                      className=\"font-medium cursor-pointer text-text-primary pointer-events-none\"\n                    >\n                      {behavior.title}\n                    </Label>\n                    <p className=\"text-sm text-text-secondary mt-1 pointer-events-none\">{behavior.description}</p>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"flex justify-between pt-4\">\n        <Button variant=\"ghost\" onClick={handlePrevStep} className=\"text-text-secondary\">\n          <ArrowLeft className=\"w-4 h-4 mr-2\" />\n          上一步\n        </Button>\n        <Button onClick={handleNextStep} className=\"bg-brand-primary hover:bg-brand-primary/80 text-white\">\n          下一步\n          <ArrowRight className=\"w-4 h-4 ml-2\" />\n        </Button>\n      </div>\n    </div>\n  )\n\n  const getReminderDisplayText = (behaviorId: string) => {\n    const setting = reminderSettings[behaviorId]\n    if (!setting || !setting.type) {\n      return \"需要设置提醒方式\"\n    }\n\n    if (setting.type === \"anchor\") {\n      if (setting.anchor) {\n        const anchorOption = anchorOptions.find((option) => option.id === setting.anchor)\n        return `自然提醒：${anchorOption?.label || \"未选择锚点\"}`\n      }\n      return \"自然提醒（未选择锚点）\"\n    } else if (setting.type === \"timer\") {\n      if (setting.time) {\n        return `定时提醒：${setting.time}`\n      }\n      return \"定时提醒（未选择时间）\"\n    }\n\n    return \"需要设置提醒方式\"\n  }\n\n  const renderStep3 = () => (\n    <div className=\"space-y-6\">\n      <div className=\"text-center mb-6\">\n        <h1 className=\"text-xl font-bold text-text-primary mb-2\">创建新习惯</h1>\n        <p className=\"text-sm text-text-secondary\">第3步：设置提醒</p>\n      </div>\n\n      <div className=\"space-y-6\">\n        {selectedMicroBehaviors\n          .filter((behavior) => behavior.selected)\n          .map((behavior) => (\n            <Card key={behavior.id} className=\"border-surface-divider\">\n              {expandedCards[behavior.id] ? (\n                // 展开状态 - 完整编辑界面\n                <>\n                  <CardHeader\n                    className=\"pb-3 cursor-pointer hover:bg-gray-50 transition-colors\"\n                    onClick={() => toggleCardExpanded(behavior.id)}\n                  >\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex-1\">\n                        <CardTitle className=\"text-base text-text-primary\">{behavior.title}</CardTitle>\n                        <p className=\"text-sm text-text-secondary\">{behavior.description}</p>\n                      </div>\n                      <div className=\"ml-2\">\n                        <ArrowUp className=\"w-4 h-4 text-text-secondary\" />\n                      </div>\n                    </div>\n                  </CardHeader>\n                  <CardContent className=\"space-y-4\">\n                    <div>\n                      <Label className=\"text-text-primary font-medium mb-3 block\">选择提醒方式</Label>\n                      <RadioGroup\n                        value={reminderSettings[behavior.id]?.type || \"anchor\"}\n                        onValueChange={(value) =>\n                          setReminderSettings((prev) => ({\n                            ...prev,\n                            [behavior.id]: { ...prev[behavior.id], type: value },\n                          }))\n                        }\n                      >\n                        <div className=\"space-y-3\">\n                          <Card className=\"border-brand-secondary bg-blue-50\">\n                            <CardContent className=\"p-3\">\n                              <div className=\"flex items-center space-x-2\">\n                                <RadioGroupItem value=\"anchor\" id={`anchor-${behavior.id}`} />\n                                <Label htmlFor={`anchor-${behavior.id}`} className=\"flex-1 cursor-pointer\">\n                                  <div className=\"flex items-center\">\n                                    <Link className=\"w-4 h-4 mr-2 text-brand-secondary\" />\n                                    <span className=\"font-medium text-text-primary\">自然提醒（推荐）</span>\n                                  </div>\n                                  <p className=\"text-sm text-text-secondary mt-1\">与现有习惯关联，更容易记住</p>\n                                </Label>\n                              </div>\n                            </CardContent>\n                          </Card>\n\n                          <Card className=\"border-surface-divider\">\n                            <CardContent className=\"p-3\">\n                              <div className=\"flex items-center space-x-2\">\n                                <RadioGroupItem value=\"timer\" id={`timer-${behavior.id}`} />\n                                <Label htmlFor={`timer-${behavior.id}`} className=\"flex-1 cursor-pointer\">\n                                  <div className=\"flex items-center\">\n                                    <Clock className=\"w-4 h-4 mr-2 text-text-secondary\" />\n                                    <span className=\"font-medium text-text-primary\">定时提醒</span>\n                                  </div>\n                                  <p className=\"text-sm text-text-secondary mt-1\">设置固定时间提醒</p>\n                                </Label>\n                              </div>\n                            </CardContent>\n                          </Card>\n                        </div>\n                      </RadioGroup>\n                    </div>\n\n                    <div>\n                      {reminderSettings[behavior.id]?.type === \"timer\" ? (\n                        <>\n                          <Label className=\"text-text-primary font-medium\">选择提醒时间</Label>\n                          <Select\n                            onValueChange={(value) =>\n                              setReminderSettings((prev) => ({\n                                ...prev,\n                                [behavior.id]: { ...prev[behavior.id], time: value },\n                              }))\n                            }\n                            value={reminderSettings[behavior.id]?.time}\n                          >\n                            <SelectTrigger className=\"mt-2 border-surface-divider\">\n                              <SelectValue placeholder=\"选择每天的提醒时间\" />\n                            </SelectTrigger>\n                            <SelectContent>\n                              <SelectItem value=\"06:00\">早上 6:00</SelectItem>\n                              <SelectItem value=\"07:00\">早上 7:00</SelectItem>\n                              <SelectItem value=\"08:00\">早上 8:00</SelectItem>\n                              <SelectItem value=\"09:00\">早上 9:00</SelectItem>\n                              <SelectItem value=\"12:00\">中午 12:00</SelectItem>\n                              <SelectItem value=\"18:00\">下午 6:00</SelectItem>\n                              <SelectItem value=\"19:00\">下午 7:00</SelectItem>\n                              <SelectItem value=\"20:00\">下午 8:00</SelectItem>\n                              <SelectItem value=\"21:00\">下午 9:00</SelectItem>\n                              <SelectItem value=\"22:00\">下午 10:00</SelectItem>\n                            </SelectContent>\n                          </Select>\n                        </>\n                      ) : (\n                        <>\n                          <Label className=\"text-text-primary font-medium\">选择锚点习惯</Label>\n                          <Select\n                            onValueChange={(value) =>\n                              setReminderSettings((prev) => ({\n                                ...prev,\n                                [behavior.id]: { ...prev[behavior.id], anchor: value },\n                              }))\n                            }\n                            value={reminderSettings[behavior.id]?.anchor}\n                          >\n                            <SelectTrigger className=\"mt-2 border-surface-divider\">\n                              <SelectValue placeholder=\"选择一个现有的日常习惯\" />\n                            </SelectTrigger>\n                            <SelectContent>\n                              {anchorOptions.map((option) => (\n                                <SelectItem key={option.id} value={option.id}>\n                                  <div>\n                                    <div className=\"font-medium\">{option.label}</div>\n                                    <div className=\"text-sm text-text-secondary\">{option.description}</div>\n                                  </div>\n                                </SelectItem>\n                              ))}\n                            </SelectContent>\n                          </Select>\n                        </>\n                      )}\n                    </div>\n                  </CardContent>\n                </>\n              ) : (\n                // 收起状态 - 简略只读信息\n                <CardContent\n                  className=\"p-4 cursor-pointer hover:bg-gray-50 transition-colors\"\n                  onClick={() => toggleCardExpanded(behavior.id)}\n                >\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex-1\">\n                      <div className=\"flex items-center justify-between mb-2\">\n                        <h4 className=\"font-medium text-text-primary\">{behavior.title}</h4>\n                        <ArrowDown className=\"w-4 h-4 text-text-secondary\" />\n                      </div>\n                      <p className=\"text-sm text-text-secondary mb-2\">{behavior.description}</p>\n                      <div className=\"flex items-center\">\n                        <span className=\"text-xs text-text-secondary mr-2\">提醒方式:</span>\n                        <span\n                          className={`text-xs ${\n                            reminderSettings[behavior.id]?.type ? \"text-brand-primary\" : \"text-brand-accent\"\n                          }`}\n                        >\n                          {getReminderDisplayText(behavior.id)}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                </CardContent>\n              )}\n            </Card>\n          ))}\n      </div>\n\n      <div className=\"flex justify-between pt-4\">\n        <Button variant=\"ghost\" onClick={handlePrevStep} className=\"text-text-secondary\">\n          <ArrowLeft className=\"w-4 h-4 mr-2\" />\n          上一步\n        </Button>\n        <Button onClick={handleComplete} className=\"bg-brand-accent hover:bg-brand-accent/80 text-white\">\n          <Check className=\"w-4 h-4 mr-2\" />\n          完成创建\n        </Button>\n      </div>\n    </div>\n  )\n\n  return (\n    <div className=\"min-h-screen bg-surface-main p-4\">\n      <div className=\"max-w-md mx-auto\">\n        {/* 进度指示器 */}\n        <div className=\"flex justify-center mb-6\">\n          <div className=\"flex items-center space-x-2\">\n            {[1, 2, 3].map((step) => (\n              <div key={step} className=\"flex items-center\">\n                <div\n                  className={`w-8 h-8 rounded-full flex items-center justify-center text-sm font-medium ${\n                    step <= currentStep ? \"bg-brand-primary text-white\" : \"bg-surface-divider text-text-secondary\"\n                  }`}\n                >\n                  {step < currentStep ? <Check className=\"w-4 h-4\" /> : step}\n                </div>\n                {step < 3 && <div className={`w-8 h-0.5 ${step < currentStep ? \"bg-brand-primary\" : \"bg-surface-divider\"}`} />}\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* 步骤内容 */}\n        <Card className=\"border-surface-divider shadow-sm\">\n          <CardContent className=\"p-6\">\n            {currentStep === 1 && renderStep1()}\n            {currentStep === 2 && isLoadingRecommendations && renderLoadingStep2()}\n            {currentStep === 2 && !isLoadingRecommendations && renderStep2()}\n            {currentStep === 3 && renderStep3()}\n          </CardContent>\n        </Card>\n        <Toaster />\n      </div>\n    </div>\n  )\n}",
            "brand-color-theme.md": "# Habit Map 品牌色彩主题改造计划\n\n## 项目背景\n\n当前项目中存在大量硬编码的 hex 颜色值（如 `bg-[#69B578]`、`text-[#292F36]` 等），需要统一管理并支持深浅主题切换。\n\n## 设计色彩规范\n\n基于提供的配色设计，定义以下色彩系统：\n\n| 角色 | 颜色名称 | HEX 色值 | HSL 色值 | 用途说明 |\n|------|----------|----------|----------|----------|\n| 核心主绿 | Primary Green | #69B578 | 132 34% 56% | 品牌主色，代表成长、积极 |\n| 核心强调色 | Primary Accent | #E5B061 | 43 71% 62% | 行动召唤 (CTA)，庆祝，高亮 |\n| 主要背景色 | Main Background | #EBF2FA | 210 59% 95% | 大部分页面背景，卡片间隙 |\n| 主要文本色 | Primary Text | #292F36 | 210 13% 19% | 标题、正文等主要信息 |\n| 辅助/信息浅蓝 | Secondary Blue | #81ACDA | 210 55% 68% | 辅助信息，次要交互，柔和引导 |\n| 次要文本 | Secondary Text | #5A6872 | 210 10% 38% | 辅助文字，描述，时间戳 |\n| 分隔线 | Divider | #D8DEE9 | 210 24% 85% | 列表分隔，卡片边框 |\n\n## 技术方案\n\n采用 **CSS 变量 + Tailwind** 的组合方案：\n\n### 优势\n- 支持深浅主题动态切换\n- 语义化的颜色命名\n- 运行时可调整颜色\n- 与现有 `next-themes` 系统兼容\n\n### 颜色分类体系\n\n#### 1. 品牌色系 (brand)\n- `brand-primary`: 核心主绿色\n- `brand-accent`: 核心强调色  \n- `brand-secondary`: 辅助信息蓝色\n\n#### 2. 文本色系 (text)\n- `text-primary`: 主要文本色\n- `text-secondary`: 次要文本色\n\n#### 3. 表面色系 (surface)\n- `surface-main`: 主要背景色\n- `surface-divider`: 分隔线颜色\n\n## 修改步骤\n\n### 步骤 1: 更新 Tailwind 配置\n\n**文件**: `tailwind.config.ts`\n\n**修改内容**:\n1. 将现有的硬编码颜色值改为 CSS 变量引用\n2. 添加自定义品牌色系配置\n3. 保持与 shadcn/ui 的兼容性\n\n**新增颜色类**:\n```typescript\ncolors: {\n  // 现有的 shadcn/ui 颜色保持不变\n  // ...\n  \n  // 新增自定义品牌色系\n  brand: {\n    primary: \"hsl(var(--brand-primary))\",\n    accent: \"hsl(var(--brand-accent))\",\n    secondary: \"hsl(var(--brand-secondary))\",\n  },\n  text: {\n    primary: \"hsl(var(--text-primary))\",\n    secondary: \"hsl(var(--text-secondary))\",\n  },\n  surface: {\n    main: \"hsl(var(--surface-main))\",\n    divider: \"hsl(var(--surface-divider))\",\n  },\n}\n```\n\n### 步骤 2: 定义 CSS 变量\n\n**文件**: `app/globals.css`\n\n**修改内容**:\n1. 在 `:root` 中添加浅色主题的颜色变量\n2. 在 `.dark` 中添加深色主题的颜色变量\n3. 使用 HSL 格式以便更好地调整亮度\n\n**浅色主题变量**:\n```css\n:root {\n  /* 品牌色系 */\n  --brand-primary: 132 34% 56%;      /* #69B578 */\n  --brand-accent: 43 71% 62%;        /* #E5B061 */\n  --brand-secondary: 210 55% 68%;    /* #81ACDA */\n  \n  /* 文本色系 */\n  --text-primary: 210 13% 19%;       /* #292F36 */\n  --text-secondary: 210 10% 38%;     /* #5A6872 */\n  \n  /* 表面色系 */\n  --surface-main: 210 59% 95%;       /* #EBF2FA */\n  --surface-divider: 210 24% 85%;    /* #D8DEE9 */\n}\n```\n\n**深色主题变量**:\n```css\n.dark {\n  /* 品牌色系 - 降低亮度以适应深色背景 */\n  --brand-primary: 132 34% 46%;      /* 降低 10% 亮度 */\n  --brand-accent: 43 71% 52%;        /* 降低 10% 亮度 */\n  --brand-secondary: 210 54% 57%;    /* 降低 10% 亮度 */\n  \n  /* 文本色系 - 反转为浅色 */\n  --text-primary: 0 0% 95%;          /* 浅色文本 */\n  --text-secondary: 0 0% 70%;        /* 中等浅色文本 */\n  \n  /* 表面色系 - 深色背景 */\n  --surface-main: 210 15% 8%;        /* 深色背景 */\n  --surface-divider: 210 15% 15%;    /* 深色分隔线 */\n}\n```\n\n### 步骤 3: 更新组件代码\n\n**文件**: `app/habits/add/page.tsx` 和 `app/habits/completeAdd/page.tsx`\n\n**修改策略**:\n1. 逐步替换硬编码颜色\n2. 使用语义化的颜色类名\n3. 保持视觉效果一致性\n\n**颜色映射表**:\n\n| 原硬编码颜色 | 新颜色类名 | 用途 |\n|-------------|-----------|------|\n| `bg-[#69B578]` | `bg-brand-primary` | 主要按钮、成功状态 |\n| `hover:bg-[#5a9a68]` | `hover:bg-brand-primary/80` | 主要按钮悬停 |\n| `bg-[#E5B061]` | `bg-brand-accent` | 强调按钮、完成状态 |\n| `hover:bg-[#d49d4f]` | `hover:bg-brand-accent/80` | 强调按钮悬停 |\n| `bg-[#81ACDA]` | `bg-brand-secondary` | 信息提示、次要元素 |\n| `bg-[#EBF2FA]` | `bg-surface-main` | 页面背景、卡片背景 |\n| `border-[#D8DEE9]` | `border-surface-divider` | 卡片边框、分隔线 |\n| `text-[#292F36]` | `text-text-primary` | 主要文本 |\n| `text-[#5A6872]` | `text-text-secondary` | 次要文本、描述 |\n\n### 步骤 4: 验证和测试\n\n1. **功能测试**: 确保所有颜色正确显示\n2. **主题切换测试**: 验证深浅主题切换效果\n3. **视觉回归测试**: 确保改造后视觉效果与原设计一致\n4. **响应式测试**: 确保在不同设备上显示正常\n\n## 实施注意事项\n\n### 1. 兼容性考虑\n- 保持与现有 shadcn/ui 组件的兼容性\n- 不影响其他页面的现有样式\n\n### 2. 渐进式迁移\n- 可以分模块逐步替换，不需要一次性全部修改\n- 优先替换使用频率高的颜色\n\n### 3. 命名规范\n- 使用语义化命名而非颜色名称（如 `primary` 而非 `green`）\n- 保持命名的一致性和可预测性\n\n### 4. 文档维护\n- 更新组件文档中的颜色使用说明\n- 建立颜色使用规范指南\n\n## 预期效果\n\n改造完成后将实现：\n\n1. **统一的颜色管理**: 所有颜色在配置文件中统一定义\n2. **主题切换支持**: 完整的深浅主题切换功能\n3. **更好的可维护性**: 语义化命名，易于理解和修改\n4. **设计系统化**: 建立完整的颜色设计系统\n5. **未来扩展性**: 支持更多主题变体和个性化设置\n\n## 实施进度记录\n\n### 步骤 1: 更新 Tailwind 配置\n- [x] 1.1 将现有的硬编码颜色值改为 CSS 变量引用\n- [x] 1.2 添加自定义品牌色系配置\n- [x] 1.3 保持与 shadcn/ui 的兼容性\n- [x] 1.4 验证配置更新\n\n### 步骤 2: 定义 CSS 变量\n- [x] 2.1 在 :root 中添加浅色主题的颜色变量\n- [x] 2.2 在 .dark 中添加深色主题的颜色变量\n- [x] 2.3 使用 HSL 格式定义所有颜色\n- [x] 2.4 验证变量定义\n\n### 步骤 3: 更新组件代码\n- [x] 3.1 替换 app/habits/add/page.tsx 中的硬编码颜色\n- [x] 3.2 替换 app/habits/completeAdd/page.tsx 中的硬编码颜色\n- [x] 3.3 验证组件视觉效果\n- [x] 3.4 测试深色模式切换\n- [x] 3.5 代码审查和优化\n\n**步骤3完成详情**:\n- 成功替换了 `app/habits/add/page.tsx` 中的 70+ 个硬编码颜色实例\n- 成功替换了 `app/habits/completeAdd/page.tsx` 中的 20+ 个硬编码颜色实例\n- 所有颜色都已映射到语义化的颜色类名\n- 保持了原有的视觉效果和用户体验\n- 支持深浅主题动态切换\n\n### 步骤 4: 验证和测试\n- [ ] 4.1 功能测试\n- [ ] 4.2 主题切换测试\n- [ ] 4.3 视觉回归测试\n- [ ] 4.4 响应式测试\n- [ ] 4.5 性能测试"
        },
        "deleted_files": []
    },
    {
        "commit_message": "split steps into components",
        "added_files": {
            "components/add-habit/README.md": "# 添加习惯组件\n\n这个目录包含了从 `app/habits/add/page.tsx` 重构出来的组件，将原本的单一大文件拆分成了更易维护的小组件。\n\n## 组件结构\n\n### `SetHabitInfo.tsx`\n- **功能**: 处理习惯创建的第一步 - 设置习惯基本信息\n- **包含**: 习惯名称输入、习惯描述输入、导航按钮\n- **Props**: habitName, setHabitName, habitDescription, setHabitDescription, onNext, onCancel\n\n### `SelectBehaviors.tsx`\n- **功能**: 处理习惯创建的第二步 - 选择微行为\n- **包含**: 加载状态、微行为列表、选择逻辑、导航按钮\n- **Props**: habitName, selectedMicroBehaviors, isLoadingRecommendations, onToggleBehavior, onNext, onPrev\n\n### `SetBehaviorReminders.tsx`\n- **功能**: 处理习惯创建的第三步 - 设置提醒\n- **包含**: 提醒方式选择（自然提醒/定时提醒）、锚点选择、时间选择、卡片展开/收起\n- **Props**: selectedMicroBehaviors, reminderSettings, setReminderSettings, anchorOptions, expandedCards, onToggleCardExpanded, onComplete, onPrev\n\n### `types.ts`\n- **功能**: 共享的TypeScript类型定义\n- **包含**: MicroBehavior, AnchorOption, ReminderSettings 接口\n\n## 重构的好处\n\n1. **代码可读性**: 每个组件只负责一个步骤的逻辑，代码结构更清晰\n2. **可维护性**: 修改某个步骤的UI或逻辑时，只需要关注对应的文件\n3. **可重用性**: 如果将来有其他地方需要用到某个步骤的逻辑或UI，可以更容易地复用\n4. **类型安全**: 使用共享的类型定义，确保组件间的数据传递类型安全\n\n## 主页面 (`app/habits/add/page.tsx`)\n\n重构后的主页面只负责：\n- 状态管理（currentStep, habitName, selectedMicroBehaviors 等）\n- 步骤切换逻辑（handleNextStep, handlePrevStep）\n- 根据当前步骤渲染对应的组件\n- 将必要的状态和处理函数作为props传递给子组件",
            "components/add-habit/SelectBehaviors.tsx": "\"use client\"\n\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent } from \"@/components/ui/card\"\nimport { Checkbox } from \"@/components/ui/checkbox\"\nimport { Label } from \"@/components/ui/label\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\nimport { MicroBehavior } from \"./types\"\n\ninterface SelectBehaviorsProps {\n  habitName: string\n  selectedMicroBehaviors: MicroBehavior[]\n  isLoadingRecommendations: boolean\n  onToggleBehavior: (behaviorId: string) => void\n  onNext: () => void\n  onPrev: () => void\n}\n\nexport default function SelectBehaviors({\n  habitName,\n  selectedMicroBehaviors,\n  isLoadingRecommendations,\n  onToggleBehavior,\n  onNext,\n  onPrev,\n}: SelectBehaviorsProps) {\n  if (isLoadingRecommendations) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"text-center mb-6\">\n          <h1 className=\"text-xl font-bold text-text-primary mb-2\">创建新习惯</h1>\n          <p className=\"text-sm text-text-secondary\">第2步：设计你的微行动</p>\n        </div>\n\n        <Card className=\"border-surface-divider bg-surface-main\">\n          <CardContent className=\"p-4\">\n            <p className=\"text-sm text-text-secondary\">习惯：</p>\n            <p className=\"font-medium text-text-primary\">{habitName}</p>\n          </CardContent>\n        </Card>\n\n        <div className=\"flex flex-col items-center justify-center py-16\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-brand-primary mb-6\"></div>\n          <h3 className=\"text-lg font-medium text-text-primary mb-2\">正在为您推荐微行为...</h3>\n          <p className=\"text-sm text-text-secondary text-center leading-relaxed\">\n            基于您的习惯目标，我们正在分析并推荐\n            <br />\n            最适合的微行为组合\n          </p>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"text-center mb-6\">\n        <h1 className=\"text-xl font-bold text-text-primary mb-2\">创建新习惯</h1>\n        <p className=\"text-sm text-text-secondary\">第2步：设计你的微行动</p>\n      </div>\n\n      <Card className=\"border-surface-divider bg-surface-main\">\n        <CardContent className=\"p-4\">\n          <p className=\"text-sm text-text-secondary\">习惯：</p>\n          <p className=\"font-medium text-text-primary\">{habitName}</p>\n        </CardContent>\n      </Card>\n\n      <div>\n        <div className=\"flex justify-between items-center mb-4\">\n          <h3 className=\"font-medium text-text-primary\">推荐的微行为</h3>\n          <span className=\"text-sm text-text-secondary\">\n            已选择 {selectedMicroBehaviors.filter((b) => b.selected).length}/3\n          </span>\n        </div>\n        <p className=\"text-sm text-text-secondary mb-4\">选择1-3个简单易行的微行为，让习惯更容易坚持</p>\n\n        <div className=\"space-y-3\">\n          {selectedMicroBehaviors.map((behavior) => (\n            <Card key={behavior.id} className=\"border-surface-divider\">\n              <CardContent\n                className=\"p-4 cursor-pointer hover:bg-gray-50 transition-colors\"\n                onClick={() => onToggleBehavior(behavior.id)}\n              >\n                <div className=\"flex items-start space-x-3\">\n                  <Checkbox\n                    id={behavior.id}\n                    checked={behavior.selected}\n                    onCheckedChange={() => onToggleBehavior(behavior.id)}\n                    className=\"mt-1 pointer-events-none\"\n                  />\n                  <div className=\"flex-1\">\n                    <Label\n                      htmlFor={behavior.id}\n                      className=\"font-medium cursor-pointer text-text-primary pointer-events-none\"\n                    >\n                      {behavior.title}\n                    </Label>\n                    <p className=\"text-sm text-text-secondary mt-1 pointer-events-none\">{behavior.description}</p>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"flex justify-between pt-4\">\n        <Button variant=\"ghost\" onClick={onPrev} className=\"text-text-secondary\">\n          <ArrowLeft className=\"w-4 h-4 mr-2\" />\n          上一步\n        </Button>\n        <Button onClick={onNext} className=\"bg-brand-primary hover:bg-brand-primary/80 text-white\">\n          下一步\n          <ArrowRight className=\"w-4 h-4 ml-2\" />\n        </Button>\n      </div>\n    </div>\n  )\n}",
            "components/add-habit/SetBehaviorReminders.tsx": "\"use client\"\n\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\"\nimport { Label } from \"@/components/ui/label\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { ArrowLeft, ArrowUp, ArrowDown, Check, Clock, Link } from \"lucide-react\"\nimport { MicroBehavior, AnchorOption, ReminderSettings } from \"./types\"\n\ninterface SetBehaviorRemindersProps {\n  selectedMicroBehaviors: MicroBehavior[]\n  reminderSettings: ReminderSettings\n  setReminderSettings: (settings: ReminderSettings | ((prev: ReminderSettings) => ReminderSettings)) => void\n  anchorOptions: AnchorOption[]\n  expandedCards: { [key: string]: boolean }\n  onToggleCardExpanded: (behaviorId: string) => void\n  onComplete: () => void\n  onPrev: () => void\n}\n\nexport default function SetBehaviorReminders({\n  selectedMicroBehaviors,\n  reminderSettings,\n  setReminderSettings,\n  anchorOptions,\n  expandedCards,\n  onToggleCardExpanded,\n  onComplete,\n  onPrev,\n}: SetBehaviorRemindersProps) {\n  const getReminderDisplayText = (behaviorId: string) => {\n    const setting = reminderSettings[behaviorId]\n    if (!setting || !setting.type) {\n      return \"需要设置提醒方式\"\n    }\n\n    if (setting.type === \"anchor\") {\n      if (setting.anchor) {\n        const anchorOption = anchorOptions.find((option) => option.id === setting.anchor)\n        return `自然提醒：${anchorOption?.label || \"未选择锚点\"}`\n      }\n      return \"自然提醒（未选择锚点）\"\n    } else if (setting.type === \"timer\") {\n      if (setting.time) {\n        return `定时提醒：${setting.time}`\n      }\n      return \"定时提醒（未选择时间）\"\n    }\n\n    return \"需要设置提醒方式\"\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"text-center mb-6\">\n        <h1 className=\"text-xl font-bold text-text-primary mb-2\">创建新习惯</h1>\n        <p className=\"text-sm text-text-secondary\">第3步：设置提醒</p>\n      </div>\n\n      <div className=\"space-y-6\">\n        {selectedMicroBehaviors\n          .filter((behavior) => behavior.selected)\n          .map((behavior) => (\n            <Card key={behavior.id} className=\"border-surface-divider\">\n              {expandedCards[behavior.id] ? (\n                // 展开状态 - 完整编辑界面\n                <>\n                  <CardHeader\n                    className=\"pb-3 cursor-pointer hover:bg-gray-50 transition-colors\"\n                    onClick={() => onToggleCardExpanded(behavior.id)}\n                  >\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex-1\">\n                        <CardTitle className=\"text-base text-text-primary\">{behavior.title}</CardTitle>\n                        <p className=\"text-sm text-text-secondary\">{behavior.description}</p>\n                      </div>\n                      <div className=\"ml-2\">\n                        <ArrowUp className=\"w-4 h-4 text-text-secondary\" />\n                      </div>\n                    </div>\n                  </CardHeader>\n                  <CardContent className=\"space-y-4\">\n                    <div>\n                      <Label className=\"text-text-primary font-medium mb-3 block\">选择提醒方式</Label>\n                      <RadioGroup\n                        value={reminderSettings[behavior.id]?.type || \"anchor\"}\n                        onValueChange={(value: \"anchor\" | \"timer\") =>\n                          setReminderSettings((prev) => ({\n                            ...prev,\n                            [behavior.id]: { ...prev[behavior.id], type: value },\n                          }))\n                        }\n                      >\n                        <div className=\"space-y-3\">\n                          <Card className=\"border-brand-secondary bg-blue-50\">\n                            <CardContent className=\"p-3\">\n                              <div className=\"flex items-center space-x-2\">\n                                <RadioGroupItem value=\"anchor\" id={`anchor-${behavior.id}`} />\n                                <Label htmlFor={`anchor-${behavior.id}`} className=\"flex-1 cursor-pointer\">\n                                  <div className=\"flex items-center\">\n                                    <Link className=\"w-4 h-4 mr-2 text-brand-secondary\" />\n                                    <span className=\"font-medium text-text-primary\">自然提醒（推荐）</span>\n                                  </div>\n                                  <p className=\"text-sm text-text-secondary mt-1\">与现有习惯关联，更容易记住</p>\n                                </Label>\n                              </div>\n                            </CardContent>\n                          </Card>\n\n                          <Card className=\"border-surface-divider\">\n                            <CardContent className=\"p-3\">\n                              <div className=\"flex items-center space-x-2\">\n                                <RadioGroupItem value=\"timer\" id={`timer-${behavior.id}`} />\n                                <Label htmlFor={`timer-${behavior.id}`} className=\"flex-1 cursor-pointer\">\n                                  <div className=\"flex items-center\">\n                                    <Clock className=\"w-4 h-4 mr-2 text-text-secondary\" />\n                                    <span className=\"font-medium text-text-primary\">定时提醒</span>\n                                  </div>\n                                  <p className=\"text-sm text-text-secondary mt-1\">设置固定时间提醒</p>\n                                </Label>\n                              </div>\n                            </CardContent>\n                          </Card>\n                        </div>\n                      </RadioGroup>\n                    </div>\n\n                    <div>\n                      {reminderSettings[behavior.id]?.type === \"timer\" ? (\n                        <>\n                          <Label className=\"text-text-primary font-medium\">选择提醒时间</Label>\n                          <Select\n                            onValueChange={(value) =>\n                              setReminderSettings((prev) => ({\n                                ...prev,\n                                [behavior.id]: { ...prev[behavior.id], time: value },\n                              }))\n                            }\n                            value={reminderSettings[behavior.id]?.time}\n                          >\n                            <SelectTrigger className=\"mt-2 border-surface-divider\">\n                              <SelectValue placeholder=\"选择每天的提醒时间\" />\n                            </SelectTrigger>\n                            <SelectContent>\n                              <SelectItem value=\"06:00\">早上 6:00</SelectItem>\n                              <SelectItem value=\"07:00\">早上 7:00</SelectItem>\n                              <SelectItem value=\"08:00\">早上 8:00</SelectItem>\n                              <SelectItem value=\"09:00\">早上 9:00</SelectItem>\n                              <SelectItem value=\"12:00\">中午 12:00</SelectItem>\n                              <SelectItem value=\"18:00\">下午 6:00</SelectItem>\n                              <SelectItem value=\"19:00\">下午 7:00</SelectItem>\n                              <SelectItem value=\"20:00\">下午 8:00</SelectItem>\n                              <SelectItem value=\"21:00\">下午 9:00</SelectItem>\n                              <SelectItem value=\"22:00\">下午 10:00</SelectItem>\n                            </SelectContent>\n                          </Select>\n                        </>\n                      ) : (\n                        <>\n                          <Label className=\"text-text-primary font-medium\">选择锚点习惯</Label>\n                          <Select\n                            onValueChange={(value) =>\n                              setReminderSettings((prev) => ({\n                                ...prev,\n                                [behavior.id]: { ...prev[behavior.id], anchor: value },\n                              }))\n                            }\n                            value={reminderSettings[behavior.id]?.anchor}\n                          >\n                            <SelectTrigger className=\"mt-2 border-surface-divider\">\n                              <SelectValue placeholder=\"选择一个现有的日常习惯\" />\n                            </SelectTrigger>\n                            <SelectContent>\n                              {anchorOptions.map((option) => (\n                                <SelectItem key={option.id} value={option.id}>\n                                  <div>\n                                    <div className=\"font-medium\">{option.label}</div>\n                                    <div className=\"text-sm text-text-secondary\">{option.description}</div>\n                                  </div>\n                                </SelectItem>\n                              ))}\n                            </SelectContent>\n                          </Select>\n                        </>\n                      )}\n                    </div>\n                  </CardContent>\n                </>\n              ) : (\n                // 收起状态 - 简略只读信息\n                <CardContent\n                  className=\"p-4 cursor-pointer hover:bg-gray-50 transition-colors\"\n                  onClick={() => onToggleCardExpanded(behavior.id)}\n                >\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex-1\">\n                      <div className=\"flex items-center justify-between mb-2\">\n                        <h4 className=\"font-medium text-text-primary\">{behavior.title}</h4>\n                        <ArrowDown className=\"w-4 h-4 text-text-secondary\" />\n                      </div>\n                      <p className=\"text-sm text-text-secondary mb-2\">{behavior.description}</p>\n                      <div className=\"flex items-center\">\n                        <span className=\"text-xs text-text-secondary mr-2\">提醒方式:</span>\n                        <span\n                          className={`text-xs ${\n                            reminderSettings[behavior.id]?.type ? \"text-brand-primary\" : \"text-brand-accent\"\n                          }`}\n                        >\n                          {getReminderDisplayText(behavior.id)}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                </CardContent>\n              )}\n            </Card>\n          ))}\n      </div>\n\n      <div className=\"flex justify-between pt-4\">\n        <Button variant=\"ghost\" onClick={onPrev} className=\"text-text-secondary\">\n          <ArrowLeft className=\"w-4 h-4 mr-2\" />\n          上一步\n        </Button>\n        <Button onClick={onComplete} className=\"bg-brand-accent hover:bg-brand-accent/80 text-white\">\n          <Check className=\"w-4 h-4 mr-2\" />\n          完成创建\n        </Button>\n      </div>\n    </div>\n  )\n}",
            "components/add-habit/SetHabitInfo.tsx": "\"use client\"\n\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { Label } from \"@/components/ui/label\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\ninterface SetHabitInfoProps {\n  habitName: string\n  setHabitName: (name: string) => void\n  habitDescription: string\n  setHabitDescription: (description: string) => void\n  onNext: () => void\n  onCancel: () => void\n}\n\nexport default function SetHabitInfo({\n  habitName,\n  setHabitName,\n  habitDescription,\n  setHabitDescription,\n  onNext,\n  onCancel,\n}: SetHabitInfoProps) {\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"text-center mb-6\">\n        <h1 className=\"text-xl font-bold text-text-primary mb-2\">创建新习惯</h1>\n        <p className=\"text-sm text-text-secondary\">第1步：定义你的习惯</p>\n      </div>\n\n      <div className=\"space-y-4\">\n        <div>\n          <Label htmlFor=\"habit-name\" className=\"text-text-primary font-medium\">\n            习惯名称\n          </Label>\n          <Input\n            id=\"habit-name\"\n            value={habitName}\n            onChange={(e) => setHabitName(e.target.value)}\n            placeholder=\"我想养成的好习惯是...\"\n            className=\"mt-2 border-surface-divider focus:border-brand-primary\"\n          />\n        </div>\n\n        <div>\n          <Label htmlFor=\"habit-description\" className=\"text-text-primary font-medium\">\n            习惯描述 (可选)\n          </Label>\n          <Textarea\n            id=\"habit-description\"\n            value={habitDescription}\n            onChange={(e) => setHabitDescription(e.target.value)}\n            placeholder=\"我为什么想养成这个习惯？它对我有什么意义？\"\n            className=\"mt-2 border-surface-divider focus:border-brand-primary min-h-[100px]\"\n          />\n        </div>\n      </div>\n\n      <div className=\"flex justify-between pt-4\">\n        <Button variant=\"ghost\" className=\"text-text-secondary\" onClick={onCancel}>\n          <ArrowLeft className=\"w-4 h-4 mr-2\" />\n          取消\n        </Button>\n        <Button\n          onClick={onNext}\n          disabled={!habitName.trim()}\n          className=\"bg-brand-primary hover:bg-brand-primary/80 text-white\"\n        >\n          下一步\n          <ArrowRight className=\"w-4 h-4 ml-2\" />\n        </Button>\n      </div>\n    </div>\n  )\n}",
            "components/add-habit/types.ts": "export interface MicroBehavior {\n  id: string\n  title: string\n  description: string\n  selected: boolean\n}\n\nexport interface AnchorOption {\n  id: string\n  label: string\n  description: string\n}\n\nexport interface ReminderSettings {\n  [key: string]: {\n    type: \"anchor\" | \"timer\"\n    anchor?: string\n    time?: string\n  }\n}"
        },
        "modified_files": {
            "app/habits/add/page.tsx": "\"use client\"\n\nimport { useState } from \"react\"\nimport { Card, CardContent } from \"@/components/ui/card\"\nimport { Check } from \"lucide-react\"\nimport { useToast } from \"@/hooks/use-toast\"\nimport { Toaster } from \"@/components/ui/toaster\"\nimport SetHabitInfo from \"@/components/add-habit/SetHabitInfo\"\nimport SelectBehaviors from \"@/components/add-habit/SelectBehaviors\"\nimport SetBehaviorReminders from \"@/components/add-habit/SetBehaviorReminders\"\nimport { MicroBehavior, AnchorOption, ReminderSettings } from \"@/components/add-habit/types\"\n\nexport default function AddHabitPage() {\n  const [currentStep, setCurrentStep] = useState(1)\n  const [habitName, setHabitName] = useState(\"\")\n  const [habitDescription, setHabitDescription] = useState(\"\")\n  const [selectedMicroBehaviors, setSelectedMicroBehaviors] = useState<MicroBehavior[]>([])\n  const [reminderSettings, setReminderSettings] = useState<ReminderSettings>({})\n  const { toast } = useToast()\n  const [expandedCards, setExpandedCards] = useState<{ [key: string]: boolean }>({})\n  const [isLoadingRecommendations, setIsLoadingRecommendations] = useState(false)\n\n  // 模拟推荐的微行为\n  const recommendedMicroBehaviors: MicroBehavior[] = [\n    {\n      id: \"1\",\n      title: \"打开书本\",\n      description: \"每天只需要打开一本书，翻到任意一页\",\n      selected: false,\n    },\n    {\n      id: \"2\",\n      title: \"阅读一段话\",\n      description: \"读完一个段落就算完成\",\n      selected: false,\n    },\n    {\n      id: \"3\",\n      title: \"阅读2分钟\",\n      description: \"设置计时器，专注阅读2分钟\",\n      selected: false,\n    },\n    {\n      id: \"4\",\n      title: \"准备阅读环境\",\n      description: \"找一个安静的地方，准备好书本和水杯\",\n      selected: false,\n    },\n    {\n      id: \"5\",\n      title: \"记录一个想法\",\n      description: \"阅读后写下一句话的感受或想法\",\n      selected: false,\n    },\n    {\n      id: \"6\",\n      title: \"朗读一句话\",\n      description: \"大声朗读书中的任意一句话\",\n      selected: false,\n    },\n    {\n      id: \"7\",\n      title: \"标记一个重点\",\n      description: \"用笔或便签标记一个有趣的内容\",\n      selected: false,\n    },\n    {\n      id: \"8\",\n      title: \"翻阅目录\",\n      description: \"浏览书本目录，选择感兴趣的章节\",\n      selected: false,\n    },\n    {\n      id: \"9\",\n      title: \"设置阅读提醒\",\n      description: \"在手机上设置明天的阅读提醒\",\n      selected: false,\n    },\n    {\n      id: \"10\",\n      title: \"分享阅读计划\",\n      description: \"告诉朋友或家人你今天的阅读计划\",\n      selected: false,\n    },\n  ]\n\n  const anchorOptions: AnchorOption[] = [\n    { id: \"morning-brush\", label: \"早上刷牙后\", description: \"利用晨间例行公事\" },\n    { id: \"coffee\", label: \"喝咖啡/茶时\", description: \"与日常饮品习惯结合\" },\n    { id: \"lunch-break\", label: \"午休时间\", description: \"利用工作间隙\" },\n    { id: \"before-sleep\", label: \"睡前\", description: \"作为放松活动\" },\n    { id: \"commute\", label: \"通勤路上\", description: \"利用交通时间\" },\n  ]\n\n  const handleMicroBehaviorToggle = (behaviorId: string) => {\n    const selectedCount = selectedMicroBehaviors.filter((b) => b.selected).length\n    const behavior = selectedMicroBehaviors.find((b) => b.id === behaviorId)\n\n    // 如果要选择第4个，显示toast提示\n    if (!behavior?.selected && selectedCount >= 3) {\n      toast({\n        title: \"选择数量已达上限\",\n        description: \"最多只能选择3个微行为，请先取消其他选择。\",\n        variant: \"destructive\",\n      })\n      return\n    }\n\n    setSelectedMicroBehaviors((prev) =>\n      prev.map((behavior) => (behavior.id === behaviorId ? { ...behavior, selected: !behavior.selected } : behavior)),\n    )\n  }\n\n  const initializeMicroBehaviors = () => {\n    if (selectedMicroBehaviors.length === 0) {\n      setSelectedMicroBehaviors(recommendedMicroBehaviors)\n      // 初始化所有选中的微行为卡片为展开状态\n      const initialExpandedState: { [key: string]: boolean } = {}\n      recommendedMicroBehaviors.forEach((behavior) => {\n        if (behavior.selected) {\n          initialExpandedState[behavior.id] = true\n        }\n      })\n      setExpandedCards(initialExpandedState)\n    }\n  }\n\n  const handleNextStep = async () => {\n    if (currentStep === 1) {\n      setIsLoadingRecommendations(true)\n      setCurrentStep(2)\n      // 模拟系统推荐微行为的等待时间\n      await new Promise((resolve) => setTimeout(resolve, 2000))\n      initializeMicroBehaviors()\n      setIsLoadingRecommendations(false)\n    } else if (currentStep === 2) {\n      const selectedCount = selectedMicroBehaviors.filter((b) => b.selected).length\n      if (selectedCount === 0) {\n        toast({\n          title: \"请选择微行为\",\n          description: \"至少需要选择1个微行为才能继续。\",\n          variant: \"destructive\",\n        })\n        return\n      }\n      // 为选中的微行为初始化展开状态和默认提醒设置\n      const initialExpandedState: { [key: string]: boolean } = {}\n      const initialReminderSettings: ReminderSettings = { ...reminderSettings }\n\n      selectedMicroBehaviors\n        .filter((b) => b.selected)\n        .forEach((behavior) => {\n          initialExpandedState[behavior.id] = true\n          // 如果该微行为还没有提醒设置，初始化为默认的自然提醒\n          if (!initialReminderSettings[behavior.id]) {\n            initialReminderSettings[behavior.id] = { type: \"anchor\" }\n          }\n        })\n\n      setExpandedCards(initialExpandedState)\n      setReminderSettings(initialReminderSettings)\n      setCurrentStep(3)\n    }\n  }\n\n  const handlePrevStep = () => {\n    setCurrentStep((prev) => Math.max(prev - 1, 1))\n  }\n\n  const handleComplete = () => {\n    // 这里处理完成创建的逻辑\n    const habitData = {\n      habitName,\n      habitDescription,\n      selectedMicroBehaviors: selectedMicroBehaviors.filter((b) => b.selected),\n      reminderSettings,\n    }\n\n    console.log(\"创建习惯:\", habitData)\n\n    // 将数据存储到 localStorage 或通过其他方式传递给下一个页面\n    localStorage.setItem(\"newHabitData\", JSON.stringify(habitData))\n\n    // 导航到完成页面\n    window.location.href = \"/habits/completeAdd\"\n  }\n\n  const toggleCardExpanded = (behaviorId: string) => {\n    setExpandedCards((prev) => ({\n      ...prev,\n      [behaviorId]: !prev[behaviorId],\n    }))\n  }\n\n  return (\n    <div className=\"min-h-screen bg-surface-main p-4\">\n      <div className=\"max-w-md mx-auto\">\n        {/* 进度指示器 */}\n        <div className=\"flex justify-center mb-6\">\n          <div className=\"flex items-center space-x-2\">\n            {[1, 2, 3].map((step) => (\n              <div key={step} className=\"flex items-center\">\n                <div\n                  className={`w-8 h-8 rounded-full flex items-center justify-center text-sm font-medium ${\n                    step <= currentStep ? \"bg-brand-primary text-white\" : \"bg-surface-divider text-text-secondary\"\n                  }`}\n                >\n                  {step < currentStep ? <Check className=\"w-4 h-4\" /> : step}\n                </div>\n                {step < 3 && <div className={`w-8 h-0.5 ${step < currentStep ? \"bg-brand-primary\" : \"bg-surface-divider\"}`} />}\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* 步骤内容 */}\n        <Card className=\"border-surface-divider shadow-sm\">\n          <CardContent className=\"p-6\">\n            {currentStep === 1 && (\n              <SetHabitInfo\n                habitName={habitName}\n                setHabitName={setHabitName}\n                habitDescription={habitDescription}\n                setHabitDescription={setHabitDescription}\n                onNext={handleNextStep}\n                onCancel={() => window.history.back()}\n              />\n            )}\n            {currentStep === 2 && (\n              <SelectBehaviors\n                habitName={habitName}\n                selectedMicroBehaviors={selectedMicroBehaviors}\n                isLoadingRecommendations={isLoadingRecommendations}\n                onToggleBehavior={handleMicroBehaviorToggle}\n                onNext={handleNextStep}\n                onPrev={handlePrevStep}\n              />\n            )}\n            {currentStep === 3 && (\n              <SetBehaviorReminders\n                selectedMicroBehaviors={selectedMicroBehaviors}\n                reminderSettings={reminderSettings}\n                setReminderSettings={setReminderSettings}\n                anchorOptions={anchorOptions}\n                expandedCards={expandedCards}\n                onToggleCardExpanded={toggleCardExpanded}\n                onComplete={handleComplete}\n                onPrev={handlePrevStep}\n              />\n            )}\n          </CardContent>\n        </Card>\n        <Toaster />\n      </div>\n    </div>\n  )\n}"
        },
        "deleted_files": []
    },
    {
        "commit_message": "refactor step page",
        "added_files": {
            "components/add-habit/StepLayout.tsx": "\"use client\"\n\nimport { Button } from \"@/components/ui/button\"\nimport React from \"react\"\n\ninterface StepLayoutProps {\n  stepNumber: number\n  stepTitle: string\n  needsScroll?: boolean\n  fixedContent?: React.ReactNode // 固定在滚动区域上方的内容\n  leftButton: {\n    text: string\n    icon: React.ReactNode\n    onClick: () => void\n    variant?: \"ghost\" | \"default\"\n    className?: string\n  }\n  rightButton: {\n    text: string\n    icon: React.ReactNode\n    onClick: () => void\n    disabled?: boolean\n    className?: string\n  }\n  children: React.ReactNode\n}\n\nexport default function StepLayout({\n  stepNumber,\n  stepTitle,\n  needsScroll = false,\n  fixedContent,\n  leftButton,\n  rightButton,\n  children,\n}: StepLayoutProps) {\n  return (\n    <div className=\"flex flex-col h-full\">\n      {/* 顶部固定区域：标题 */}\n      <div className=\"flex-shrink-0 text-center mb-4\">\n        <h1 className=\"text-xl font-bold text-text-primary mb-2\">创建新习惯</h1>\n        <p className=\"text-sm text-text-secondary\">第{stepNumber}步：{stepTitle}</p>\n      </div>\n\n      {/* 固定内容区域（可选） */}\n      {fixedContent && (\n        <div className=\"flex-shrink-0 mb-4\">\n          {fixedContent}\n        </div>\n      )}\n\n      {/* 中间区域：内容 */}\n      {needsScroll ? (\n        <div className=\"flex-1 relative mb-4 min-h-0\">\n          {/* 顶部渐变遮罩 */}\n          <div className=\"absolute top-0 left-0 right-0 h-6 bg-gradient-to-b from-gray-50/90 via-gray-50/50 to-transparent z-10 pointer-events-none\"></div>\n          \n          {/* 滚动容器 */}\n          <div className=\"h-full overflow-y-auto scrollbar-hide\">\n            <div className=\"pt-2 pb-2\">\n              {children}\n            </div>\n          </div>\n          \n          {/* 底部渐变遮罩 */}\n          <div className=\"absolute bottom-0 left-0 right-0 h-6 bg-gradient-to-t from-gray-50/90 via-gray-50/50 to-transparent z-10 pointer-events-none\"></div>\n        </div>\n      ) : (\n        <div className=\"flex-1 min-h-0 py-4\">\n          {children}\n        </div>\n      )}\n\n      {/* 底部固定区域：按钮 */}\n      <div className=\"flex-shrink-0 flex justify-between pt-4 border-t border-surface-divider\">\n        <Button\n          variant={leftButton.variant || \"ghost\"}\n          onClick={leftButton.onClick}\n          className={leftButton.className || \"text-text-secondary\"}\n        >\n          {leftButton.icon}\n          {leftButton.text}\n        </Button>\n        <Button\n          onClick={rightButton.onClick}\n          disabled={rightButton.disabled}\n          className={rightButton.className || \"bg-brand-primary hover:bg-brand-primary/80 text-white\"}\n        >\n          {rightButton.text}\n          {rightButton.icon}\n        </Button>\n      </div>\n    </div>\n  )\n}"
        },
        "modified_files": {
            "app/globals.css": "@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\nbody {\n  font-family: Arial, Helvetica, sans-serif;\n}\n\n@layer utilities {\n  .text-balance {\n    text-wrap: balance;\n  }\n  \n  /* 隐藏滚动条样式 - 用于移动端优化 */\n  .scrollbar-hide {\n    /* Firefox */\n    scrollbar-width: none;\n    /* Safari and Chrome */\n    -ms-overflow-style: none;\n  }\n  \n  .scrollbar-hide::-webkit-scrollbar {\n    display: none;\n  }\n}\n\n@layer base {\n  :root {\n    --background: 0 0% 100%;\n    --foreground: 0 0% 3.9%;\n    --card: 0 0% 100%;\n    --card-foreground: 0 0% 3.9%;\n    --popover: 0 0% 100%;\n    --popover-foreground: 0 0% 3.9%;\n    --primary: 0 0% 9%;\n    --primary-foreground: 0 0% 98%;\n    --secondary: 0 0% 96.1%;\n    --secondary-foreground: 0 0% 9%;\n    --muted: 0 0% 96.1%;\n    --muted-foreground: 0 0% 45.1%;\n    --accent: 0 0% 96.1%;\n    --accent-foreground: 0 0% 9%;\n    --destructive: 0 84.2% 60.2%;\n    --destructive-foreground: 0 0% 98%;\n    --border: 0 0% 89.8%;\n    --input: 0 0% 89.8%;\n    --ring: 0 0% 3.9%;\n    --chart-1: 12 76% 61%;\n    --chart-2: 173 58% 39%;\n    --chart-3: 197 37% 24%;\n    --chart-4: 43 74% 66%;\n    --chart-5: 27 87% 67%;\n    --radius: 0.5rem;\n    --sidebar-background: 0 0% 98%;\n    --sidebar-foreground: 240 5.3% 26.1%;\n    --sidebar-primary: 240 5.9% 10%;\n    --sidebar-primary-foreground: 0 0% 98%;\n    --sidebar-accent: 240 4.8% 95.9%;\n    --sidebar-accent-foreground: 240 5.9% 10%;\n    --sidebar-border: 220 13% 91%;\n    --sidebar-ring: 217.2 91.2% 59.8%;\n    \n    /* 品牌色系 - 修正后的准确 HSL 值 */\n    --brand-primary: 132 34% 56%;      /* #69B578 */\n    --brand-accent: 43 71% 62%;        /* #E5B061 */\n    --brand-secondary: 210 55% 68%;    /* #81ACDA */\n    \n    /* 文本色系 */\n    --text-primary: 210 13% 19%;       /* #292F36 */\n    --text-secondary: 210 10% 38%;     /* #5A6872 */\n    \n    /* 表面色系 */\n    --surface-main: 210 59% 95%;       /* #EBF2FA */\n    --surface-divider: 210 24% 85%;    /* #D8DEE9 */\n  }\n  .dark {\n    --background: 0 0% 3.9%;\n    --foreground: 0 0% 98%;\n    --card: 0 0% 3.9%;\n    --card-foreground: 0 0% 98%;\n    --popover: 0 0% 3.9%;\n    --popover-foreground: 0 0% 98%;\n    --primary: 0 0% 98%;\n    --primary-foreground: 0 0% 9%;\n    --secondary: 0 0% 14.9%;\n    --secondary-foreground: 0 0% 98%;\n    --muted: 0 0% 14.9%;\n    --muted-foreground: 0 0% 63.9%;\n    --accent: 0 0% 14.9%;\n    --accent-foreground: 0 0% 98%;\n    --destructive: 0 62.8% 30.6%;\n    --destructive-foreground: 0 0% 98%;\n    --border: 0 0% 14.9%;\n    --input: 0 0% 14.9%;\n    --ring: 0 0% 83.1%;\n    --chart-1: 220 70% 50%;\n    --chart-2: 160 60% 45%;\n    --chart-3: 30 80% 55%;\n    --chart-4: 280 65% 60%;\n    --chart-5: 340 75% 55%;\n    --sidebar-background: 240 5.9% 10%;\n    --sidebar-foreground: 240 4.8% 95.9%;\n    --sidebar-primary: 224.3 76.3% 48%;\n    --sidebar-primary-foreground: 0 0% 100%;\n    --sidebar-accent: 240 3.7% 15.9%;\n    --sidebar-accent-foreground: 240 4.8% 95.9%;\n    --sidebar-border: 240 3.7% 15.9%;\n    --sidebar-ring: 217.2 91.2% 59.8%;\n    \n    /* 品牌色系 - 深色主题，降低亮度 */\n    --brand-primary: 132 34% 46%;      /* 降低 10% 亮度 */\n    --brand-accent: 43 71% 52%;        /* 降低 10% 亮度 */\n    --brand-secondary: 210 55% 58%;    /* 降低 10% 亮度 */\n    \n    /* 文本色系 - 反转为浅色 */\n    --text-primary: 0 0% 95%;          /* 浅色文本 */\n    --text-secondary: 0 0% 70%;        /* 中等浅色文本 */\n    \n    /* 表面色系 - 深色背景 */\n    --surface-main: 210 15% 8%;        /* 深色背景 */\n    --surface-divider: 210 15% 15%;    /* 深色分隔线 */\n  }\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n  body {\n    @apply bg-background text-foreground;\n  }\n}",
            "app/habits/add/page.tsx": "\"use client\"\n\nimport { useState } from \"react\"\nimport { Card, CardContent } from \"@/components/ui/card\"\nimport { Check } from \"lucide-react\"\nimport { useToast } from \"@/hooks/use-toast\"\nimport { Toaster } from \"@/components/ui/toaster\"\nimport SetHabitInfo from \"@/components/add-habit/SetHabitInfo\"\nimport SelectBehaviors from \"@/components/add-habit/SelectBehaviors\"\nimport SetBehaviorReminders from \"@/components/add-habit/SetBehaviorReminders\"\nimport { MicroBehavior, AnchorOption, ReminderSettings } from \"@/components/add-habit/types\"\n\nexport default function AddHabitPage() {\n  const [currentStep, setCurrentStep] = useState(1)\n  const [habitName, setHabitName] = useState(\"\")\n  const [habitDescription, setHabitDescription] = useState(\"\")\n  const [selectedMicroBehaviors, setSelectedMicroBehaviors] = useState<MicroBehavior[]>([])\n  const [reminderSettings, setReminderSettings] = useState<ReminderSettings>({})\n  const { toast } = useToast()\n  const [expandedCards, setExpandedCards] = useState<{ [key: string]: boolean }>({})\n  const [isLoadingRecommendations, setIsLoadingRecommendations] = useState(false)\n\n  // 模拟推荐的微行为\n  const recommendedMicroBehaviors: MicroBehavior[] = [\n    {\n      id: \"1\",\n      title: \"打开书本\",\n      description: \"每天只需要打开一本书，翻到任意一页\",\n      selected: false,\n    },\n    {\n      id: \"2\",\n      title: \"阅读一段话\",\n      description: \"读完一个段落就算完成\",\n      selected: false,\n    },\n    {\n      id: \"3\",\n      title: \"阅读2分钟\",\n      description: \"设置计时器，专注阅读2分钟\",\n      selected: false,\n    },\n    {\n      id: \"4\",\n      title: \"准备阅读环境\",\n      description: \"找一个安静的地方，准备好书本和水杯\",\n      selected: false,\n    },\n    {\n      id: \"5\",\n      title: \"记录一个想法\",\n      description: \"阅读后写下一句话的感受或想法\",\n      selected: false,\n    },\n    {\n      id: \"6\",\n      title: \"朗读一句话\",\n      description: \"大声朗读书中的任意一句话\",\n      selected: false,\n    },\n    {\n      id: \"7\",\n      title: \"标记一个重点\",\n      description: \"用笔或便签标记一个有趣的内容\",\n      selected: false,\n    },\n    {\n      id: \"8\",\n      title: \"翻阅目录\",\n      description: \"浏览书本目录，选择感兴趣的章节\",\n      selected: false,\n    },\n    {\n      id: \"9\",\n      title: \"设置阅读提醒\",\n      description: \"在手机上设置明天的阅读提醒\",\n      selected: false,\n    },\n    {\n      id: \"10\",\n      title: \"分享阅读计划\",\n      description: \"告诉朋友或家人你今天的阅读计划\",\n      selected: false,\n    },\n  ]\n\n  const anchorOptions: AnchorOption[] = [\n    { id: \"morning-brush\", label: \"早上刷牙后\", description: \"利用晨间例行公事\" },\n    { id: \"coffee\", label: \"喝咖啡/茶时\", description: \"与日常饮品习惯结合\" },\n    { id: \"lunch-break\", label: \"午休时间\", description: \"利用工作间隙\" },\n    { id: \"before-sleep\", label: \"睡前\", description: \"作为放松活动\" },\n    { id: \"commute\", label: \"通勤路上\", description: \"利用交通时间\" },\n  ]\n\n  const handleMicroBehaviorToggle = (behaviorId: string) => {\n    const selectedCount = selectedMicroBehaviors.filter((b) => b.selected).length\n    const behavior = selectedMicroBehaviors.find((b) => b.id === behaviorId)\n\n    // 如果要选择第4个，显示toast提示\n    if (!behavior?.selected && selectedCount >= 3) {\n      toast({\n        title: \"选择数量已达上限\",\n        description: \"最多只能选择3个微行为，请先取消其他选择。\",\n        variant: \"destructive\",\n      })\n      return\n    }\n\n    setSelectedMicroBehaviors((prev) =>\n      prev.map((behavior) => (behavior.id === behaviorId ? { ...behavior, selected: !behavior.selected } : behavior)),\n    )\n  }\n\n  const initializeMicroBehaviors = () => {\n    if (selectedMicroBehaviors.length === 0) {\n      setSelectedMicroBehaviors(recommendedMicroBehaviors)\n      // 初始化所有选中的微行为卡片为展开状态\n      const initialExpandedState: { [key: string]: boolean } = {}\n      recommendedMicroBehaviors.forEach((behavior) => {\n        if (behavior.selected) {\n          initialExpandedState[behavior.id] = true\n        }\n      })\n      setExpandedCards(initialExpandedState)\n    }\n  }\n\n  const handleNextStep = async () => {\n    if (currentStep === 1) {\n      setIsLoadingRecommendations(true)\n      setCurrentStep(2)\n      // 模拟系统推荐微行为的等待时间\n      await new Promise((resolve) => setTimeout(resolve, 2000))\n      initializeMicroBehaviors()\n      setIsLoadingRecommendations(false)\n    } else if (currentStep === 2) {\n      const selectedCount = selectedMicroBehaviors.filter((b) => b.selected).length\n      if (selectedCount === 0) {\n        toast({\n          title: \"请选择微行为\",\n          description: \"至少需要选择1个微行为才能继续。\",\n          variant: \"destructive\",\n        })\n        return\n      }\n      // 为选中的微行为初始化展开状态和默认提醒设置\n      const initialExpandedState: { [key: string]: boolean } = {}\n      const initialReminderSettings: ReminderSettings = { ...reminderSettings }\n\n      selectedMicroBehaviors\n        .filter((b) => b.selected)\n        .forEach((behavior) => {\n          initialExpandedState[behavior.id] = true\n          // 如果该微行为还没有提醒设置，初始化为默认的自然提醒\n          if (!initialReminderSettings[behavior.id]) {\n            initialReminderSettings[behavior.id] = { type: \"anchor\" }\n          }\n        })\n\n      setExpandedCards(initialExpandedState)\n      setReminderSettings(initialReminderSettings)\n      setCurrentStep(3)\n    }\n  }\n\n  const handlePrevStep = () => {\n    setCurrentStep((prev) => Math.max(prev - 1, 1))\n  }\n\n  const handleComplete = () => {\n    // 这里处理完成创建的逻辑\n    const habitData = {\n      habitName,\n      habitDescription,\n      selectedMicroBehaviors: selectedMicroBehaviors.filter((b) => b.selected),\n      reminderSettings,\n    }\n\n    console.log(\"创建习惯:\", habitData)\n\n    // 将数据存储到 localStorage 或通过其他方式传递给下一个页面\n    localStorage.setItem(\"newHabitData\", JSON.stringify(habitData))\n\n    // 导航到完成页面\n    window.location.href = \"/habits/completeAdd\"\n  }\n\n  const toggleCardExpanded = (behaviorId: string) => {\n    setExpandedCards((prev) => ({\n      ...prev,\n      [behaviorId]: !prev[behaviorId],\n    }))\n  }\n\n  return (\n    <div className=\"min-h-screen bg-surface-main p-4\">\n      <div className=\"max-w-md mx-auto\">\n        {/* 进度指示器 */}\n        <div className=\"flex justify-center mb-6\">\n          <div className=\"flex items-center space-x-2\">\n            {[1, 2, 3].map((step) => (\n              <div key={step} className=\"flex items-center\">\n                <div\n                  className={`w-8 h-8 rounded-full flex items-center justify-center text-sm font-medium ${\n                    step <= currentStep ? \"bg-brand-primary text-white\" : \"bg-surface-divider text-text-secondary\"\n                  }`}\n                >\n                  {step < currentStep ? <Check className=\"w-4 h-4\" /> : step}\n                </div>\n                {step < 3 && <div className={`w-8 h-0.5 ${step < currentStep ? \"bg-brand-primary\" : \"bg-surface-divider\"}`} />}\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* 步骤内容 */}\n        <Card className=\"border-surface-divider shadow-sm h-[calc(100vh-8rem)]\">\n          <CardContent className=\"p-6 h-full\">\n            {currentStep === 1 && (\n              <SetHabitInfo\n                habitName={habitName}\n                setHabitName={setHabitName}\n                habitDescription={habitDescription}\n                setHabitDescription={setHabitDescription}\n                onNext={handleNextStep}\n                onCancel={() => window.history.back()}\n              />\n            )}\n            {currentStep === 2 && (\n              <SelectBehaviors\n                habitName={habitName}\n                selectedMicroBehaviors={selectedMicroBehaviors}\n                isLoadingRecommendations={isLoadingRecommendations}\n                onToggleBehavior={handleMicroBehaviorToggle}\n                onNext={handleNextStep}\n                onPrev={handlePrevStep}\n              />\n            )}\n            {currentStep === 3 && (\n              <SetBehaviorReminders\n                selectedMicroBehaviors={selectedMicroBehaviors}\n                reminderSettings={reminderSettings}\n                setReminderSettings={setReminderSettings}\n                anchorOptions={anchorOptions}\n                expandedCards={expandedCards}\n                onToggleCardExpanded={toggleCardExpanded}\n                onComplete={handleComplete}\n                onPrev={handlePrevStep}\n              />\n            )}\n          </CardContent>\n        </Card>\n        <Toaster />\n      </div>\n    </div>\n  )\n}",
            "components/add-habit/SelectBehaviors.tsx": "\"use client\"\n\nimport { Card, CardContent } from \"@/components/ui/card\"\nimport { Checkbox } from \"@/components/ui/checkbox\"\nimport { Label } from \"@/components/ui/label\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\nimport { MicroBehavior } from \"./types\"\nimport StepLayout from \"./StepLayout\"\n\ninterface SelectBehaviorsProps {\n  habitName: string\n  selectedMicroBehaviors: MicroBehavior[]\n  isLoadingRecommendations: boolean\n  onToggleBehavior: (behaviorId: string) => void\n  onNext: () => void\n  onPrev: () => void\n}\n\nexport default function SelectBehaviors({\n  habitName,\n  selectedMicroBehaviors,\n  isLoadingRecommendations,\n  onToggleBehavior,\n  onNext,\n  onPrev,\n}: SelectBehaviorsProps) {\n  if (isLoadingRecommendations) {\n    return (\n      <StepLayout\n        stepNumber={2}\n        stepTitle=\"设计你的微行动\"\n        needsScroll={false}\n        fixedContent={\n          <Card className=\"border-surface-divider bg-surface-main\">\n            <CardContent className=\"p-4\">\n              <p className=\"text-sm text-text-secondary\">习惯：</p>\n              <p className=\"font-medium text-text-primary\">{habitName}</p>\n            </CardContent>\n          </Card>\n        }\n        leftButton={{\n          text: \"上一步\",\n          icon: <ArrowLeft className=\"w-4 h-4 mr-2\" />,\n          onClick: onPrev,\n        }}\n        rightButton={{\n          text: \"下一步\",\n          icon: <ArrowRight className=\"w-4 h-4 ml-2\" />,\n          onClick: onNext,\n        }}\n      >\n        <div className=\"flex flex-col items-center justify-center py-16\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-brand-primary mb-6\"></div>\n          <h3 className=\"text-lg font-medium text-text-primary mb-2\">正在为您推荐微行为...</h3>\n          <p className=\"text-sm text-text-secondary text-center leading-relaxed\">\n            基于您的习惯目标，我们正在分析并推荐\n            <br />\n            最适合的微行为组合\n          </p>\n        </div>\n      </StepLayout>\n    )\n  }\n\n  return (\n    <StepLayout\n      stepNumber={2}\n      stepTitle=\"设计你的微行动\"\n      needsScroll={true}\n      fixedContent={\n        <div className=\"space-y-4\">\n          <Card className=\"border-surface-divider bg-surface-main\">\n            <CardContent className=\"p-4\">\n              <p className=\"text-sm text-text-secondary\">习惯：</p>\n              <p className=\"font-medium text-text-primary\">{habitName}</p>\n            </CardContent>\n          </Card>\n\n          <div>\n            <div className=\"flex justify-between items-center mb-2\">\n              <h3 className=\"font-medium text-text-primary\">推荐的微行为</h3>\n              <span className=\"text-sm text-text-secondary\">\n                已选择 {selectedMicroBehaviors.filter((b) => b.selected).length}/3\n              </span>\n            </div>\n            <p className=\"text-sm text-text-secondary\">选择1-3个简单易行的微行为，让习惯更容易坚持</p>\n          </div>\n        </div>\n      }\n      leftButton={{\n        text: \"上一步\",\n        icon: <ArrowLeft className=\"w-4 h-4 mr-2\" />,\n        onClick: onPrev,\n      }}\n      rightButton={{\n        text: \"下一步\",\n        icon: <ArrowRight className=\"w-4 h-4 ml-2\" />,\n        onClick: onNext,\n      }}\n    >\n      <div className=\"space-y-3\">\n        {selectedMicroBehaviors.map((behavior) => (\n          <Card key={behavior.id} className=\"border-surface-divider\">\n            <CardContent\n              className=\"p-4 cursor-pointer hover:bg-gray-50 transition-colors\"\n              onClick={() => onToggleBehavior(behavior.id)}\n            >\n              <div className=\"flex items-start space-x-3\">\n                <Checkbox\n                  id={behavior.id}\n                  checked={behavior.selected}\n                  onCheckedChange={() => onToggleBehavior(behavior.id)}\n                  className=\"mt-1 pointer-events-none\"\n                />\n                <div className=\"flex-1\">\n                  <Label\n                    htmlFor={behavior.id}\n                    className=\"font-medium cursor-pointer text-text-primary pointer-events-none\"\n                  >\n                    {behavior.title}\n                  </Label>\n                  <p className=\"text-sm text-text-secondary mt-1 pointer-events-none\">{behavior.description}</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n    </StepLayout>\n  )\n}",
            "components/add-habit/SetBehaviorReminders.tsx": "\"use client\"\n\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\"\nimport { Label } from \"@/components/ui/label\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { ArrowLeft, ArrowUp, ArrowDown, Check, Clock, Link } from \"lucide-react\"\nimport { MicroBehavior, AnchorOption, ReminderSettings } from \"./types\"\nimport StepLayout from \"./StepLayout\"\n\ninterface SetBehaviorRemindersProps {\n  selectedMicroBehaviors: MicroBehavior[]\n  reminderSettings: ReminderSettings\n  setReminderSettings: (settings: ReminderSettings | ((prev: ReminderSettings) => ReminderSettings)) => void\n  anchorOptions: AnchorOption[]\n  expandedCards: { [key: string]: boolean }\n  onToggleCardExpanded: (behaviorId: string) => void\n  onComplete: () => void\n  onPrev: () => void\n}\n\nexport default function SetBehaviorReminders({\n  selectedMicroBehaviors,\n  reminderSettings,\n  setReminderSettings,\n  anchorOptions,\n  expandedCards,\n  onToggleCardExpanded,\n  onComplete,\n  onPrev,\n}: SetBehaviorRemindersProps) {\n  const getReminderDisplayText = (behaviorId: string) => {\n    const setting = reminderSettings[behaviorId]\n    if (!setting || !setting.type) {\n      return \"需要设置提醒方式\"\n    }\n\n    if (setting.type === \"anchor\") {\n      if (setting.anchor) {\n        const anchorOption = anchorOptions.find((option) => option.id === setting.anchor)\n        return `自然提醒：${anchorOption?.label || \"未选择锚点\"}`\n      }\n      return \"自然提醒（未选择锚点）\"\n    } else if (setting.type === \"timer\") {\n      if (setting.time) {\n        return `定时提醒：${setting.time}`\n      }\n      return \"定时提醒（未选择时间）\"\n    }\n\n    return \"需要设置提醒方式\"\n  }\n\n  return (\n    <StepLayout\n      stepNumber={3}\n      stepTitle=\"设置提醒\"\n      needsScroll={true}\n      leftButton={{\n        text: \"上一步\",\n        icon: <ArrowLeft className=\"w-4 h-4 mr-2\" />,\n        onClick: onPrev,\n      }}\n      rightButton={{\n        text: \"完成创建\",\n        icon: <Check className=\"w-4 h-4 mr-2\" />,\n        onClick: onComplete,\n        className: \"bg-brand-accent hover:bg-brand-accent/80 text-white\",\n      }}\n    >\n      <div className=\"space-y-6\">\n        {selectedMicroBehaviors\n          .filter((behavior) => behavior.selected)\n          .map((behavior) => (\n            <Card key={behavior.id} className=\"border-surface-divider\">\n              {expandedCards[behavior.id] ? (\n                // 展开状态 - 完整编辑界面\n                <>\n                  <CardHeader\n                    className=\"pb-3 cursor-pointer hover:bg-gray-50 transition-colors\"\n                    onClick={() => onToggleCardExpanded(behavior.id)}\n                  >\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex-1\">\n                        <CardTitle className=\"text-base text-text-primary\">{behavior.title}</CardTitle>\n                        <p className=\"text-sm text-text-secondary\">{behavior.description}</p>\n                      </div>\n                      <div className=\"ml-2\">\n                        <ArrowUp className=\"w-4 h-4 text-text-secondary\" />\n                      </div>\n                    </div>\n                  </CardHeader>\n                  <CardContent className=\"space-y-4\">\n                    <div>\n                      <Label className=\"text-text-primary font-medium mb-3 block\">选择提醒方式</Label>\n                      <RadioGroup\n                        value={reminderSettings[behavior.id]?.type || \"anchor\"}\n                        onValueChange={(value: \"anchor\" | \"timer\") =>\n                          setReminderSettings((prev) => ({\n                            ...prev,\n                            [behavior.id]: { ...prev[behavior.id], type: value },\n                          }))\n                        }\n                      >\n                        <div className=\"space-y-3\">\n                          <Card className=\"border-brand-secondary bg-blue-50\">\n                            <CardContent className=\"p-3\">\n                              <div className=\"flex items-center space-x-2\">\n                                <RadioGroupItem value=\"anchor\" id={`anchor-${behavior.id}`} />\n                                <Label htmlFor={`anchor-${behavior.id}`} className=\"flex-1 cursor-pointer\">\n                                  <div className=\"flex items-center\">\n                                    <Link className=\"w-4 h-4 mr-2 text-brand-secondary\" />\n                                    <span className=\"font-medium text-text-primary\">自然提醒（推荐）</span>\n                                  </div>\n                                  <p className=\"text-sm text-text-secondary mt-1\">与现有习惯关联，更容易记住</p>\n                                </Label>\n                              </div>\n                            </CardContent>\n                          </Card>\n\n                          <Card className=\"border-surface-divider\">\n                            <CardContent className=\"p-3\">\n                              <div className=\"flex items-center space-x-2\">\n                                <RadioGroupItem value=\"timer\" id={`timer-${behavior.id}`} />\n                                <Label htmlFor={`timer-${behavior.id}`} className=\"flex-1 cursor-pointer\">\n                                  <div className=\"flex items-center\">\n                                    <Clock className=\"w-4 h-4 mr-2 text-text-secondary\" />\n                                    <span className=\"font-medium text-text-primary\">定时提醒</span>\n                                  </div>\n                                  <p className=\"text-sm text-text-secondary mt-1\">设置固定时间提醒</p>\n                                </Label>\n                              </div>\n                            </CardContent>\n                          </Card>\n                        </div>\n                      </RadioGroup>\n                    </div>\n\n                    <div>\n                      {reminderSettings[behavior.id]?.type === \"timer\" ? (\n                        <>\n                          <Label className=\"text-text-primary font-medium\">选择提醒时间</Label>\n                          <Select\n                            onValueChange={(value) =>\n                              setReminderSettings((prev) => ({\n                                ...prev,\n                                [behavior.id]: { ...prev[behavior.id], time: value },\n                              }))\n                            }\n                            value={reminderSettings[behavior.id]?.time}\n                          >\n                            <SelectTrigger className=\"mt-2 border-surface-divider\">\n                              <SelectValue placeholder=\"选择每天的提醒时间\" />\n                            </SelectTrigger>\n                            <SelectContent>\n                              <SelectItem value=\"06:00\">早上 6:00</SelectItem>\n                              <SelectItem value=\"07:00\">早上 7:00</SelectItem>\n                              <SelectItem value=\"08:00\">早上 8:00</SelectItem>\n                              <SelectItem value=\"09:00\">早上 9:00</SelectItem>\n                              <SelectItem value=\"12:00\">中午 12:00</SelectItem>\n                              <SelectItem value=\"18:00\">下午 6:00</SelectItem>\n                              <SelectItem value=\"19:00\">下午 7:00</SelectItem>\n                              <SelectItem value=\"20:00\">下午 8:00</SelectItem>\n                              <SelectItem value=\"21:00\">下午 9:00</SelectItem>\n                              <SelectItem value=\"22:00\">下午 10:00</SelectItem>\n                            </SelectContent>\n                          </Select>\n                        </>\n                      ) : (\n                        <>\n                          <Label className=\"text-text-primary font-medium\">选择锚点习惯</Label>\n                          <Select\n                            onValueChange={(value) =>\n                              setReminderSettings((prev) => ({\n                                ...prev,\n                                [behavior.id]: { ...prev[behavior.id], anchor: value },\n                              }))\n                            }\n                            value={reminderSettings[behavior.id]?.anchor}\n                          >\n                            <SelectTrigger className=\"mt-2 border-surface-divider\">\n                              <SelectValue placeholder=\"选择一个现有的日常习惯\" />\n                            </SelectTrigger>\n                            <SelectContent>\n                              {anchorOptions.map((option) => (\n                                <SelectItem key={option.id} value={option.id}>\n                                  <div>\n                                    <div className=\"font-medium\">{option.label}</div>\n                                    <div className=\"text-sm text-text-secondary\">{option.description}</div>\n                                  </div>\n                                </SelectItem>\n                              ))}\n                            </SelectContent>\n                          </Select>\n                        </>\n                      )}\n                    </div>\n                  </CardContent>\n                </>\n              ) : (\n                // 收起状态 - 简略只读信息\n                <CardContent\n                  className=\"p-4 cursor-pointer hover:bg-gray-50 transition-colors\"\n                  onClick={() => onToggleCardExpanded(behavior.id)}\n                >\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex-1\">\n                      <div className=\"flex items-center justify-between mb-2\">\n                        <h4 className=\"font-medium text-text-primary\">{behavior.title}</h4>\n                        <ArrowDown className=\"w-4 h-4 text-text-secondary\" />\n                      </div>\n                      <p className=\"text-sm text-text-secondary mb-2\">{behavior.description}</p>\n                      <div className=\"flex items-center\">\n                        <span className=\"text-xs text-text-secondary mr-2\">提醒方式:</span>\n                        <span\n                          className={`text-xs ${\n                            reminderSettings[behavior.id]?.type ? \"text-brand-primary\" : \"text-brand-accent\"\n                          }`}\n                        >\n                          {getReminderDisplayText(behavior.id)}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                </CardContent>\n              )}\n            </Card>\n          ))}\n      </div>\n    </StepLayout>\n  )\n}",
            "components/add-habit/SetHabitInfo.tsx": "\"use client\"\n\nimport { Input } from \"@/components/ui/input\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { Label } from \"@/components/ui/label\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\nimport StepLayout from \"./StepLayout\"\n\ninterface SetHabitInfoProps {\n  habitName: string\n  setHabitName: (name: string) => void\n  habitDescription: string\n  setHabitDescription: (description: string) => void\n  onNext: () => void\n  onCancel: () => void\n}\n\nexport default function SetHabitInfo({\n  habitName,\n  setHabitName,\n  habitDescription,\n  setHabitDescription,\n  onNext,\n  onCancel,\n}: SetHabitInfoProps) {\n  return (\n    <StepLayout\n      stepNumber={1}\n      stepTitle=\"定义你的习惯\"\n      needsScroll={false}\n      leftButton={{\n        text: \"取消\",\n        icon: <ArrowLeft className=\"w-4 h-4 mr-2\" />,\n        onClick: onCancel,\n      }}\n      rightButton={{\n        text: \"下一步\",\n        icon: <ArrowRight className=\"w-4 h-4 ml-2\" />,\n        onClick: onNext,\n        disabled: !habitName.trim(),\n      }}\n    >\n      <div className=\"space-y-4\">\n        <div>\n          <Label htmlFor=\"habit-name\" className=\"text-text-primary font-medium\">\n            习惯名称\n          </Label>\n          <Input\n            id=\"habit-name\"\n            value={habitName}\n            onChange={(e) => setHabitName(e.target.value)}\n            placeholder=\"我想养成的好习惯是...\"\n            className=\"mt-2 border-surface-divider focus:border-brand-primary\"\n          />\n        </div>\n\n        <div>\n          <Label htmlFor=\"habit-description\" className=\"text-text-primary font-medium\">\n            习惯描述 (可选)\n          </Label>\n          <Textarea\n            id=\"habit-description\"\n            value={habitDescription}\n            onChange={(e) => setHabitDescription(e.target.value)}\n            placeholder=\"我为什么想养成这个习惯？它对我有什么意义？\"\n            className=\"mt-2 border-surface-divider focus:border-brand-primary min-h-[100px]\"\n          />\n        </div>\n      </div>\n    </StepLayout>\n  )\n}"
        },
        "deleted_files": []
    },
    {
        "commit_message": "title",
        "added_files": {},
        "modified_files": {
            "app/layout.tsx": "import type { Metadata } from 'next'\nimport './globals.css'\n\nexport const metadata: Metadata = {\n  title: 'Habit MAP',\n  description: 'Build your habit with MAP',\n}\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode\n}>) {\n  return (\n    <html lang=\"zh-CN\">\n      <body>{children}</body>\n    </html>\n  )\n}"
        },
        "deleted_files": []
    },
    {
        "commit_message": "card",
        "added_files": {
            "components/add-habit/ProgressIndicator.tsx": "\"use client\"\n\nimport { Check } from \"lucide-react\"\n\ninterface ProgressIndicatorProps {\n  currentStep: number\n  totalSteps: number\n}\n\nexport default function ProgressIndicator({ currentStep, totalSteps }: ProgressIndicatorProps) {\n  return (\n    <div className=\"flex justify-center\">\n      <div className=\"flex items-center space-x-2\">\n        {Array.from({ length: totalSteps }, (_, index) => {\n          const step = index + 1\n          return (\n            <div key={step} className=\"flex items-center\">\n              <div\n                className={`w-8 h-8 rounded-full flex items-center justify-center text-sm font-medium ${\n                  step <= currentStep ? \"bg-brand-primary text-white\" : \"bg-surface-divider text-text-secondary\"\n                }`}\n              >\n                {step < currentStep ? <Check className=\"w-4 h-4\" /> : step}\n              </div>\n              {step < totalSteps && (\n                <div className={`w-8 h-0.5 ${step < currentStep ? \"bg-brand-primary\" : \"bg-surface-divider\"}`} />\n              )}\n            </div>\n          )\n        })}\n      </div>\n    </div>\n  )\n}"
        },
        "modified_files": {
            "app/habits/add/page.tsx": "\"use client\"\n\nimport { useState } from \"react\"\nimport { useToast } from \"@/hooks/use-toast\"\nimport { Toaster } from \"@/components/ui/toaster\"\nimport SetHabitInfo from \"@/components/add-habit/SetHabitInfo\"\nimport SelectBehaviors from \"@/components/add-habit/SelectBehaviors\"\nimport SetBehaviorReminders from \"@/components/add-habit/SetBehaviorReminders\"\nimport { MicroBehavior, AnchorOption, ReminderSettings } from \"@/components/add-habit/types\"\n\nexport default function AddHabitPage() {\n  const [currentStep, setCurrentStep] = useState(1)\n  const [habitName, setHabitName] = useState(\"\")\n  const [habitDescription, setHabitDescription] = useState(\"\")\n  const [selectedMicroBehaviors, setSelectedMicroBehaviors] = useState<MicroBehavior[]>([])\n  const [reminderSettings, setReminderSettings] = useState<ReminderSettings>({})\n  const { toast } = useToast()\n  const [expandedCards, setExpandedCards] = useState<{ [key: string]: boolean }>({})\n  const [isLoadingRecommendations, setIsLoadingRecommendations] = useState(false)\n\n  // 模拟推荐的微行为\n  const recommendedMicroBehaviors: MicroBehavior[] = [\n    {\n      id: \"1\",\n      title: \"打开书本\",\n      description: \"每天只需要打开一本书，翻到任意一页\",\n      selected: false,\n    },\n    {\n      id: \"2\",\n      title: \"阅读一段话\",\n      description: \"读完一个段落就算完成\",\n      selected: false,\n    },\n    {\n      id: \"3\",\n      title: \"阅读2分钟\",\n      description: \"设置计时器，专注阅读2分钟\",\n      selected: false,\n    },\n    {\n      id: \"4\",\n      title: \"准备阅读环境\",\n      description: \"找一个安静的地方，准备好书本和水杯\",\n      selected: false,\n    },\n    {\n      id: \"5\",\n      title: \"记录一个想法\",\n      description: \"阅读后写下一句话的感受或想法\",\n      selected: false,\n    },\n    {\n      id: \"6\",\n      title: \"朗读一句话\",\n      description: \"大声朗读书中的任意一句话\",\n      selected: false,\n    },\n    {\n      id: \"7\",\n      title: \"标记一个重点\",\n      description: \"用笔或便签标记一个有趣的内容\",\n      selected: false,\n    },\n    {\n      id: \"8\",\n      title: \"翻阅目录\",\n      description: \"浏览书本目录，选择感兴趣的章节\",\n      selected: false,\n    },\n    {\n      id: \"9\",\n      title: \"设置阅读提醒\",\n      description: \"在手机上设置明天的阅读提醒\",\n      selected: false,\n    },\n    {\n      id: \"10\",\n      title: \"分享阅读计划\",\n      description: \"告诉朋友或家人你今天的阅读计划\",\n      selected: false,\n    },\n  ]\n\n  const anchorOptions: AnchorOption[] = [\n    { id: \"morning-brush\", label: \"早上刷牙后\", description: \"利用晨间例行公事\" },\n    { id: \"coffee\", label: \"喝咖啡/茶时\", description: \"与日常饮品习惯结合\" },\n    { id: \"lunch-break\", label: \"午休时间\", description: \"利用工作间隙\" },\n    { id: \"before-sleep\", label: \"睡前\", description: \"作为放松活动\" },\n    { id: \"commute\", label: \"通勤路上\", description: \"利用交通时间\" },\n  ]\n\n  const handleMicroBehaviorToggle = (behaviorId: string) => {\n    const selectedCount = selectedMicroBehaviors.filter((b) => b.selected).length\n    const behavior = selectedMicroBehaviors.find((b) => b.id === behaviorId)\n\n    // 如果要选择第4个，显示toast提示\n    if (!behavior?.selected && selectedCount >= 3) {\n      toast({\n        title: \"选择数量已达上限\",\n        description: \"最多只能选择3个微行为，请先取消其他选择。\",\n        variant: \"destructive\",\n      })\n      return\n    }\n\n    setSelectedMicroBehaviors((prev) =>\n      prev.map((behavior) => (behavior.id === behaviorId ? { ...behavior, selected: !behavior.selected } : behavior)),\n    )\n  }\n\n  const initializeMicroBehaviors = () => {\n    if (selectedMicroBehaviors.length === 0) {\n      setSelectedMicroBehaviors(recommendedMicroBehaviors)\n      // 初始化所有选中的微行为卡片为展开状态\n      const initialExpandedState: { [key: string]: boolean } = {}\n      recommendedMicroBehaviors.forEach((behavior) => {\n        if (behavior.selected) {\n          initialExpandedState[behavior.id] = true\n        }\n      })\n      setExpandedCards(initialExpandedState)\n    }\n  }\n\n  const handleNextStep = async () => {\n    if (currentStep === 1) {\n      setIsLoadingRecommendations(true)\n      setCurrentStep(2)\n      // 模拟系统推荐微行为的等待时间\n      await new Promise((resolve) => setTimeout(resolve, 2000))\n      initializeMicroBehaviors()\n      setIsLoadingRecommendations(false)\n    } else if (currentStep === 2) {\n      const selectedCount = selectedMicroBehaviors.filter((b) => b.selected).length\n      if (selectedCount === 0) {\n        toast({\n          title: \"请选择微行为\",\n          description: \"至少需要选择1个微行为才能继续。\",\n          variant: \"destructive\",\n        })\n        return\n      }\n      // 为选中的微行为初始化展开状态和默认提醒设置\n      const initialExpandedState: { [key: string]: boolean } = {}\n      const initialReminderSettings: ReminderSettings = { ...reminderSettings }\n\n      selectedMicroBehaviors\n        .filter((b) => b.selected)\n        .forEach((behavior) => {\n          initialExpandedState[behavior.id] = true\n          // 如果该微行为还没有提醒设置，初始化为默认的自然提醒\n          if (!initialReminderSettings[behavior.id]) {\n            initialReminderSettings[behavior.id] = { type: \"anchor\" }\n          }\n        })\n\n      setExpandedCards(initialExpandedState)\n      setReminderSettings(initialReminderSettings)\n      setCurrentStep(3)\n    }\n  }\n\n  const handlePrevStep = () => {\n    setCurrentStep((prev) => Math.max(prev - 1, 1))\n  }\n\n  const handleComplete = () => {\n    // 这里处理完成创建的逻辑\n    const habitData = {\n      habitName,\n      habitDescription,\n      selectedMicroBehaviors: selectedMicroBehaviors.filter((b) => b.selected),\n      reminderSettings,\n    }\n\n    console.log(\"创建习惯:\", habitData)\n\n    // 将数据存储到 localStorage 或通过其他方式传递给下一个页面\n    localStorage.setItem(\"newHabitData\", JSON.stringify(habitData))\n\n    // 导航到完成页面\n    window.location.href = \"/habits/completeAdd\"\n  }\n\n  const toggleCardExpanded = (behaviorId: string) => {\n    setExpandedCards((prev) => ({\n      ...prev,\n      [behaviorId]: !prev[behaviorId],\n    }))\n  }\n\n  return (\n    <div className=\"min-h-screen bg-surface-main\">\n      {/* 步骤内容 */}\n      <div className=\"h-screen flex flex-col\">\n        {/* 步骤内容区域 - 占用全部空间 */}\n        <div className=\"flex-1 min-h-0\">\n          {currentStep === 1 && (\n            <SetHabitInfo\n              habitName={habitName}\n              setHabitName={setHabitName}\n              habitDescription={habitDescription}\n              setHabitDescription={setHabitDescription}\n              onNext={handleNextStep}\n              onCancel={() => window.history.back()}\n            />\n          )}\n          {currentStep === 2 && (\n            <SelectBehaviors\n              habitName={habitName}\n              selectedMicroBehaviors={selectedMicroBehaviors}\n              isLoadingRecommendations={isLoadingRecommendations}\n              onToggleBehavior={handleMicroBehaviorToggle}\n              onNext={handleNextStep}\n              onPrev={handlePrevStep}\n            />\n          )}\n          {currentStep === 3 && (\n            <SetBehaviorReminders\n              selectedMicroBehaviors={selectedMicroBehaviors}\n              reminderSettings={reminderSettings}\n              setReminderSettings={setReminderSettings}\n              anchorOptions={anchorOptions}\n              expandedCards={expandedCards}\n              onToggleCardExpanded={toggleCardExpanded}\n              onComplete={handleComplete}\n              onPrev={handlePrevStep}\n            />\n          )}\n        </div>\n      </div>\n      <Toaster />\n    </div>\n  )\n}",
            "components/add-habit/StepLayout.tsx": "\"use client\"\n\nimport { Button } from \"@/components/ui/button\"\nimport ProgressIndicator from \"./ProgressIndicator\"\nimport React from \"react\"\n\ninterface StepLayoutProps {\n  stepNumber: number\n  stepTitle: string\n  totalSteps?: number\n  needsScroll?: boolean\n  fixedContent?: React.ReactNode // 固定在滚动区域上方的内容\n  leftButton: {\n    text: string\n    icon: React.ReactNode\n    onClick: () => void\n    variant?: \"ghost\" | \"default\"\n    className?: string\n  }\n  rightButton: {\n    text: string\n    icon: React.ReactNode\n    onClick: () => void\n    disabled?: boolean\n    className?: string\n  }\n  children: React.ReactNode\n}\n\nexport default function StepLayout({\n  stepNumber,\n  stepTitle,\n  totalSteps = 3,\n  needsScroll = false,\n  fixedContent,\n  leftButton,\n  rightButton,\n  children,\n}: StepLayoutProps) {\n  return (\n    <div className=\"flex flex-col h-full\">\n      {/* 顶部固定区域：进度指示器和标题 */}\n      <div className=\"flex-shrink-0 p-4 pb-0\">\n        {/* 进度指示器 */}\n        <div className=\"mb-6\">\n          <ProgressIndicator currentStep={stepNumber} totalSteps={totalSteps} />\n        </div>\n\n        {/* 步骤标题 */}\n        <div className=\"text-center mb-4\">\n          <h1 className=\"text-xl font-bold text-text-primary mb-2\">创建新习惯</h1>\n          <p className=\"text-sm text-text-secondary\">第{stepNumber}步：{stepTitle}</p>\n        </div>\n      </div>\n\n      {/* 固定内容区域（可选） */}\n      {fixedContent && (\n        <div className=\"flex-shrink-0 px-4 mb-4\">\n          {fixedContent}\n        </div>\n      )}\n\n      {/* 中间区域：内容 */}\n      {needsScroll ? (\n        <div className=\"flex-1 relative mb-4 min-h-0 px-4\">\n          {/* 滚动容器 */}\n          <div className=\"h-full overflow-y-auto scrollbar-hide\">\n            <div className=\"pt-2 pb-2\">\n              {children}\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"flex-1 min-h-0 py-4 px-4\">\n          {children}\n        </div>\n      )}\n\n      {/* 底部固定区域：按钮 */}\n      <div className=\"flex-shrink-0 flex justify-between pt-4 px-4 border-t border-surface-divider\">\n        <Button\n          variant={leftButton.variant || \"ghost\"}\n          onClick={leftButton.onClick}\n          className={leftButton.className || \"text-text-secondary\"}\n        >\n          {leftButton.icon}\n          {leftButton.text}\n        </Button>\n        <Button\n          onClick={rightButton.onClick}\n          disabled={rightButton.disabled}\n          className={rightButton.className || \"bg-brand-primary hover:bg-brand-primary/80 text-white\"}\n        >\n          {rightButton.text}\n          {rightButton.icon}\n        </Button>\n      </div>\n    </div>\n  )\n}"
        },
        "deleted_files": []
    },
    {
        "commit_message": "fix style",
        "added_files": {},
        "modified_files": {
            "app/habits/completeAdd/page.tsx": "\"use client\"\n\nimport { useEffect, useState } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Check, Sparkles, Heart, Target } from \"lucide-react\"\n\ninterface MicroBehavior {\n  id: string\n  title: string\n  description: string\n  selected: boolean\n}\n\ninterface HabitData {\n  habitName: string\n  habitDescription: string\n  selectedMicroBehaviors: MicroBehavior[]\n  reminderSettings: { [key: string]: any }\n}\n\nexport default function CompleteAddPage() {\n  const [habitData, setHabitData] = useState<HabitData | null>(null)\n\n  const anchorOptions = [\n    { id: \"morning-brush\", label: \"早上刷牙后\", description: \"利用晨间例行公事\" },\n    { id: \"coffee\", label: \"喝咖啡/茶时\", description: \"与日常饮品习惯结合\" },\n    { id: \"lunch-break\", label: \"午休时间\", description: \"利用工作间隙\" },\n    { id: \"before-sleep\", label: \"睡前\", description: \"作为放松活动\" },\n    { id: \"commute\", label: \"通勤路上\", description: \"利用交通时间\" },\n  ]\n\n  useEffect(() => {\n    // 从 localStorage 获取数据\n    const storedData = localStorage.getItem(\"newHabitData\")\n    if (storedData) {\n      setHabitData(JSON.parse(storedData))\n    }\n  }, [])\n\n  const getReminderText = (behaviorId: string) => {\n    if (!habitData) return \"\"\n\n    const setting = habitData.reminderSettings[behaviorId]\n    if (!setting || !setting.type) {\n      return \"未设置提醒\"\n    }\n\n    if (setting.type === \"anchor\") {\n      if (setting.anchor) {\n        const anchorOption = anchorOptions.find((option) => option.id === setting.anchor)\n        return `${anchorOption?.label || \"未知锚点\"}`\n      }\n      return \"自然提醒（未选择锚点）\"\n    } else if (setting.type === \"timer\") {\n      if (setting.time) {\n        return `每天 ${setting.time}`\n      }\n      return \"定时提醒（未选择时间）\"\n    }\n\n    return \"未设置提醒\"\n  }\n\n  const handleComplete = () => {\n    // 清除临时数据\n    localStorage.removeItem(\"newHabitData\")\n    // 导航到习惯列表页或今日行动页\n    window.location.href = \"/habits\"\n  }\n\n  if (!habitData) {\n    return (\n      <div className=\"min-h-screen bg-surface-main flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-brand-primary mx-auto\"></div>\n          <p className=\"text-text-secondary mt-4\">加载中...</p>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"min-h-screen bg-surface-main p-4\">\n      <div className=\"max-w-md mx-auto\">\n        {/* 成功标识 */}\n        <div className=\"text-center mb-6\">\n          <div className=\"relative mx-auto w-16 h-16 mb-4\">\n            <div className=\"absolute inset-0 bg-brand-primary rounded-full flex items-center justify-center\">\n              <Check className=\"w-8 h-8 text-white\" />\n            </div>\n            <div className=\"absolute -top-2 -right-2\">\n              <Sparkles className=\"w-6 h-6 text-brand-accent\" />\n            </div>\n          </div>\n\n          <h1 className=\"text-xl font-bold text-text-primary mb-1\">🎉 太棒了！</h1>\n          <p className=\"text-text-secondary mb-1\">你的新习惯已经创建成功</p>\n          <p className=\"text-sm text-brand-secondary flex items-center justify-center\">\n            <Heart className=\"w-4 h-4 mr-1\" />\n            每一个小行动都是改变的开始\n          </p>\n        </div>\n\n        {/* 习惯信息和微行为计划合并卡片 */}\n        <Card className=\"border-brand-primary border-2 mb-6 bg-gradient-to-br from-white to-surface-main\">\n          <CardHeader className=\"pb-3\">\n            <div className=\"flex items-center mb-2\">\n              <Target className=\"w-5 h-5 text-brand-primary mr-2\" />\n              <CardTitle className=\"text-lg text-text-primary\">你的新习惯</CardTitle>\n            </div>\n            <div>\n              <h3 className=\"font-bold text-text-primary text-lg mb-2\">{habitData.habitName}</h3>\n              {habitData.habitDescription && (\n                <p className=\"text-text-secondary text-sm leading-relaxed mb-4\">{habitData.habitDescription}</p>\n              )}\n            </div>\n\n            <div className=\"flex items-center mt-4 mb-2\">\n              <Sparkles className=\"w-5 h-5 mr-2 text-brand-accent\" />\n              <h2 className=\"text-lg font-bold text-text-primary\">你的微行为计划</h2>\n            </div>\n          </CardHeader>\n\n          <CardContent className=\"pt-0 space-y-2\">\n            {habitData.selectedMicroBehaviors.map((behavior, index) => (\n              <div key={behavior.id} className=\"bg-gray-50/80 rounded-lg p-2.5\">\n                <div className=\"flex items-start space-x-2.5\">\n                  <div className=\"flex-shrink-0 w-4 h-4 bg-brand-primary rounded-full flex items-center justify-center text-white text-xs font-medium\">\n                    {index + 1}\n                  </div>\n                  <div className=\"flex-1\">\n                    <h4 className=\"font-medium text-text-primary mb-1 text-sm\">{behavior.title}</h4>\n                    <p className=\"text-xs text-text-secondary mb-1.5\">{behavior.description}</p>\n\n                    <div className=\"flex items-center text-xs\">\n                      <span className=\"text-text-secondary mr-1.5\">📅 提醒方式:</span>\n                      <span className=\"text-brand-primary font-medium\">{getReminderText(behavior.id)}</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </CardContent>\n        </Card>\n\n        {/* 鼓励文案 */}\n        <Card className=\"border-brand-accent bg-gradient-to-r from-brand-accent/10 to-brand-primary/10 mb-6\">\n          <CardContent className=\"p-3 text-center\">\n            <p className=\"text-text-primary font-medium mb-2 text-sm\">✨ 记住福格行为模型的秘诀</p>\n            <p className=\"text-sm text-text-secondary leading-relaxed\">\n              从小事开始，利用现有习惯作为提醒，持续的小行动会带来巨大的改变！\n            </p>\n          </CardContent>\n        </Card>\n\n        {/* 完成按钮 */}\n        <Button\n          onClick={handleComplete}\n          className=\"w-full bg-brand-primary hover:bg-brand-primary/80 text-white py-2 text-lg font-medium\"\n        >\n          开始我的习惯之旅 🚀\n        </Button>\n\n        {/* 底部提示 */}\n        <p className=\"text-center text-xs text-text-secondary mt-4\">你可以随时在习惯列表中查看和调整你的微行为</p>\n      </div>\n    </div>\n  )\n}",
            "components/add-habit/ProgressIndicator.tsx": "\"use client\"\n\nimport { Check } from \"lucide-react\"\n\ninterface ProgressIndicatorProps {\n  currentStep: number\n  totalSteps: number\n}\n\nexport default function ProgressIndicator({ currentStep, totalSteps }: ProgressIndicatorProps) {\n  return (\n    <div className=\"flex justify-center\">\n      <div className=\"flex items-center space-x-1\">\n        {Array.from({ length: totalSteps }, (_, index) => {\n          const step = index + 1\n          return (\n            <div key={step} className=\"flex items-center\">\n              <div\n                className={`w-6 h-6 rounded-full flex items-center justify-center ${\n                  step < currentStep \n                    ? \"bg-brand-primary text-white\" \n                    : step === currentStep\n                    ? \"border-2 border-brand-primary bg-transparent\"\n                    : \"border-2 border-brand-primary/80 bg-transparent opacity-50\"\n                }`}\n              >\n                {step < currentStep ? (\n                  <Check className=\"w-3 h-3\" />\n                ) : null}\n              </div>\n              {step < totalSteps && (\n                <div className={`w-6 h-0.5 mx-1 ${step < currentStep ? \"bg-brand-primary\" : \"bg-brand-primary/80\"}`} />\n              )}\n            </div>\n          )\n        })}\n      </div>\n    </div>\n  )\n}",
            "components/add-habit/SelectBehaviors.tsx": "\"use client\"\n\nimport { Card, CardContent } from \"@/components/ui/card\"\nimport { Checkbox } from \"@/components/ui/checkbox\"\nimport { Label } from \"@/components/ui/label\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\nimport { MicroBehavior } from \"./types\"\nimport StepLayout from \"./StepLayout\"\n\ninterface SelectBehaviorsProps {\n  habitName: string\n  selectedMicroBehaviors: MicroBehavior[]\n  isLoadingRecommendations: boolean\n  onToggleBehavior: (behaviorId: string) => void\n  onNext: () => void\n  onPrev: () => void\n}\n\nexport default function SelectBehaviors({\n  habitName,\n  selectedMicroBehaviors,\n  isLoadingRecommendations,\n  onToggleBehavior,\n  onNext,\n  onPrev,\n}: SelectBehaviorsProps) {\n  if (isLoadingRecommendations) {\n    return (\n      <StepLayout\n        stepNumber={2}\n        stepTitle=\"设计你的微行为\"\n        needsScroll={false}\n        fixedContent={\n          <Card className=\"border-surface-divider bg-surface-main\">\n            <CardContent className=\"p-4\">\n              <p className=\"text-sm text-text-secondary\">习惯：</p>\n              <p className=\"font-medium text-text-primary\">{habitName}</p>\n            </CardContent>\n          </Card>\n        }\n        leftButton={{\n          text: \"上一步\",\n          icon: <ArrowLeft className=\"w-4 h-4 mr-2\" />,\n          onClick: onPrev,\n        }}\n        rightButton={{\n          text: \"下一步\",\n          icon: <ArrowRight className=\"w-4 h-4 ml-2\" />,\n          onClick: onNext,\n        }}\n      >\n        <div className=\"flex flex-col items-center justify-center py-16\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-brand-primary mb-6\"></div>\n          <h3 className=\"text-lg font-medium text-text-primary mb-2\">正在为您推荐微行为...</h3>\n          <p className=\"text-sm text-text-secondary text-center leading-relaxed\">\n            基于您的习惯目标，我们正在分析并推荐\n            <br />\n            最适合的微行为组合\n          </p>\n        </div>\n      </StepLayout>\n    )\n  }\n\n  return (\n    <StepLayout\n      stepNumber={2}\n      stepTitle=\"设计你的微行为\"\n      needsScroll={true}\n      fixedContent={\n        <div className=\"space-y-4\">\n          <Card className=\"border-surface-divider bg-surface-main\">\n            <CardContent className=\"p-4\">\n              <p className=\"text-sm text-text-secondary\">习惯：</p>\n              <p className=\"font-medium text-text-primary\">{habitName}</p>\n            </CardContent>\n          </Card>\n\n          <div>\n            <div className=\"flex justify-between items-center mb-2\">\n              <h3 className=\"font-medium text-text-primary\">推荐的微行为</h3>\n              <span className=\"text-sm text-text-secondary\">\n                已选择 {selectedMicroBehaviors.filter((b) => b.selected).length}/3\n              </span>\n            </div>\n            <p className=\"text-sm text-text-secondary\">选择1-3个简单易行的微行为，让习惯更容易坚持</p>\n          </div>\n        </div>\n      }\n      leftButton={{\n        text: \"上一步\",\n        icon: <ArrowLeft className=\"w-4 h-4 mr-2\" />,\n        onClick: onPrev,\n      }}\n      rightButton={{\n        text: \"下一步\",\n        icon: <ArrowRight className=\"w-4 h-4 ml-2\" />,\n        onClick: onNext,\n      }}\n    >\n      <div className=\"space-y-3\">\n        {selectedMicroBehaviors.map((behavior) => (\n          <Card key={behavior.id} className=\"border-surface-divider\">\n            <CardContent\n              className=\"p-4 cursor-pointer hover:bg-gray-50 transition-colors\"\n              onClick={() => onToggleBehavior(behavior.id)}\n            >\n              <div className=\"flex items-start space-x-3\">\n                <Checkbox\n                  id={behavior.id}\n                  checked={behavior.selected}\n                  onCheckedChange={() => onToggleBehavior(behavior.id)}\n                  className=\"mt-1 pointer-events-none\"\n                />\n                <div className=\"flex-1\">\n                  <Label\n                    htmlFor={behavior.id}\n                    className=\"font-medium cursor-pointer text-text-primary pointer-events-none\"\n                  >\n                    {behavior.title}\n                  </Label>\n                  <p className=\"text-sm text-text-secondary mt-1 pointer-events-none\">{behavior.description}</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n    </StepLayout>\n  )\n}",
            "components/add-habit/SetBehaviorReminders.tsx": "\"use client\"\n\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\"\nimport { Label } from \"@/components/ui/label\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { ArrowLeft, ArrowUp, ArrowDown, Check, Clock, Link } from \"lucide-react\"\nimport { MicroBehavior, AnchorOption, ReminderSettings } from \"./types\"\nimport StepLayout from \"./StepLayout\"\n\ninterface SetBehaviorRemindersProps {\n  selectedMicroBehaviors: MicroBehavior[]\n  reminderSettings: ReminderSettings\n  setReminderSettings: (settings: ReminderSettings | ((prev: ReminderSettings) => ReminderSettings)) => void\n  anchorOptions: AnchorOption[]\n  expandedCards: { [key: string]: boolean }\n  onToggleCardExpanded: (behaviorId: string) => void\n  onComplete: () => void\n  onPrev: () => void\n}\n\nexport default function SetBehaviorReminders({\n  selectedMicroBehaviors,\n  reminderSettings,\n  setReminderSettings,\n  anchorOptions,\n  expandedCards,\n  onToggleCardExpanded,\n  onComplete,\n  onPrev,\n}: SetBehaviorRemindersProps) {\n  const getReminderDisplayText = (behaviorId: string) => {\n    const setting = reminderSettings[behaviorId]\n    if (!setting || !setting.type) {\n      return \"需要设置提醒方式\"\n    }\n\n    if (setting.type === \"anchor\") {\n      if (setting.anchor) {\n        const anchorOption = anchorOptions.find((option) => option.id === setting.anchor)\n        return `自然提醒：${anchorOption?.label || \"未选择锚点\"}`\n      }\n      return \"自然提醒（未选择锚点）\"\n    } else if (setting.type === \"timer\") {\n      if (setting.time) {\n        return `定时提醒：${setting.time}`\n      }\n      return \"定时提醒（未选择时间）\"\n    }\n\n    return \"需要设置提醒方式\"\n  }\n\n  return (\n    <StepLayout\n      stepNumber={3}\n      stepTitle=\"设置提醒\"\n      needsScroll={true}\n      leftButton={{\n        text: \"上一步\",\n        icon: <ArrowLeft className=\"w-4 h-4 mr-2\" />,\n        onClick: onPrev,\n      }}\n      rightButton={{\n        text: \"创建习惯\",\n        icon: <Check className=\"w-4 h-4 mr-2\" />,\n        onClick: onComplete,\n        className: \"bg-brand-primary hover:bg-brand-primary/80 text-white\",\n      }}\n    >\n      <div className=\"space-y-6\">\n        {selectedMicroBehaviors\n          .filter((behavior) => behavior.selected)\n          .map((behavior) => (\n            <Card key={behavior.id} className=\"border-surface-divider\">\n              {expandedCards[behavior.id] ? (\n                // 展开状态 - 完整编辑界面\n                <>\n                  <CardHeader\n                    className=\"pb-3 cursor-pointer hover:bg-gray-50 transition-colors\"\n                    onClick={() => onToggleCardExpanded(behavior.id)}\n                  >\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex-1\">\n                        <CardTitle className=\"text-base text-text-primary\">{behavior.title}</CardTitle>\n                        <p className=\"text-sm text-text-secondary\">{behavior.description}</p>\n                      </div>\n                      <div className=\"ml-2\">\n                        <ArrowUp className=\"w-4 h-4 text-text-secondary\" />\n                      </div>\n                    </div>\n                  </CardHeader>\n                  <CardContent className=\"space-y-4\">\n                    <div>\n                      <Label className=\"text-text-primary font-medium mb-3 block\">选择提醒方式</Label>\n                      <RadioGroup\n                        value={reminderSettings[behavior.id]?.type || \"anchor\"}\n                        onValueChange={(value: \"anchor\" | \"timer\") =>\n                          setReminderSettings((prev) => ({\n                            ...prev,\n                            [behavior.id]: { ...prev[behavior.id], type: value },\n                          }))\n                        }\n                      >\n                        <div className=\"space-y-3\">\n                          <Card className=\"border-brand-secondary bg-blue-50\">\n                            <CardContent className=\"p-3\">\n                              <div className=\"flex items-center space-x-2\">\n                                <RadioGroupItem value=\"anchor\" id={`anchor-${behavior.id}`} />\n                                <Label htmlFor={`anchor-${behavior.id}`} className=\"flex-1 cursor-pointer\">\n                                  <div className=\"flex items-center\">\n                                    <Link className=\"w-4 h-4 mr-2 text-brand-secondary\" />\n                                    <span className=\"font-medium text-text-primary\">自然提醒（推荐）</span>\n                                  </div>\n                                  <p className=\"text-sm text-text-secondary mt-1\">与现有习惯关联，更容易记住</p>\n                                </Label>\n                              </div>\n                            </CardContent>\n                          </Card>\n\n                          <Card className=\"border-surface-divider\">\n                            <CardContent className=\"p-3\">\n                              <div className=\"flex items-center space-x-2\">\n                                <RadioGroupItem value=\"timer\" id={`timer-${behavior.id}`} />\n                                <Label htmlFor={`timer-${behavior.id}`} className=\"flex-1 cursor-pointer\">\n                                  <div className=\"flex items-center\">\n                                    <Clock className=\"w-4 h-4 mr-2 text-text-secondary\" />\n                                    <span className=\"font-medium text-text-primary\">定时提醒</span>\n                                  </div>\n                                  <p className=\"text-sm text-text-secondary mt-1\">设置固定时间提醒</p>\n                                </Label>\n                              </div>\n                            </CardContent>\n                          </Card>\n                        </div>\n                      </RadioGroup>\n                    </div>\n\n                    <div>\n                      {reminderSettings[behavior.id]?.type === \"timer\" ? (\n                        <>\n                          <Label className=\"text-text-primary font-medium\">选择提醒时间</Label>\n                          <Select\n                            onValueChange={(value) =>\n                              setReminderSettings((prev) => ({\n                                ...prev,\n                                [behavior.id]: { ...prev[behavior.id], time: value },\n                              }))\n                            }\n                            value={reminderSettings[behavior.id]?.time}\n                          >\n                            <SelectTrigger className=\"mt-2 border-surface-divider\">\n                              <SelectValue placeholder=\"选择每天的提醒时间\" />\n                            </SelectTrigger>\n                            <SelectContent>\n                              <SelectItem value=\"06:00\">早上 6:00</SelectItem>\n                              <SelectItem value=\"07:00\">早上 7:00</SelectItem>\n                              <SelectItem value=\"08:00\">早上 8:00</SelectItem>\n                              <SelectItem value=\"09:00\">早上 9:00</SelectItem>\n                              <SelectItem value=\"12:00\">中午 12:00</SelectItem>\n                              <SelectItem value=\"18:00\">下午 6:00</SelectItem>\n                              <SelectItem value=\"19:00\">下午 7:00</SelectItem>\n                              <SelectItem value=\"20:00\">下午 8:00</SelectItem>\n                              <SelectItem value=\"21:00\">下午 9:00</SelectItem>\n                              <SelectItem value=\"22:00\">下午 10:00</SelectItem>\n                            </SelectContent>\n                          </Select>\n                        </>\n                      ) : (\n                        <>\n                          <Label className=\"text-text-primary font-medium\">选择锚点习惯</Label>\n                          <Select\n                            onValueChange={(value) =>\n                              setReminderSettings((prev) => ({\n                                ...prev,\n                                [behavior.id]: { ...prev[behavior.id], anchor: value },\n                              }))\n                            }\n                            value={reminderSettings[behavior.id]?.anchor}\n                          >\n                            <SelectTrigger className=\"mt-2 border-surface-divider\">\n                              <SelectValue placeholder=\"选择一个现有的日常习惯\" />\n                            </SelectTrigger>\n                            <SelectContent>\n                              {anchorOptions.map((option) => (\n                                <SelectItem key={option.id} value={option.id}>\n                                  <div>\n                                    <div className=\"font-medium\">{option.label}</div>\n                                    <div className=\"text-sm text-text-secondary\">{option.description}</div>\n                                  </div>\n                                </SelectItem>\n                              ))}\n                            </SelectContent>\n                          </Select>\n                        </>\n                      )}\n                    </div>\n                  </CardContent>\n                </>\n              ) : (\n                // 收起状态 - 简略只读信息\n                <CardContent\n                  className=\"p-4 cursor-pointer hover:bg-gray-50 transition-colors\"\n                  onClick={() => onToggleCardExpanded(behavior.id)}\n                >\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex-1\">\n                      <div className=\"flex items-center justify-between mb-2\">\n                        <h4 className=\"font-medium text-text-primary\">{behavior.title}</h4>\n                        <ArrowDown className=\"w-4 h-4 text-text-secondary\" />\n                      </div>\n                      <p className=\"text-sm text-text-secondary mb-2\">{behavior.description}</p>\n                      <div className=\"flex items-center\">\n                        <span className=\"text-xs text-text-secondary mr-2\">提醒方式:</span>\n                        <span\n                          className={`text-xs ${\n                            reminderSettings[behavior.id]?.type ? \"text-brand-primary\" : \"text-brand-accent\"\n                          }`}\n                        >\n                          {getReminderDisplayText(behavior.id)}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                </CardContent>\n              )}\n            </Card>\n          ))}\n      </div>\n    </StepLayout>\n  )\n}",
            "components/add-habit/SetHabitInfo.tsx": "\"use client\"\n\nimport { Input } from \"@/components/ui/input\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { Label } from \"@/components/ui/label\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\nimport StepLayout from \"./StepLayout\"\n\ninterface SetHabitInfoProps {\n  habitName: string\n  setHabitName: (name: string) => void\n  habitDescription: string\n  setHabitDescription: (description: string) => void\n  onNext: () => void\n  onCancel: () => void\n}\n\nexport default function SetHabitInfo({\n  habitName,\n  setHabitName,\n  habitDescription,\n  setHabitDescription,\n  onNext,\n  onCancel,\n}: SetHabitInfoProps) {\n  return (\n    <StepLayout\n      stepNumber={1}\n      stepTitle=\"定义你的习惯\"\n      needsScroll={false}\n      leftButton={{\n        text: \"取消\",\n        icon: <ArrowLeft className=\"w-4 h-4 mr-2\" />,\n        onClick: onCancel,\n      }}\n      rightButton={{\n        text: \"下一步\",\n        icon: <ArrowRight className=\"w-4 h-4 ml-2\" />,\n        onClick: onNext,\n        disabled: !habitName.trim(),\n      }}\n    >\n      <div className=\"space-y-4\">\n        <div>\n          <Label htmlFor=\"habit-name\" className=\"text-text-primary font-medium\">\n            习惯名称\n          </Label>\n          <Input\n            id=\"habit-name\"\n            value={habitName}\n            onChange={(e) => setHabitName(e.target.value)}\n            placeholder=\"我想养成的好习惯是...\"\n            className=\"mt-2 border-surface-divider focus:border-brand-primary\"\n          />\n        </div>\n\n        <div>\n          <Label htmlFor=\"habit-description\" className=\"text-text-primary font-medium\">\n            习惯说明 (可选)\n          </Label>\n          <Textarea\n            id=\"habit-description\"\n            value={habitDescription}\n            onChange={(e) => setHabitDescription(e.target.value)}\n            placeholder=\"我为什么想养成这个习惯？它对我有什么意义？\"\n            className=\"mt-2 border-surface-divider focus:border-brand-primary min-h-64\"\n          />\n        </div>\n      </div>\n    </StepLayout>\n  )\n}",
            "components/add-habit/StepLayout.tsx": "\"use client\"\n\nimport { Button } from \"@/components/ui/button\"\nimport ProgressIndicator from \"./ProgressIndicator\"\nimport React from \"react\"\n\ninterface StepLayoutProps {\n  stepNumber: number\n  stepTitle: string\n  totalSteps?: number\n  needsScroll?: boolean\n  fixedContent?: React.ReactNode // 固定在滚动区域上方的内容\n  leftButton: {\n    text: string\n    icon: React.ReactNode\n    onClick: () => void\n    variant?: \"ghost\" | \"default\"\n    className?: string\n  }\n  rightButton: {\n    text: string\n    icon: React.ReactNode\n    onClick: () => void\n    disabled?: boolean\n    className?: string\n  }\n  children: React.ReactNode\n}\n\nexport default function StepLayout({\n  stepNumber,\n  stepTitle,\n  totalSteps = 3,\n  needsScroll = false,\n  fixedContent,\n  leftButton,\n  rightButton,\n  children,\n}: StepLayoutProps) {\n  return (\n    <div className=\"flex flex-col h-full\">\n      {/* 顶部固定区域：进度指示器和标题 */}\n      <div className=\"flex-shrink-0 p-4 pb-0\">\n        {/* 进度指示器 */}\n        <div className=\"mb-4\">\n          <ProgressIndicator currentStep={stepNumber} totalSteps={totalSteps} />\n        </div>\n\n        {/* 步骤信息和标题 */}\n        <div className=\"text-center mb-6\">\n          <p className=\"text-xs text-text-secondary mb-2\">第 {stepNumber} 步，共 {totalSteps} 步 · 设计新习惯</p>\n          <h1 className=\"text-2xl font-bold text-text-primary\">{stepTitle}</h1>\n        </div>\n      </div>\n\n      {/* 固定内容区域（可选） */}\n      {fixedContent && (\n        <div className=\"flex-shrink-0 p-4 pb-0\">\n          {fixedContent}\n        </div>\n      )}\n\n      {/* 中间区域：内容 */}\n      {needsScroll ? (\n        <div className=\"flex-1 relative min-h-0 p-4 pb-0\">\n          {/* 滚动容器 */}\n          <div className=\"h-full overflow-y-auto scrollbar-hide\">\n            <div className=\"pt-2 pb-2\">\n              {children}\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"flex-1 min-h-0 p-4 pb-0\">\n          {children}\n        </div>\n      )}\n\n      {/* 底部固定区域：按钮 */}\n      <div className=\"flex-shrink-0 flex justify-between p-4 border-t border-surface-divider\">\n        <Button\n          variant={leftButton.variant || \"ghost\"}\n          onClick={leftButton.onClick}\n          className={leftButton.className || \"text-text-secondary\"}\n        >\n          {leftButton.icon}\n          {leftButton.text}\n        </Button>\n        <Button\n          onClick={rightButton.onClick}\n          disabled={rightButton.disabled}\n          className={rightButton.className || \"bg-brand-primary hover:bg-brand-primary/80 text-white\"}\n        >\n          {rightButton.text}\n          {rightButton.icon}\n        </Button>\n      </div>\n    </div>\n  )\n}",
            "docs/interaction.md": "## **全局导航 (Global Navigation)**\n\n-   **底部标签栏 (Bottom Tab Bar):** 在应用的主要部分保持可见。\n    -   **标签1: 今日 (Today)**\n        -   图标: 例如，日历日图标、勾选标记图标\n        -   标签文字: \"今日\"\n        -   目标页面: 【首页 / 今日行动列表页】\n    -   **标签2: 习惯 (Habits)**\n        -   图标: 例如，列表图标、目标图标\n        -   标签文字: \"习惯\"\n        -   目标页面: 【习惯列表/概览页】\n    -   **标签3: 我的 (Me/Profile)**\n        -   图标: 例如，人像图标、齿轮图标\n        -   标签文字: \"我的\"\n        -   目标页面: 【我的/历史记录页】\n\n## 页面设计\n\n### 1. 欢迎/引导页 (Onboarding Screens)\n\n**页面路径:** `/onboarding` (通常在首次启动时自动显示，之后不再显示，除非用户主动触发或App更新)\n**功能:** 极简介绍App核心理念（围绕福格模型、小改变、习惯养成）。\n**目的:** 新用户首次引导，价值传递。\n\n**内容与交互:**\n-   **屏幕 1: 欢迎语与核心价值**\n    -   **内容:**\n        -   App标志 和 名称。\n        -   欢迎语，例如：\"欢迎来到 [App名称]！\"\n        -   核心价值主张，例如：\"用福格行为模型，轻松改变，成就更好的自己。\"\n        -   简洁图形/动画辅助理解。\n    -   **交互:**\n        -   【下一步】按钮，或支持向左滑动切换到下一屏。\n\n-   **屏幕 2: 福格行为模型简介 (极简)**\n    -   **内容:**\n        -   标题：\"小改变，大不同\" 或 \"福格行为模型如何帮助你\"。\n        -   极简图示或文字解释：行动 = 动机 (M) + 能力 (A) + 提示 (P)。强调\"微行为\"让\"能力\"门槛降低。\n        -   价值点：\"我们将帮助你设计微小的行动，并找到合适的提示。\"\n    -   **交互:**\n        -   【下一步】按钮，或支持向左滑动切换到下一屏。\n        -   【上一步】按钮或向右滑动返回上一屏。\n\n-   **屏幕 3: 锚点与庆祝的重要性 (可选)**\n    -   **内容:**\n        -   标题：\"找到你的锚点，庆祝每个小成功！\"\n        -   简述锚点作用：\"将新习惯与现有日常行为关联起来。\"\n        -   简述庆祝作用：\"即时奖励能强化新行为。\"\n    -   **交互:**\n        -   【下一步】按钮，或支持向左滑动切换到下一屏。\n        -   【上一步】按钮或向右滑动返回上一屏。\n\n-   **屏幕 4: (可选) 权限请求 - 推送通知**\n    -   **内容:**\n        -   标题：\"开启通知，不错过行动时刻。\"\n        -   说明：\"我们将通过通知提醒您执行设定的微行为，帮助您养成习惯。\"\n        -   解释为什么需要此权限。\n    -   **交互:**\n        -   【允许通知】按钮 (触发系统权限请求弹窗)。\n        -   【稍后设置】或【跳过】按钮。\n        -   【上一步】按钮或向右滑动返回上一屏。\n\n-   **屏幕 5: 完成引导 / 开始使用**\n    -   **内容:**\n        -   祝贺语：\"准备好开始你的改变之旅了吗？\"\n    -   **交互:**\n        -   【开始使用】或【完成】按钮，点击后导航至【首页 / 今日行动列表页】(\"今日\"标签页被激活)。\n        -   【上一步】按钮或向右滑动返回上一屏。\n\n-   **全局交互:**\n    -   页面指示器 (例如：小圆点) 显示当前在第几屏/总共几屏。\n\n---\n\n### 2. 今日行动列表页 (Today's Actions Screen)\n\n**页面路径:** `/today` (通过底部\"今日\"标签访问，App启动后（引导页之后）的默认页面， `/` 路径直接跳转到该页)\n**功能:** 显示今日需执行的\"微行为\"列表。提供\"添加新习惯\"的全局入口。\n**目的:** 用户每日打开App的核心操作界面，快速查看今日任务并打卡。\n\n**内容与交互:**\n\n-   **顶部区域:**\n    -   **日期显示:** \"今天, [具体日期] [星期几]\"\n-   **今日微行为列表:**\n    -   **空状态 (没有微行为或所有微行为已完成):**\n        -   **内容:** 显示提示信息，如：\"今日暂无行动计划，去添加新习惯或微行为吧！\" 或 \"太棒了！今日行动已全部完成！\"\n        -   **交互:**\n            -   (若无任何习惯) 引导按钮：【+ 添加第一个习惯】(跳转至【添加/编辑习惯页】)。\n            -   (若有习惯但无今日行动) 引导：可提示检查习惯下的微行为或查看【习惯列表/概览页】。\n    -   **列表项 (每个微行为条目):**\n        -   **内容:**\n            -   **微行为描述:** 例如：\"做5个开合跳\" (清晰、醒目)。\n            -   **所属习惯:** 例如：\"来自：保持健康\" (字体稍小或颜色稍浅)。\n            -   **关联锚点:** 例如：\"锚点：在我刷完牙后\" (字体稍小或颜色稍浅)。\n        -   **交互:**\n            -   **打卡区域/按钮:**\n                -   **形式:** 圆形按钮、在整个条目右侧区域。\n                -   **点击前状态:** 清晰的\"待完成\"状态。\n                -   **点击后交互:**\n                    1.  触发【微行为打卡后的即时反馈】(例如：播放庆祝动画和音效，显示鼓励语)。\n                    2.  该条目状态更新为\"已完成\" (例如：描述文字加删除线、条目整体变灰、打卡按钮变为已选中状态或\"已完成\"文字)。\n                    3.  (可选) 已完成条目自动移动到列表底部或一个\"已完成\"分组。\n-   **导航:**\n    -   **底部标签栏:** \"今日\"标签处于激活状态。用户可以点击其他标签（\"习惯\"、\"我的\"）进行导航。\n\n---\n\n### 3. 习惯列表页 (Habit List Screen)\n\n**页面路径:** `/habits` (通过底部\"习惯\"标签访问)\n**功能:** 显示用户已创建的所有\"习惯\"列表。提供\"添加新习惯\"的按钮。\n**目的:** 用户管理和查看自己所有\"大目标\"的地方。\n\n**内容与交互:**\n-   **页面标题:** \"我的习惯\"\n\n-   **习惯列表:**\n    -   **空状态 (用户未创建任何习惯):**\n        -   **内容:** 显示提示信息，如：\"你还没有创建任何习惯呢！点击下方按钮开始吧。\"\n        -   **交互:** 页面中央或下方显示【+ 添加新习惯】按钮，点击跳转至【添加/编辑习惯页】。\n    -   **列表项 (每个习惯条目):**\n        -   **内容:**\n            -   **习惯名称:** 例如：\"保持健康\"、\"提升写作能力\" (主要信息，醒目)。\n            -   **微行为数量:** 例如：\"包含 X 个微行为\" (次要信息)。\n            -   微行为打卡次数：（次要信息）。\n        -   **交互:**\n            -   **点击整个条目:** 跳转至该习惯的【习惯详情页】。\n    \n-   **\"添加新习惯\"按钮:**\n    -   **位置:** 页面右上角使用\"+\"图标按钮。\n    -   **交互:** 点击跳转至【添加/编辑习惯页】。\n\n-   **导航:**\n    -   **底部标签栏:** \"习惯\"标签处于激活状态。用户可以点击其他标签。\n\n---\n\n### 4. 添加习惯与微行为页 (Add Habit & Micro-behaviors Screen)\n\n**页面路径:**\n-   创建新习惯: `/habits/add` (从【习惯列表页】的\"添加新习惯\"按钮或【今日行动列表页】引导按钮进入)\n\n**功能:** 一站式创建新习惯并配置其初始微行为。\n**目的:** 简化用户操作，引导用户快速完成一个完整习惯的初步设置。\n\n**内容与交互 (多步骤流程):**\n\n-   **步骤 1: 定义习惯**\n    -   **页面标题:** \"创建新习惯 - 第1步：定义你的习惯\"\n    -   **表单区域:**\n        -   **习惯名称输入框:**\n            -   **标签:** \"习惯名称\"\n            -   **占位提示:** 例如：\"我想养成的好习惯是...\" 或 \"例如：每天阅读\"\n        -   **习惯描述输入框 (多行文本):**\n            -   **标签:** \"习惯描述 (可选)\"\n            -   **占位提示:** 例如：\"我为什么想养成这个习惯？它对我有什么意义？\"\n            -   **说明:** 帮助用户思考，也有助于后续微行为的推荐。\n    -   **操作按钮:**\n        -   【下一步】按钮: 保存当前输入，进入步骤2。\n        -   【取消】按钮 (左上角): 放弃创建，返回上一页。\n\n-   **步骤 2: 选择/设计微行为 (推荐与自定义)**\n    -   **页面标题:** \"创建新习惯 - 第2步：设计你的微行为\"\n    -   **所属习惯显示:** \"习惯：[用户输入的习惯名称]\"\n    -   **微行为推荐区域 (基于习惯名称/描述，可选):**\n        -   **内容:** 显示多个根据用户习惯描述智能推荐、符合福格行为模型理论（降低 A）的微行为选项。\n        -   **交互:** 用户通过复选框选择 1~3 个推荐的微行为。\n    -   **操作按钮:**\n        -   【下一步】按钮: 保存微行为，进入步骤3。\n        -   【上一步】按钮: 返回步骤1。\n\n-   **步骤 3: 设置打卡方式与提醒**\n    -   **页面标题:** \"创建新习惯 - 第3步：设置提醒\"\n    -   **为每个已选择/设计的微行为设置:**\n        -   **微行为描述 (仅展示):** \"[微行为描述]\"\n        -   **行动提示 (提醒) 设置:**\n            -   类型一：自然提醒（推荐）。提示用户设置一些自然的锚点，比如：每天早上起床后刷牙\n            -   类型二：外部提醒。在 app 中设置定时提醒\n    -   **操作按钮:**\n        -   【完成创建】按钮:\n            -   **交互:** 保存所有信息，创建习惯和关联的微行为，然后导航至【习惯详情页】或【今日行动列表页】。\n        -   【上一步】按钮: 返回步骤2。\n\n---\n\n### 5. 习惯详情页 (Habit Detail Screen) - MVP简化版\n\n**页面路径:** `/habits/{habit_id}` (从【习惯列表页】点击习惯条目进入，或在创建习惯流程完成后跳转)\n**功能:** 展示特定\"习惯\"的详细信息及其包含的微行为。**MVP阶段仅展示，不提供编辑功能。**\n**目的:** 用户查看习惯和其关联的微行为。\n\n**内容与交互:**\n\n-   **页面顶部/标题区域:**\n    -   **习惯名称:** 醒目显示。\n\n-   **微行为列表区域:**\n    -   **标题/标签:** \"包含的微行为\" 或 \"行动步骤\"\n    -   **列表项 (每个微行为条目，仅展示):**\n        -   **内容:**\n            -   **微行为描述。**\n            -   **关联锚点。**\n            -   **提醒时间 (如果设置了)。**\n\n-   **导航:**\n    -   **返回按钮 (左上角):** 点击返回【习惯列表页】。\n\n---\n\n### 6. 微行为打卡后的即时反馈 (Modal / Overlay / Animation)\n\n**路径:** 非独立页面，交互组件，在【首页/今日行动列表页】打卡时触发。\n**功能:** 当用户在【首页/今日行动列表页】对某个微行为进行打卡后，立即出现视觉/文字/音效的积极反馈。\n**目的:** 强化行为，提供即时满足感，利用福格模型中的\"庆祝\"。\n\n**内容与交互:**\n-   **触发时机:** 用户在【首页/今日行动列表页】点击微行为的\"打卡\"按钮且成功记录后。\n-   **展现形式 (选择一种或组合):**\n    -   **小型模态框 (Modal):**\n        -   **内容:** 庆祝图标/短动画 (如：烟花、小星星、跳跃的勾号 ✔️)；鼓励性文字 (如：\"太棒了！\"、\"为你点赞！\")。\n        -   **交互:** 自动在1-3秒后消失，或点击可立即关闭。\n    -   **Toast / Snackbar 提示:**\n        -   **内容:** 简短文字提示，如：\"[微行为名称] 已完成！\"\n        -   **交互:** 自动在几秒后消失。\n-   **(可选) 音效:** 配合视觉反馈播放短暂、积极的音效。\n-   **核心要素:** 即时性、积极性、简洁性。\n\n---\n\n### 7. 我的页 (Me Screen)\n\n**页面路径:** `/me` (通过底部\"我的\"标签访问)\n**功能:** MVP核心：以日历形式展示用户有行动的日期。提供App设置入口。\n**目的:** 用户回顾自己的行动概览，获得持续激励，并管理App设置。\n\n**内容与交互:**\n-   **页面标题:** \"我的\" 或 \"个人中心\"\n\n-   **用户信息区域 (MVP可简化或省略):**\n    -   **内容:** 用户头像占位符、用户昵称。\n    -   **位置:** 页面顶部。\n\n-   **行动日历 (核心历史记录):**\n    -   **标题/标签:** \"我的足迹\"、\"行动日历\" 或 \"打卡日历\"\n    -   **展现形式:**\n        -   **月历视图:** 显示当前月份的日历网格。\n        -   **日期标记:** 对于用户至少完成一个微行为的日期，在日历上进行视觉标记 (例如：一个实心圆点、日期数字背景色高亮)。\n    -   **交互:**\n        -   **切换月份:**\n            -   提供【< 上个月】和【下个月 >】的箭头按钮或手势滑动切换月份。\n            -   显示当前查看的年份和月份 (例如：\"2023年 10月\")。\n        -   **点击日期 (MVP行为):**\n            -   点击已标记日期，可弹出一个非常简洁的提示，例如：\"[日期] 已打卡\" 或 \"[日期] 你行动了！\"。**不在此处显示具体的微行为列表。**\n            -   点击未标记日期无交互。\n    -   **空状态 (如果整个月份都没有打卡记录):**\n        -   日历正常显示，但没有任何日期被标记。\n        -   (可选) 在日历下方或月份标题旁显示：\"本月暂无行动记录。\"\n\n-   **(可选，但推荐) 简单统计数据:**\n    -   **位置:** 日历上方或下方。\n    -   **内容:**\n        -   \"累计行动天数：X 天\"\n        -   \"总完成微行为：Y 次\"\n        -   \"最长连续行动：Z 天\"\n\n-   **设置与更多 (列表形式):**\n    -   **条目1: 通知设置**\n        -   **文本:** \"通知提醒设置\"\n        -   **交互:** 点击后跳转到系统通知设置页或App内通知设置页。\n    -   **条目2: 关于我们/App**\n        -   **文本:** \"关于 [App名称]\"\n        -   **交互:** 点击后进入简单页面，显示App版本号等信息。\n    -   **(可选) 条目3: 评价App**\n        -   **文本:** \"喜欢我们吗？给个好评吧！\"\n        -   **交互:** 点击后跳转到应用商店评分页面。\n    -   **(可选) 条目4: 意见反馈**\n        -   **文本:** \"意见反馈\"\n        -   **交互:** 点击后打开邮件客户端或反馈表单。\n\n-   **导航:**\n    -   **底部标签栏:** \"我的\"标签处于激活状态。用户可以点击其他标签。"
        },
        "deleted_files": []
    },
    {
        "commit_message": "refactor progress indicator",
        "added_files": {},
        "modified_files": {
            "components/add-habit/ProgressIndicator.tsx": "\"use client\"\n\nimport { Check } from \"lucide-react\"\n\ninterface ProgressIndicatorProps {\n  currentStep: number\n  totalSteps: number\n}\n\nexport default function ProgressIndicator({ currentStep, totalSteps }: ProgressIndicatorProps) {\n  // 渲染步骤圆圈\n  const renderStepCircle = (step: number, currentStep: number) => {\n    let circleClassName = \"w-6 h-6 rounded-full flex items-center justify-center\";\n    \n    if (step < currentStep) {\n      circleClassName += \" bg-brand-primary text-white\"\n      return (\n        <div className={circleClassName}>\n          <Check className=\"w-3 h-3\" />\n        </div>\n      );\n    } else {\n      circleClassName += \" border-2 bg-transparent\";\n      if (step === currentStep) {\n        circleClassName += \" border-brand-primary\";\n      } else {\n        circleClassName += \" border-brand-primary/60\";\n      }\n      return (\n        <div className={circleClassName}></div>\n      );\n    }\n  }\n  \n  // 渲染连接线\n  const renderConnector = (step: number, currentStep: number, totalSteps: number) => {\n    if (step >= totalSteps) {\n      return null;\n    }\n\n    let connectorClassName = \"w-6 h-0.5 mx-1\";\n    if (step < currentStep) {\n      connectorClassName += \" bg-brand-primary\";\n    } else {\n      connectorClassName += \" bg-brand-primary/60\";\n    }\n    \n    return (\n      <div className={connectorClassName} />\n    )\n  }\n\n  return (\n    <div className=\"flex justify-center\">\n      <div className=\"flex items-center space-x-1\">\n        {Array.from({ length: totalSteps }, (_, index) => {\n          const step = index + 1\n          return (\n            <div key={step} className=\"flex items-center\">\n              {renderStepCircle(step, currentStep)}\n              {renderConnector(step, currentStep, totalSteps)}\n            </div>\n          )\n        })}\n      </div>\n    </div>\n  )\n}"
        },
        "deleted_files": []
    },
    {
        "commit_message": "suggestions",
        "added_files": {
            "app/api/behavior-suggestions/route.ts": "import { NextRequest, NextResponse } from 'next/server'\n\nconst SUPABASE_API_URL = 'https://fzbvjcftjcxymsogwvpj.supabase.co/functions/v1/get-habit-suggestions'\n\nexport async function POST(request: NextRequest) {\n  try {\n    // 获取请求体\n    const body = await request.json()\n    \n    // 转发请求到Supabase API\n    const response = await fetch(SUPABASE_API_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(body),\n    })\n\n    if (!response.ok) {\n      return NextResponse.json(\n        { error: `API请求失败: ${response.status} ${response.statusText}` },\n        { status: response.status }\n      )\n    }\n\n    const data = await response.json()\n    \n    // 返回数据，Next.js会自动设置CORS头\n    return NextResponse.json(data)\n    \n  } catch (error) {\n    console.error('代理API请求失败:', error)\n    return NextResponse.json(\n      { error: '服务器内部错误' },\n      { status: 500 }\n    )\n  }\n}",
            "lib/behavior-suggestion.ts": "import { MicroBehavior } from \"@/components/add-habit/types\"\n\nconst API_URL = '/api/behavior-suggestions'\n\nexport interface BehaviorSuggestionRequest {\n  habit: {\n    title: string\n    description: string\n  }\n}\n\nexport interface BehaviorSuggestionResponse {\n  suggestions: {\n    title: string\n    description: string\n  }[]\n}\n\nexport async function getBehaviorSuggestions(\n  habitTitle: string,\n  habitDescription: string\n): Promise<MicroBehavior[]> {\n  const requestData: BehaviorSuggestionRequest = {\n    habit: {\n      title: habitTitle,\n      description: habitDescription,\n    },\n  }\n\n  try {\n    const response = await fetch(API_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(requestData),\n    })\n\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}))\n      throw new Error(errorData.error || `API请求失败: ${response.status} ${response.statusText}`)\n    }\n\n    const data: BehaviorSuggestionResponse = await response.json()\n\n    if (!data.suggestions || !Array.isArray(data.suggestions)) {\n      throw new Error('API返回数据格式错误')\n    }\n\n    // 转换API数据为组件需要的格式\n    return data.suggestions.map((suggestion, index) => ({\n      id: (index + 1).toString(), // 简单递增数字ID\n      title: suggestion.title,\n      description: suggestion.description,\n      selected: false,\n    }))\n  } catch (error) {\n    console.error('获取习惯建议失败:', error)\n    throw error\n  }\n}",
            "supabase/get-habit-suggestions.js": "// Setup type definitions for built-in Supabase Runtime APIs\nimport \"jsr:@supabase/functions-js/edge-runtime.d.ts\";\nimport { OpenAI } from \"npm:openai@4.8.0\";\n\nconst openai = new OpenAI({\n  baseURL: 'https://api.deepseek.com',\n  apiKey: Deno.env.get('DEEPSEEK_API_KEY')\n});\n\nDeno.serve(async (req)=>{\n  const { habit } = await req.json();\n\n  const systemPrompt = `\n  你是一个习惯拆分专家，擅长根据用户输入的习惯内容与习惯描述，生成该习惯拆分为微行为的建议。\n  `;\n\n  const userPrompt = `\n  请根据福格行为模型原理，分析用户输入的习惯内容与习惯描述，生成10条将该习惯拆分为微行为的建议。\n  注意：输出格式为 JSON 数组，每个元素为一个对象，对象包含 title 和 description 两个字段。严格按照示例输出格式输出，禁止输出任何其他内容。\n\n  示例输入：\n  习惯内容：每天阅读30分钟；习惯描述：更好地理解这个世界。\n\n  示例输出：\n  [\n    {\n      title: \"打开书本\",\n      description: \"每天只需要打开一本书，翻到任意一页\"\n    },\n    {\n      title: \"阅读一段话\",\n      description: \"读完一个段落就算完成\"\n    },\n    {\n      title: \"阅读2分钟\",\n      description: \"设置计时器，专注阅读2分钟\"\n    },\n    {\n      title: \"准备阅读环境\",\n      description: \"找一个安静的地方，准备好书本和水杯\"\n    },\n    {\n      title: \"记录一个想法\",\n      description: \"阅读后写下一句话的感受或想法\"\n    },\n    {\n      title: \"朗读一句话\",\n      description: \"大声朗读书中的任意一句话\"\n    },\n    {\n      title: \"标记一个重点\",\n      description: \"用笔或便签标记一个有趣的内容\"\n    },\n    {\n      title: \"翻阅目录\",\n      description: \"浏览书本目录，选择感兴趣的章节\"\n    },\n    {\n      title: \"设置阅读提醒\",\n      description: \"在手机上设置明天的阅读提醒\"\n    },\n    {\n      title: \"分享阅读计划\",\n      description: \"告诉朋友或家人你今天的阅读计划\"\n    },\n  ]\n\n  用户输入的习惯内容：${habit.title}\n  用户输入的习惯描述：${habit.description}\n  `;\n\n  const response = await openai.chat.completions.create({\n    model: \"deepseek-chat\",\n    messages: [\n      {\n        role: \"system\",\n        content: systemPrompt\n      },\n      {\n        role: \"user\",\n        content: userPrompt\n      }\n    ]\n  });\n\n  const result = response.choices[0].message.content;\n  const suggestions = JSON.parse(result);\n\n  return new Response(JSON.stringify({\n    suggestions: suggestions\n  }), {\n    headers: {\n      'Content-Type': 'application/json',\n      'Connection': 'keep-alive'\n    }\n  });\n});"
        },
        "modified_files": {
            "app/habits/add/page.tsx": "\"use client\"\n\nimport { useState } from \"react\"\nimport { useToast } from \"@/hooks/use-toast\"\nimport { Toaster } from \"@/components/ui/toaster\"\nimport SetHabitInfo from \"@/components/add-habit/SetHabitInfo\"\nimport SelectBehaviors from \"@/components/add-habit/SelectBehaviors\"\nimport SetBehaviorReminders from \"@/components/add-habit/SetBehaviorReminders\"\nimport { MicroBehavior, AnchorOption, ReminderSettings } from \"@/components/add-habit/types\"\n\nexport default function AddHabitPage() {\n  const [currentStep, setCurrentStep] = useState(1)\n  const [habitName, setHabitName] = useState(\"\")\n  const [habitDescription, setHabitDescription] = useState(\"\")\n  const [selectedMicroBehaviors, setSelectedMicroBehaviors] = useState<MicroBehavior[]>([])\n  const [reminderSettings, setReminderSettings] = useState<ReminderSettings>({})\n  const { toast } = useToast()\n  const [expandedCards, setExpandedCards] = useState<{ [key: string]: boolean }>({})\n\n  const anchorOptions: AnchorOption[] = [\n    { id: \"morning-brush\", label: \"早上刷牙后\", description: \"利用晨间例行公事\" },\n    { id: \"coffee\", label: \"喝咖啡/茶时\", description: \"与日常饮品习惯结合\" },\n    { id: \"lunch-break\", label: \"午休时间\", description: \"利用工作间隙\" },\n    { id: \"before-sleep\", label: \"睡前\", description: \"作为放松活动\" },\n    { id: \"commute\", label: \"通勤路上\", description: \"利用交通时间\" },\n  ]\n\n  const handleNextStep = () => {\n    if (currentStep === 1) {\n      setCurrentStep(2)\n    } else if (currentStep === 2) {\n      // 这个逻辑现在由SelectBehaviors组件的onNext处理\n      // 这里不应该到达，因为SelectBehaviors会直接调用handleSelectBehaviors\n    }\n  }\n\n  const handleSelectBehaviors = (behaviors: MicroBehavior[]) => {\n    setSelectedMicroBehaviors(behaviors)\n    \n    // 为选中的微行为初始化展开状态和默认提醒设置\n    const initialExpandedState: { [key: string]: boolean } = {}\n    const initialReminderSettings: ReminderSettings = { ...reminderSettings }\n\n    behaviors\n      .filter((b) => b.selected)\n      .forEach((behavior) => {\n        initialExpandedState[behavior.id] = true\n        // 如果该微行为还没有提醒设置，初始化为默认的自然提醒\n        if (!initialReminderSettings[behavior.id]) {\n          initialReminderSettings[behavior.id] = { type: \"anchor\" }\n        }\n      })\n\n    setExpandedCards(initialExpandedState)\n    setReminderSettings(initialReminderSettings)\n    setCurrentStep(3)\n  }\n\n  const handlePrevStep = () => {\n    setCurrentStep((prev) => Math.max(prev - 1, 1))\n  }\n\n  const handleComplete = () => {\n    // 这里处理完成创建的逻辑\n    const habitData = {\n      habitName,\n      habitDescription,\n      selectedMicroBehaviors: selectedMicroBehaviors.filter((b) => b.selected),\n      reminderSettings,\n    }\n\n    console.log(\"创建习惯:\", habitData)\n\n    // 将数据存储到 localStorage 或通过其他方式传递给下一个页面\n    localStorage.setItem(\"newHabitData\", JSON.stringify(habitData))\n\n    // 导航到完成页面\n    window.location.href = \"/habits/completeAdd\"\n  }\n\n  const toggleCardExpanded = (behaviorId: string) => {\n    setExpandedCards((prev) => ({\n      ...prev,\n      [behaviorId]: !prev[behaviorId],\n    }))\n  }\n\n  return (\n    <div className=\"min-h-screen bg-surface-main\">\n      {/* 步骤内容 */}\n      <div className=\"h-screen flex flex-col\">\n        {/* 步骤内容区域 - 占用全部空间 */}\n        <div className=\"flex-1 min-h-0\">\n          {currentStep === 1 && (\n            <SetHabitInfo\n              habitName={habitName}\n              setHabitName={setHabitName}\n              habitDescription={habitDescription}\n              setHabitDescription={setHabitDescription}\n              onNext={handleNextStep}\n              onCancel={() => window.history.back()}\n            />\n          )}\n          {currentStep === 2 && (\n            <SelectBehaviors\n              habitName={habitName}\n              habitDescription={habitDescription}\n              onNext={handleSelectBehaviors}\n              onPrev={handlePrevStep}\n            />\n          )}\n          {currentStep === 3 && (\n            <SetBehaviorReminders\n              selectedMicroBehaviors={selectedMicroBehaviors}\n              reminderSettings={reminderSettings}\n              setReminderSettings={setReminderSettings}\n              anchorOptions={anchorOptions}\n              expandedCards={expandedCards}\n              onToggleCardExpanded={toggleCardExpanded}\n              onComplete={handleComplete}\n              onPrev={handlePrevStep}\n            />\n          )}\n        </div>\n      </div>\n      <Toaster />\n    </div>\n  )\n}",
            "components/add-habit/SelectBehaviors.tsx": "\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { Card, CardContent } from \"@/components/ui/card\"\nimport { Checkbox } from \"@/components/ui/checkbox\"\nimport { Label } from \"@/components/ui/label\"\nimport { Button } from \"@/components/ui/button\"\nimport { ArrowLeft, ArrowRight, AlertCircle, RotateCcw } from \"lucide-react\"\nimport { MicroBehavior } from \"./types\"\nimport { getBehaviorSuggestions } from \"@/lib/behavior-suggestion\"\nimport StepLayout from \"./StepLayout\"\n\ninterface SelectBehaviorsProps {\n  habitName: string\n  habitDescription: string\n  onNext: (selectedBehaviors: MicroBehavior[]) => void\n  onPrev: () => void\n}\n\nexport default function SelectBehaviors({\n  habitName,\n  habitDescription,\n  onNext,\n  onPrev,\n}: SelectBehaviorsProps) {\n  const [selectedMicroBehaviors, setSelectedMicroBehaviors] = useState<MicroBehavior[]>([])\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState<string>(\"\")\n\n  const fetchBehaviorSuggestions = async () => {\n    try {\n      setIsLoading(true)\n      setError(\"\")\n      \n      const suggestions = await getBehaviorSuggestions(habitName, habitDescription)\n      setSelectedMicroBehaviors(suggestions)\n      \n    } catch (error) {\n      console.error(\"获取行为建议失败:\", error)\n      setError(error instanceof Error ? error.message : \"获取建议失败，请重试\")\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  // 组件挂载时自动获取建议\n  useEffect(() => {\n    fetchBehaviorSuggestions()\n  }, [habitName, habitDescription])\n\n  const handleMicroBehaviorToggle = (behaviorId: string) => {\n    const selectedCount = selectedMicroBehaviors.filter((b) => b.selected).length\n    const behavior = selectedMicroBehaviors.find((b) => b.id === behaviorId)\n\n    // 如果要选择第4个，直接返回，不显示toast\n    if (!behavior?.selected && selectedCount >= 3) {\n      return\n    }\n\n    setSelectedMicroBehaviors((prev) =>\n      prev.map((behavior) => (behavior.id === behaviorId ? { ...behavior, selected: !behavior.selected } : behavior)),\n    )\n  }\n\n  const handleNext = () => {\n    const selectedCount = selectedMicroBehaviors.filter((b) => b.selected).length\n    if (selectedCount === 0) {\n      return\n    }\n    onNext(selectedMicroBehaviors)\n  }\n\n  const handleRetry = () => {\n    fetchBehaviorSuggestions()\n  }\n\n  if (isLoading) {\n    return (\n      <StepLayout\n        stepNumber={2}\n        stepTitle=\"设计你的微行为\"\n        needsScroll={false}\n        fixedContent={\n          <Card className=\"border-surface-divider bg-surface-main\">\n            <CardContent className=\"p-4\">\n              <p className=\"text-sm text-text-secondary\">习惯：</p>\n              <p className=\"font-medium text-text-primary\">{habitName}</p>\n            </CardContent>\n          </Card>\n        }\n        leftButton={{\n          text: \"上一步\",\n          icon: <ArrowLeft className=\"w-4 h-4 mr-2\" />,\n          onClick: onPrev,\n        }}\n        rightButton={{\n          text: \"下一步\",\n          icon: <ArrowRight className=\"w-4 h-4 ml-2\" />,\n          onClick: handleNext,\n          disabled: true,\n        }}\n      >\n        <div className=\"flex flex-col items-center justify-center py-16\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-brand-primary mb-6\"></div>\n          <h3 className=\"text-lg font-medium text-text-primary mb-2\">正在为您推荐微行为...</h3>\n          <p className=\"text-sm text-text-secondary text-center leading-relaxed\">\n            基于您的习惯目标，我们正在分析并推荐\n            <br />\n            最适合的微行为组合\n          </p>\n        </div>\n      </StepLayout>\n    )\n  }\n\n  if (error) {\n    return (\n      <StepLayout\n        stepNumber={2}\n        stepTitle=\"设计你的微行为\"\n        needsScroll={false}\n        fixedContent={\n          <Card className=\"border-surface-divider bg-surface-main\">\n            <CardContent className=\"p-4\">\n              <p className=\"text-sm text-text-secondary\">习惯：</p>\n              <p className=\"font-medium text-text-primary\">{habitName}</p>\n            </CardContent>\n          </Card>\n        }\n        leftButton={{\n          text: \"上一步\",\n          icon: <ArrowLeft className=\"w-4 h-4 mr-2\" />,\n          onClick: onPrev,\n        }}\n        rightButton={{\n          text: \"重试\",\n          icon: <RotateCcw className=\"w-4 h-4 ml-2\" />,\n          onClick: handleRetry,\n        }}\n      >\n        <div className=\"flex flex-col items-center justify-center py-16\">\n          <div className=\"bg-red-50 border border-red-200 rounded-lg p-6 max-w-md\">\n            <div className=\"flex items-start space-x-3\">\n              <AlertCircle className=\"w-6 h-6 text-red-500 mt-0.5 flex-shrink-0\" />\n              <div className=\"flex-1\">\n                <h3 className=\"text-lg font-medium text-red-800 mb-2\">获取建议失败</h3>\n                <p className=\"text-sm text-red-700 mb-4\">{error}</p>\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={handleRetry}\n                  className=\"border-red-300 text-red-700 hover:bg-red-100\"\n                >\n                  <RotateCcw className=\"w-4 h-4 mr-2\" />\n                  重试\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </StepLayout>\n    )\n  }\n\n  return (\n    <StepLayout\n      stepNumber={2}\n      stepTitle=\"设计你的微行为\"\n      needsScroll={true}\n      fixedContent={\n        <div className=\"space-y-4\">\n          <Card className=\"border-surface-divider bg-surface-main\">\n            <CardContent className=\"p-4\">\n              <p className=\"text-sm text-text-secondary\">习惯：</p>\n              <p className=\"font-medium text-text-primary\">{habitName}</p>\n            </CardContent>\n          </Card>\n\n          <div>\n            <div className=\"flex justify-between items-center mb-2\">\n              <h3 className=\"font-medium text-text-primary\">推荐的微行为</h3>\n              <span className=\"text-sm text-text-secondary\">\n                已选择 {selectedMicroBehaviors.filter((b) => b.selected).length}/3\n              </span>\n            </div>\n            <p className=\"text-sm text-text-secondary\">选择1-3个简单易行的微行为，让习惯更容易坚持</p>\n          </div>\n        </div>\n      }\n      leftButton={{\n        text: \"上一步\",\n        icon: <ArrowLeft className=\"w-4 h-4 mr-2\" />,\n        onClick: onPrev,\n      }}\n      rightButton={{\n        text: \"下一步\",\n        icon: <ArrowRight className=\"w-4 h-4 ml-2\" />,\n        onClick: handleNext,\n        disabled: selectedMicroBehaviors.filter((b) => b.selected).length === 0,\n      }}\n    >\n      <div className=\"space-y-3\">\n        {selectedMicroBehaviors.map((behavior) => (\n          <Card key={behavior.id} className=\"border-surface-divider\">\n            <CardContent\n              className=\"p-4 cursor-pointer hover:bg-gray-50 transition-colors\"\n              onClick={() => handleMicroBehaviorToggle(behavior.id)}\n            >\n              <div className=\"flex items-start space-x-3\">\n                <Checkbox\n                  id={behavior.id}\n                  checked={behavior.selected}\n                  onCheckedChange={() => handleMicroBehaviorToggle(behavior.id)}\n                  className=\"mt-1 pointer-events-none\"\n                />\n                <div className=\"flex-1\">\n                  <Label\n                    htmlFor={behavior.id}\n                    className=\"font-medium cursor-pointer text-text-primary pointer-events-none\"\n                  >\n                    {behavior.title}\n                  </Label>\n                  <p className=\"text-sm text-text-secondary mt-1 pointer-events-none\">{behavior.description}</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n    </StepLayout>\n  )\n}"
        },
        "deleted_files": []
    }
]
